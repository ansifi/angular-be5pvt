{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, HostListener, Input, PLATFORM_ID, Optional, Inject, Host, Self, HostBinding, EventEmitter, Output, NgModule } from '@angular/core';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i1 from '@ngrx/store';\nimport { ActionsSubject } from '@ngrx/store'; // NOTE: the explicit type declaration for the `TYPE` properties is required\n// for the output declarations to properly use the literal string type instead\n// of just `string`\n\nclass SetValueAction {\n  constructor(controlId, value) {\n    this.controlId = controlId;\n    this.value = value;\n    this.type = SetValueAction.TYPE;\n  }\n\n}\n\nSetValueAction.TYPE = 'ngrx/forms/SET_VALUE';\n\nclass SetErrorsAction {\n  constructor(controlId, errors) {\n    this.controlId = controlId;\n    this.errors = errors;\n    this.type = SetErrorsAction.TYPE;\n  }\n\n}\n\nSetErrorsAction.TYPE = 'ngrx/forms/SET_ERRORS';\n\nclass SetAsyncErrorAction {\n  constructor(controlId, name, value) {\n    this.controlId = controlId;\n    this.name = name;\n    this.value = value;\n    this.type = SetAsyncErrorAction.TYPE;\n  }\n\n}\n\nSetAsyncErrorAction.TYPE = 'ngrx/forms/SET_ASYNC_ERROR';\n\nclass ClearAsyncErrorAction {\n  constructor(controlId, name) {\n    this.controlId = controlId;\n    this.name = name;\n    this.type = ClearAsyncErrorAction.TYPE;\n  }\n\n}\n\nClearAsyncErrorAction.TYPE = 'ngrx/forms/CLEAR_ASYNC_ERROR';\n\nclass StartAsyncValidationAction {\n  constructor(controlId, name) {\n    this.controlId = controlId;\n    this.name = name;\n    this.type = StartAsyncValidationAction.TYPE;\n  }\n\n}\n\nStartAsyncValidationAction.TYPE = 'ngrx/forms/START_ASYNC_VALIDATION';\n\nclass MarkAsDirtyAction {\n  constructor(controlId) {\n    this.controlId = controlId;\n    this.type = MarkAsDirtyAction.TYPE;\n  }\n\n}\n\nMarkAsDirtyAction.TYPE = 'ngrx/forms/MARK_AS_DIRTY';\n\nclass MarkAsPristineAction {\n  constructor(controlId) {\n    this.controlId = controlId;\n    this.type = MarkAsPristineAction.TYPE;\n  }\n\n}\n\nMarkAsPristineAction.TYPE = 'ngrx/forms/MARK_AS_PRISTINE';\n\nclass EnableAction {\n  constructor(controlId) {\n    this.controlId = controlId;\n    this.type = EnableAction.TYPE;\n  }\n\n}\n\nEnableAction.TYPE = 'ngrx/forms/ENABLE';\n\nclass DisableAction {\n  constructor(controlId) {\n    this.controlId = controlId;\n    this.type = DisableAction.TYPE;\n  }\n\n}\n\nDisableAction.TYPE = 'ngrx/forms/DISABLE';\n\nclass MarkAsTouchedAction {\n  constructor(controlId) {\n    this.controlId = controlId;\n    this.type = MarkAsTouchedAction.TYPE;\n  }\n\n}\n\nMarkAsTouchedAction.TYPE = 'ngrx/forms/MARK_AS_TOUCHED';\n\nclass MarkAsUntouchedAction {\n  constructor(controlId) {\n    this.controlId = controlId;\n    this.type = MarkAsUntouchedAction.TYPE;\n  }\n\n}\n\nMarkAsUntouchedAction.TYPE = 'ngrx/forms/MARK_AS_UNTOUCHED';\n\nclass FocusAction {\n  constructor(controlId) {\n    this.controlId = controlId;\n    this.type = FocusAction.TYPE;\n  }\n\n}\n\nFocusAction.TYPE = 'ngrx/forms/FOCUS';\n\nclass UnfocusAction {\n  constructor(controlId) {\n    this.controlId = controlId;\n    this.type = UnfocusAction.TYPE;\n  }\n\n}\n\nUnfocusAction.TYPE = 'ngrx/forms/UNFOCUS';\n\nclass MarkAsSubmittedAction {\n  constructor(controlId) {\n    this.controlId = controlId;\n    this.type = MarkAsSubmittedAction.TYPE;\n  }\n\n}\n\nMarkAsSubmittedAction.TYPE = 'ngrx/forms/MARK_AS_SUBMITTED';\n\nclass MarkAsUnsubmittedAction {\n  constructor(controlId) {\n    this.controlId = controlId;\n    this.type = MarkAsUnsubmittedAction.TYPE;\n  }\n\n}\n\nMarkAsUnsubmittedAction.TYPE = 'ngrx/forms/MARK_AS_UNSUBMITTED';\n\nclass AddArrayControlAction {\n  constructor(controlId, value, index) {\n    this.controlId = controlId;\n    this.value = value;\n    this.index = index;\n    this.type = AddArrayControlAction.TYPE;\n  }\n\n}\n\nAddArrayControlAction.TYPE = 'ngrx/forms/ADD_ARRAY_CONTROL';\n\nclass AddGroupControlAction {\n  constructor(controlId, name, value) {\n    this.controlId = controlId;\n    this.name = name;\n    this.value = value;\n    this.type = AddGroupControlAction.TYPE;\n  }\n\n}\n\nAddGroupControlAction.TYPE = 'ngrx/forms/ADD_GROUP_CONTROL';\n\nclass RemoveArrayControlAction {\n  constructor(controlId, index) {\n    this.controlId = controlId;\n    this.index = index;\n    this.type = RemoveArrayControlAction.TYPE;\n  }\n\n}\n\nRemoveArrayControlAction.TYPE = 'ngrx/forms/REMOVE_ARRAY_CONTROL';\n\nclass SwapArrayControlAction {\n  constructor(controlId, fromIndex, toIndex) {\n    this.controlId = controlId;\n    this.fromIndex = fromIndex;\n    this.toIndex = toIndex;\n    this.type = SwapArrayControlAction.TYPE;\n  }\n\n}\n\nSwapArrayControlAction.TYPE = 'ngrx/forms/SWAP_ARRAY_CONTROL';\n\nclass MoveArrayControlAction {\n  constructor(controlId, fromIndex, toIndex) {\n    this.controlId = controlId;\n    this.fromIndex = fromIndex;\n    this.toIndex = toIndex;\n    this.type = MoveArrayControlAction.TYPE;\n  }\n\n}\n\nMoveArrayControlAction.TYPE = 'ngrx/forms/MOVE_ARRAY_CONTROL';\n\nclass RemoveGroupControlAction {\n  constructor(controlId, name) {\n    this.controlId = controlId;\n    this.name = name;\n    this.type = RemoveGroupControlAction.TYPE;\n  }\n\n}\n\nRemoveGroupControlAction.TYPE = 'ngrx/forms/REMOVE_CONTROL';\n\nclass SetUserDefinedPropertyAction {\n  constructor(controlId, name, value) {\n    this.controlId = controlId;\n    this.name = name;\n    this.value = value;\n    this.type = SetUserDefinedPropertyAction.TYPE;\n  }\n\n}\n\nSetUserDefinedPropertyAction.TYPE = 'ngrx/forms/SET_USER_DEFINED_PROPERTY';\n\nclass ResetAction {\n  constructor(controlId) {\n    this.controlId = controlId;\n    this.type = ResetAction.TYPE;\n  }\n\n}\n\nResetAction.TYPE = 'ngrx/forms/RESET';\n\nfunction isNgrxFormsAction(action) {\n  return !!action.type && action.type.startsWith('ngrx/forms/');\n}\n\nconst ALL_NGRX_FORMS_ACTION_TYPES = [SetValueAction.TYPE, SetErrorsAction.TYPE, SetAsyncErrorAction.TYPE, ClearAsyncErrorAction.TYPE, StartAsyncValidationAction.TYPE, MarkAsDirtyAction.TYPE, MarkAsPristineAction.TYPE, EnableAction.TYPE, DisableAction.TYPE, MarkAsTouchedAction.TYPE, MarkAsUntouchedAction.TYPE, FocusAction.TYPE, UnfocusAction.TYPE, MarkAsSubmittedAction.TYPE, MarkAsUnsubmittedAction.TYPE, AddGroupControlAction.TYPE, RemoveGroupControlAction.TYPE, AddArrayControlAction.TYPE, RemoveArrayControlAction.TYPE, SetUserDefinedPropertyAction.TYPE, ResetAction.TYPE, SwapArrayControlAction.TYPE, MoveArrayControlAction.TYPE];\n\nfunction isBoxed(value) {\n  return !!value && value.__boxed === '';\n}\n\nfunction box(value) {\n  return {\n    __boxed: '',\n    value\n  };\n}\n\nfunction unbox(value) {\n  if (['string', 'boolean', 'number', 'undefined'].indexOf(typeof value) >= 0 || value === null) {\n    return value;\n  }\n\n  if (isBoxed(value)) {\n    return value.value;\n  }\n\n  if (Array.isArray(value)) {\n    return value.map(unbox);\n  }\n\n  return Object.keys(value).reduce((a, k) => Object.assign(a, {\n    [k]: unbox(value[k])\n  }), {});\n}\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nconst defaultOptions = {\n  treatUndefinedAndMissingKeyAsSame: false\n};\n\nfunction deepEquals(_1, _2, options = {}) {\n  const {\n    treatUndefinedAndMissingKeyAsSame\n  } = Object.assign({}, defaultOptions, options);\n  const leftChain = [];\n  const rightChain = [];\n\n  function compare2Objects(x, y) {\n    let p; // remember that NaN === NaN returns false\n    // and isNaN(undefined) returns true\n\n    if (isNaN(x) && isNaN(y) && typeof x === 'number' && typeof y === 'number') {\n      return true;\n    } // Compare primitives and functions.\n    // Check if both arguments link to the same object.\n    // Especially useful on the step where we compare prototypes\n\n\n    if (x === y) {\n      return true;\n    } // Works in case when functions are created in constructor.\n    // Comparing dates is a common scenario. Another built-ins?\n    // We can even handle functions passed across iframes\n\n\n    if (typeof x === 'function' && typeof y === 'function' || x instanceof Date && y instanceof Date || x instanceof RegExp && y instanceof RegExp || x instanceof String && y instanceof String || x instanceof Number && y instanceof Number) {\n      return x.toString() === y.toString();\n    } // At last checking prototypes as good as we can\n\n\n    if (!(x instanceof Object && y instanceof Object)) {\n      return false;\n    }\n\n    if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) {\n      return false;\n    }\n\n    if (x.constructor !== y.constructor) {\n      return false;\n    } // Check for infinitive linking loops\n\n\n    if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) {\n      return false;\n    } // Quick checking of one object being a subset of another.\n\n\n    for (p in y) {\n      if (treatUndefinedAndMissingKeyAsSame && y.hasOwnProperty(p) && !x.hasOwnProperty(p) && y[p] === undefined) {\n        continue;\n      }\n\n      if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n        return false;\n      } else if (typeof y[p] !== typeof x[p]) {\n        return false;\n      }\n    } // tslint:disable:forin\n\n\n    for (p in x) {\n      if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n        if (!treatUndefinedAndMissingKeyAsSame || !x.hasOwnProperty(p) || y.hasOwnProperty(p) || x[p] !== undefined) {\n          return false;\n        }\n      }\n\n      switch (typeof x[p]) {\n        case 'object':\n        case 'function':\n          leftChain.push(x);\n          rightChain.push(y);\n\n          if (!compare2Objects(x[p], y[p])) {\n            return false;\n          }\n\n          leftChain.pop();\n          rightChain.pop();\n          break;\n\n        default:\n          if (x[p] !== y[p]) {\n            return false;\n          }\n\n          break;\n      }\n    }\n\n    return true;\n  }\n\n  if (arguments.length <= 1) {\n    throw new Error('Need two or more arguments to compare');\n  }\n\n  return compare2Objects(_1, _2);\n}\n/**\n * This function determines if a value is a form state.\n */\n\n\nfunction isFormState(state) {\n  return !!state && state.hasOwnProperty('id') && state.hasOwnProperty('value') && state.hasOwnProperty('errors');\n}\n/**\n * This function determines if a value is an array state.\n */\n\n\nfunction isArrayState(state) {\n  return isFormState(state) && state.hasOwnProperty('controls') && Array.isArray(state.controls);\n}\n/**\n * This function determines if a value is a group state.\n */\n\n\nfunction isGroupState(state) {\n  return isFormState(state) && state.hasOwnProperty('controls') && !Array.isArray(state.controls) && typeof state.controls !== 'function';\n}\n\nfunction createChildState(id, childValue) {\n  if (isBoxed(childValue)) {\n    return createFormControlState(id, childValue);\n  }\n\n  if (childValue !== null && Array.isArray(childValue)) {\n    return createFormArrayState(id, childValue);\n  }\n\n  if (childValue !== null && typeof childValue === 'object') {\n    return createFormGroupState(id, childValue);\n  }\n\n  return createFormControlState(id, childValue);\n}\n\nfunction verifyFormControlValueIsValid(value) {\n  if (value === null || ['string', 'number', 'boolean', 'undefined'].indexOf(typeof value) >= 0) {\n    return value;\n  }\n\n  if (!isBoxed(value)) {\n    const errorMsg = 'Form control states only support undefined, null, string, number, and boolean values as well as boxed values';\n    throw new Error(`${errorMsg}; got ${JSON.stringify(value)} of type ${typeof value}`); // `;\n  }\n\n  if (value.value === null || ['string', 'number', 'boolean', 'undefined'].indexOf(typeof value.value) >= 0) {\n    return value;\n  }\n\n  const serialized = JSON.stringify(value);\n  const deserialized = JSON.parse(serialized);\n\n  if (deepEquals(value, deserialized, {\n    treatUndefinedAndMissingKeyAsSame: true\n  })) {\n    return value;\n  }\n\n  throw new Error(`A form control value must be serializable (i.e. value === JSON.parse(JSON.stringify(value))), got: ${JSON.stringify(value)}`);\n}\n/**\n * This function creates a form control state with an ID and a value.\n */\n\n\nfunction createFormControlState(id, value) {\n  return {\n    id,\n    value: verifyFormControlValueIsValid(value),\n    errors: {},\n    pendingValidations: [],\n    isValidationPending: false,\n    isValid: true,\n    isInvalid: false,\n    isEnabled: true,\n    isDisabled: false,\n    isDirty: false,\n    isPristine: true,\n    isTouched: false,\n    isUntouched: true,\n    isSubmitted: false,\n    isUnsubmitted: true,\n    isFocused: false,\n    isUnfocused: true,\n    userDefinedProperties: {}\n  };\n}\n\nfunction getFormGroupValue(controls, originalValue) {\n  let hasChanged = Object.keys(originalValue).length !== Object.keys(controls).length;\n  const newValue = Object.keys(controls).reduce((res, key) => {\n    hasChanged = hasChanged || originalValue[key] !== controls[key].value;\n    res[key] = controls[key].value;\n    return res;\n  }, {});\n  return hasChanged ? newValue : originalValue;\n}\n\nfunction getFormGroupErrors(controls, originalErrors) {\n  let hasChanged = false;\n  const groupErrors = Object.keys(originalErrors).filter(key => !key.startsWith('_')).reduce((res, key) => Object.assign(res, {\n    [key]: originalErrors[key]\n  }), {});\n  const newErrors = Object.keys(controls).reduce((res, key) => {\n    const controlErrors = controls[key].errors;\n\n    if (!isEmpty(controlErrors)) {\n      hasChanged = hasChanged || originalErrors[`_${key}`] !== controlErrors;\n      Object.assign(res, {\n        [`_${key}`]: controls[key].errors\n      });\n    } else {\n      hasChanged = hasChanged || originalErrors.hasOwnProperty(`_${key}`);\n    }\n\n    return res;\n  }, groupErrors);\n  hasChanged = hasChanged || Object.keys(originalErrors).length !== Object.keys(newErrors).length;\n  return hasChanged ? newErrors : originalErrors;\n}\n\nfunction computeGroupState(id, controls, value, errors, pendingValidations, userDefinedProperties, flags) {\n  value = getFormGroupValue(controls, value);\n  errors = getFormGroupErrors(controls, errors);\n  const isValid = isEmpty(errors);\n  const isDirty = flags.wasOrShouldBeDirty || Object.keys(controls).some(key => controls[key].isDirty);\n  const isEnabled = flags.wasOrShouldBeEnabled || Object.keys(controls).some(key => controls[key].isEnabled);\n  const isTouched = flags.wasOrShouldBeTouched || Object.keys(controls).some(key => controls[key].isTouched);\n  const isSubmitted = flags.wasOrShouldBeSubmitted || Object.keys(controls).some(key => controls[key].isSubmitted);\n  const isValidationPending = pendingValidations.length > 0 || Object.keys(controls).some(key => controls[key].isValidationPending);\n  return {\n    id,\n    value,\n    errors,\n    pendingValidations,\n    isValidationPending,\n    isValid,\n    isInvalid: !isValid,\n    isEnabled,\n    isDisabled: !isEnabled,\n    isDirty,\n    isPristine: !isDirty,\n    isTouched,\n    isUntouched: !isTouched,\n    isSubmitted,\n    isUnsubmitted: !isSubmitted,\n    userDefinedProperties,\n    controls\n  };\n}\n/**\n * This function creates a form group state with an ID and a value.\n * From the value the shape of the group state is inferred, i.e.\n * object properties are inferred as form groups, array properties\n * are inferred as form arrays, and primitive properties are inferred\n * as form controls.\n */\n\n\nfunction createFormGroupState(id, initialValue) {\n  const controls = Object.keys(initialValue).map(key => [key, createChildState(`${id}.${key}`, initialValue[key])]).reduce((res, [controlId, state]) => Object.assign(res, {\n    [controlId]: state\n  }), {});\n  return computeGroupState(id, controls, initialValue, {}, [], {}, {\n    wasOrShouldBeEnabled: true\n  });\n}\n\nfunction getFormArrayValue(controls, originalValue) {\n  let hasChanged = Object.keys(originalValue).length !== Object.keys(controls).length;\n  const newValue = controls.map((state, i) => {\n    hasChanged = hasChanged || originalValue[i] !== state.value;\n    return state.value;\n  });\n  return hasChanged ? newValue : originalValue;\n}\n\nfunction getFormArrayErrors(controls, originalErrors) {\n  let hasChanged = false;\n  const groupErrors = Object.keys(originalErrors).filter(key => !key.startsWith('_')).reduce((res, key) => Object.assign(res, {\n    [key]: originalErrors[key]\n  }), {});\n  const newErrors = controls.reduce((res, state, i) => {\n    const controlErrors = state.errors;\n\n    if (!isEmpty(controlErrors)) {\n      hasChanged = hasChanged || originalErrors[`_${i}`] !== controlErrors;\n      Object.assign(res, {\n        [`_${i}`]: controlErrors\n      });\n    } else {\n      hasChanged = hasChanged || originalErrors.hasOwnProperty(`_${i}`);\n    }\n\n    return res;\n  }, groupErrors);\n  hasChanged = hasChanged || Object.keys(originalErrors).length !== Object.keys(newErrors).length;\n  return hasChanged ? newErrors : originalErrors;\n}\n\nfunction computeArrayState(id, inferredControls, value, errors, pendingValidations, userDefinedProperties, flags) {\n  const controls = inferredControls;\n  value = getFormArrayValue(controls, value);\n  errors = getFormArrayErrors(controls, errors);\n  const isValid = isEmpty(errors);\n  const isDirty = flags.wasOrShouldBeDirty || controls.some(state => state.isDirty);\n  const isEnabled = flags.wasOrShouldBeEnabled || controls.some(state => state.isEnabled);\n  const isTouched = flags.wasOrShouldBeTouched || controls.some(state => state.isTouched);\n  const isSubmitted = flags.wasOrShouldBeSubmitted || controls.some(state => state.isSubmitted);\n  const isValidationPending = pendingValidations.length > 0 || controls.some(state => state.isValidationPending);\n  return {\n    id,\n    value,\n    errors,\n    pendingValidations,\n    isValidationPending,\n    isValid,\n    isInvalid: !isValid,\n    isEnabled,\n    isDisabled: !isEnabled,\n    isDirty,\n    isPristine: !isDirty,\n    isTouched,\n    isUntouched: !isTouched,\n    isSubmitted,\n    isUnsubmitted: !isSubmitted,\n    userDefinedProperties,\n    controls: inferredControls\n  };\n}\n/**\n * This function creates a form array state with an ID and a value.\n * From the value the shape of the array state is inferred, i.e.\n * object values are inferred as form groups, array values\n * are inferred as form arrays, and primitive values are inferred\n * as form controls.\n */\n\n\nfunction createFormArrayState(id, initialValue) {\n  const controls = initialValue.map((value, i) => createChildState(`${id}.${i}`, value));\n  return computeArrayState(id, controls, initialValue, {}, [], {}, {\n    wasOrShouldBeEnabled: true\n  });\n}\n\nfunction clearAsyncErrorReducer$2(state, action) {\n  if (action.type !== ClearAsyncErrorAction.TYPE) {\n    return state;\n  }\n\n  const name = `$${action.name}`;\n  let errors = state.errors;\n\n  if (errors.hasOwnProperty(name)) {\n    errors = Object.assign({}, state.errors);\n    delete errors[name];\n  }\n\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\n  const isValid = isEmpty(errors);\n\n  if (errors === state.errors && isValid === state.isValid && pendingValidations.length === state.pendingValidations.length) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    isValid,\n    isInvalid: !isValid,\n    errors,\n    pendingValidations,\n    isValidationPending: pendingValidations.length > 0\n  });\n}\n\nfunction disableReducer$2(state, action) {\n  if (action.type !== DisableAction.TYPE) {\n    return state;\n  }\n\n  if (state.isDisabled) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    isEnabled: false,\n    isDisabled: true,\n    isValid: true,\n    isInvalid: false,\n    errors: {},\n    pendingValidations: [],\n    isValidationPending: false\n  });\n}\n\nfunction enableReducer$2(state, action) {\n  if (action.type !== EnableAction.TYPE) {\n    return state;\n  }\n\n  if (state.isEnabled) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    isEnabled: true,\n    isDisabled: false\n  });\n}\n\nfunction focusReducer(state, action) {\n  if (action.type !== FocusAction.TYPE) {\n    return state;\n  }\n\n  if (state.isFocused) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    isFocused: true,\n    isUnfocused: false\n  });\n}\n\nfunction markAsDirtyReducer$2(state, action) {\n  if (action.type !== MarkAsDirtyAction.TYPE) {\n    return state;\n  }\n\n  if (state.isDirty) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    isDirty: true,\n    isPristine: false\n  });\n}\n\nfunction markAsPristineReducer$2(state, action) {\n  if (action.type !== MarkAsPristineAction.TYPE) {\n    return state;\n  }\n\n  if (state.isPristine) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    isDirty: false,\n    isPristine: true\n  });\n}\n\nfunction markAsSubmittedReducer$2(state, action) {\n  if (action.type !== MarkAsSubmittedAction.TYPE) {\n    return state;\n  }\n\n  if (state.isSubmitted) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    isSubmitted: true,\n    isUnsubmitted: false\n  });\n}\n\nfunction markAsTouchedReducer$2(state, action) {\n  if (action.type !== MarkAsTouchedAction.TYPE) {\n    return state;\n  }\n\n  if (state.isTouched) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    isTouched: true,\n    isUntouched: false\n  });\n}\n\nfunction markAsUnsubmittedReducer$2(state, action) {\n  if (action.type !== MarkAsUnsubmittedAction.TYPE) {\n    return state;\n  }\n\n  if (state.isUnsubmitted) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    isSubmitted: false,\n    isUnsubmitted: true\n  });\n}\n\nfunction markAsUntouchedReducer$2(state, action) {\n  if (action.type !== MarkAsUntouchedAction.TYPE) {\n    return state;\n  }\n\n  if (state.isUntouched) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    isTouched: false,\n    isUntouched: true\n  });\n}\n\nfunction resetReducer$2(state, action) {\n  if (action.type !== ResetAction.TYPE) {\n    return state;\n  }\n\n  if (state.isPristine && state.isUntouched && state.isUnsubmitted) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    isDirty: false,\n    isPristine: true,\n    isTouched: false,\n    isUntouched: true,\n    isSubmitted: false,\n    isUnsubmitted: true\n  });\n}\n\nfunction setAsyncErrorReducer$2(state, action) {\n  if (action.type !== SetAsyncErrorAction.TYPE) {\n    return state;\n  }\n\n  if (state.isDisabled) {\n    return state;\n  }\n\n  const name = `$${action.name}`;\n  let value = action.value;\n\n  if (deepEquals(state.errors[name], action.value)) {\n    value = state.errors[name];\n  }\n\n  const errors = Object.assign(Object.assign({}, state.errors), {\n    [name]: value\n  });\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\n  return Object.assign(Object.assign({}, state), {\n    isValid: false,\n    isInvalid: true,\n    errors,\n    pendingValidations,\n    isValidationPending: pendingValidations.length > 0\n  });\n}\n\nfunction setErrorsReducer$2(state, action) {\n  if (action.type !== SetErrorsAction.TYPE) {\n    return state;\n  }\n\n  if (state.isDisabled) {\n    return state;\n  }\n\n  if (state.errors === action.errors) {\n    return state;\n  }\n\n  if (deepEquals(state.errors, action.errors)) {\n    return state;\n  }\n\n  if (!action.errors || typeof action.errors !== 'object' || Array.isArray(action.errors)) {\n    throw new Error(`Control errors must be an object; got ${action.errors}`); // `;\n  }\n\n  if (Object.keys(action.errors).some(key => key.startsWith('$'))) {\n    throw new Error(`Control errors must not use $ as a prefix; got ${JSON.stringify(action.errors)}`); // `;\n  }\n\n  const asyncErrors = Object.keys(state.errors).filter(key => key.startsWith('$')).reduce((res, key) => Object.assign(res, {\n    [key]: state.errors[key]\n  }), {});\n  const newErrors = isEmpty(asyncErrors) ? action.errors : Object.assign(asyncErrors, action.errors);\n  const isValid = isEmpty(newErrors);\n  return Object.assign(Object.assign({}, state), {\n    isValid,\n    isInvalid: !isValid,\n    errors: newErrors\n  });\n}\n\nfunction setUserDefinedPropertyReducer$2(state, action) {\n  if (action.type !== SetUserDefinedPropertyAction.TYPE) {\n    return state;\n  }\n\n  if (state.userDefinedProperties[action.name] === action.value) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    userDefinedProperties: Object.assign(Object.assign({}, state.userDefinedProperties), {\n      [action.name]: action.value\n    })\n  });\n}\n\nfunction setValueReducer$2(state, action) {\n  if (action.type !== SetValueAction.TYPE) {\n    return state;\n  }\n\n  if (state.value === action.value) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    value: verifyFormControlValueIsValid(action.value)\n  });\n}\n\nfunction startAsyncValidationReducer$2(state, action) {\n  if (action.type !== StartAsyncValidationAction.TYPE) {\n    return state;\n  }\n\n  if (state.pendingValidations.indexOf(action.name) >= 0) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    pendingValidations: [...state.pendingValidations, action.name],\n    isValidationPending: true\n  });\n}\n\nfunction unfocusReducer(state, action) {\n  if (action.type !== UnfocusAction.TYPE) {\n    return state;\n  }\n\n  if (state.isUnfocused) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    isFocused: false,\n    isUnfocused: true\n  });\n}\n\nfunction formControlReducerInternal(state, action) {\n  if (isGroupState(state) || isArrayState(state)) {\n    throw new Error('The state must be a control state');\n  }\n\n  if (action.controlId !== state.id) {\n    return state;\n  }\n\n  state = setValueReducer$2(state, action);\n  state = setErrorsReducer$2(state, action);\n  state = startAsyncValidationReducer$2(state, action);\n  state = setAsyncErrorReducer$2(state, action);\n  state = clearAsyncErrorReducer$2(state, action);\n  state = enableReducer$2(state, action);\n  state = disableReducer$2(state, action);\n  state = focusReducer(state, action);\n  state = unfocusReducer(state, action);\n  state = markAsDirtyReducer$2(state, action);\n  state = markAsPristineReducer$2(state, action);\n  state = markAsTouchedReducer$2(state, action);\n  state = markAsUntouchedReducer$2(state, action);\n  state = markAsSubmittedReducer$2(state, action);\n  state = markAsUnsubmittedReducer$2(state, action);\n  state = setUserDefinedPropertyReducer$2(state, action);\n  state = resetReducer$2(state, action);\n  return state;\n}\n/**\n * This reducer function updates a form control state with actions.\n */\n\n\nfunction formControlReducer(state, action) {\n  if (!state) {\n    throw new Error('The control state must be defined!');\n  }\n\n  return formControlReducerInternal(state, action);\n}\n\nfunction dispatchActionPerChild$1(controls, actionCreator) {\n  let hasChanged = false;\n  const newControls = controls.map(state => {\n    const newState = formStateReducer(state, actionCreator(state.id));\n    hasChanged = hasChanged || state !== newState;\n    return newState;\n  });\n  return hasChanged ? newControls : controls;\n}\n\nfunction callChildReducers$1(controls, action) {\n  let hasChanged = false;\n  const newControls = controls.map(state => {\n    const newState = formStateReducer(state, action);\n    hasChanged = hasChanged || state !== newState;\n    return newState;\n  });\n  return hasChanged ? newControls : controls;\n}\n\nfunction childReducer$1(state, action) {\n  const controls = callChildReducers$1(state.controls, action);\n\n  if (state.controls === controls) {\n    return state;\n  }\n\n  return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction updateIdRecursiveForGroup(state, newId) {\n  const controls = Object.keys(state.controls).reduce((agg, key) => Object.assign(agg, {\n    [key]: updateIdRecursive(state.controls[key], `${newId}.${key}`)\n  }), {});\n  return Object.assign(Object.assign({}, state), {\n    id: newId,\n    controls\n  });\n}\n\nfunction updateIdRecursiveForArray(state, newId) {\n  const controls = state.controls.map((c, i) => updateIdRecursive(c, `${newId}.${i}`));\n  return Object.assign(Object.assign({}, state), {\n    id: newId,\n    controls\n  });\n}\n\nfunction updateIdRecursive(state, newId) {\n  if (state.id === newId) {\n    return state;\n  }\n\n  if (isGroupState(state)) {\n    return updateIdRecursiveForGroup(state, newId);\n  }\n\n  if (isArrayState(state)) {\n    return updateIdRecursiveForArray(state, newId);\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    id: newId\n  });\n}\n\nfunction addControlReducer$1(state, action) {\n  if (action.type !== AddArrayControlAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  const index = action.index === undefined ? state.controls.length : action.index;\n\n  if (index > state.controls.length || index < 0) {\n    throw new Error(`Index ${index} is out of bounds for array '${state.id}' with length ${state.controls.length}!`);\n  }\n\n  let controls = [...state.controls];\n  controls.splice(index, 0, createChildState(`${state.id}.${index}`, action.value));\n  controls = controls.map((c, i) => updateIdRecursive(c, `${state.id}.${i}`));\n  return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: true,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction clearAsyncErrorReducer$1(state, action) {\n  if (action.type !== ClearAsyncErrorAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  const name = `$${action.name}`;\n  let errors = state.errors;\n\n  if (state.errors.hasOwnProperty(name)) {\n    errors = Object.assign({}, state.errors);\n    delete errors[name];\n  }\n\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\n\n  if (errors === state.errors && pendingValidations.length === state.pendingValidations.length) {\n    return state;\n  }\n\n  return computeArrayState(state.id, state.controls, state.value, errors, pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction disableReducer$1(state, action) {\n  if (action.type !== DisableAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  if (state.isDisabled) {\n    return state;\n  }\n\n  return computeArrayState(state.id, dispatchActionPerChild$1(state.controls, controlId => new DisableAction(controlId)), state.value, {}, [], state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: false,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction enableReducer$1(state, action) {\n  if (action.type !== EnableAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  const controls = dispatchActionPerChild$1(state.controls, controlId => new EnableAction(controlId));\n\n  if (controls === state.controls && state.isEnabled) {\n    return state;\n  }\n\n  return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: true,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction markAsDirtyReducer$1(state, action) {\n  if (action.type !== MarkAsDirtyAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  const controls = dispatchActionPerChild$1(state.controls, controlId => new MarkAsDirtyAction(controlId));\n\n  if (controls === state.controls && state.isDirty) {\n    return state;\n  }\n\n  return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: true,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction markAsPristineReducer$1(state, action) {\n  if (action.type !== MarkAsPristineAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  if (state.isPristine) {\n    return state;\n  }\n\n  return computeArrayState(state.id, dispatchActionPerChild$1(state.controls, controlId => new MarkAsPristineAction(controlId)), state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: false,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction markAsSubmittedReducer$1(state, action) {\n  if (action.type !== MarkAsSubmittedAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  const controls = dispatchActionPerChild$1(state.controls, controlId => new MarkAsSubmittedAction(controlId));\n\n  if (controls === state.controls) {\n    return state;\n  }\n\n  return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: true\n  });\n}\n\nfunction markAsTouchedReducer$1(state, action) {\n  if (action.type !== MarkAsTouchedAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  const controls = dispatchActionPerChild$1(state.controls, controlId => new MarkAsTouchedAction(controlId));\n\n  if (controls === state.controls) {\n    return state;\n  }\n\n  return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: true,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction markAsUnsubmittedReducer$1(state, action) {\n  if (action.type !== MarkAsUnsubmittedAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  if (state.isUnsubmitted) {\n    return state;\n  }\n\n  return computeArrayState(state.id, dispatchActionPerChild$1(state.controls, controlId => new MarkAsUnsubmittedAction(controlId)), state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: false\n  });\n}\n\nfunction markAsUntouchedReducer$1(state, action) {\n  if (action.type !== MarkAsUntouchedAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  if (state.isUntouched) {\n    return state;\n  }\n\n  return computeArrayState(state.id, dispatchActionPerChild$1(state.controls, controlId => new MarkAsUntouchedAction(controlId)), state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: false,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction move(array, fromIndex, toIndex) {\n  const item = array[fromIndex];\n  const length = array.length;\n\n  if (fromIndex > toIndex) {\n    return [...array.slice(0, toIndex), item, ...array.slice(toIndex, fromIndex), ...array.slice(fromIndex + 1, length)];\n  } else {\n    const targetIndex = toIndex + 1;\n    return [...array.slice(0, fromIndex), ...array.slice(fromIndex + 1, targetIndex), item, ...array.slice(targetIndex, length)];\n  }\n}\n\nfunction moveControlReducer(state, action) {\n  if (action.type !== MoveArrayControlAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  const fromIndex = action.fromIndex;\n  const toIndex = action.toIndex;\n\n  if (fromIndex === toIndex) {\n    return state;\n  }\n\n  if (fromIndex < 0 || toIndex < 0) {\n    throw new Error(`fromIndex ${fromIndex} or toIndex ${fromIndex} was negative`);\n  }\n\n  if (fromIndex >= state.controls.length || toIndex >= state.controls.length) {\n    throw new Error(`fromIndex ${fromIndex} or toIndex ${toIndex} is out of bounds with the length of the controls ${state.controls.length}`);\n  }\n\n  let controls = move(state.controls, fromIndex, toIndex);\n  controls = controls.map((c, i) => updateIdRecursive(c, `${state.id}.${i}`));\n  return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: true,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction removeControlReducer$1(state, action) {\n  if (action.type !== RemoveArrayControlAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  if (action.index >= state.controls.length || action.index < 0) {\n    throw new Error(`Index ${action.index} is out of bounds for array '${state.id}' with length ${state.controls.length}!`);\n  }\n\n  const index = action.index;\n  const controls = state.controls.filter((_, i) => i !== index).map((c, i) => updateIdRecursive(c, `${state.id}.${i}`));\n  return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: true,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction resetReducer$1(state, action) {\n  if (action.type !== ResetAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  if (state.isPristine && state.isUntouched && state.isUnsubmitted) {\n    return state;\n  }\n\n  return computeArrayState(state.id, dispatchActionPerChild$1(state.controls, controlId => new ResetAction(controlId)), state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: false,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: false,\n    wasOrShouldBeSubmitted: false\n  });\n}\n\nfunction setAsyncErrorReducer$1(state, action) {\n  if (action.type !== SetAsyncErrorAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  if (state.isDisabled) {\n    return state;\n  }\n\n  const name = `$${action.name}`;\n  let value = action.value;\n\n  if (deepEquals(state.errors[name], action.value)) {\n    value = state.errors[name];\n  }\n\n  const errors = Object.assign(Object.assign({}, state.errors), {\n    [name]: value\n  });\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\n  return computeArrayState(state.id, state.controls, state.value, errors, pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction setErrorsReducer$1(state, action) {\n  if (action.type !== SetErrorsAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  if (state.isDisabled) {\n    return state;\n  }\n\n  if (state.errors === action.errors) {\n    return state;\n  }\n\n  if (deepEquals(state.errors, action.errors)) {\n    return state;\n  }\n\n  if (!action.errors || typeof action.errors !== 'object' || Array.isArray(action.errors)) {\n    throw new Error(`Control errors must be an object; got ${action.errors}`);\n  }\n\n  if (Object.keys(action.errors).some(key => key.startsWith('_'))) {\n    throw new Error(`Control errors must not use underscore as a prefix; got ${JSON.stringify(action.errors)}`);\n  }\n\n  if (Object.keys(action.errors).some(key => key.startsWith('$'))) {\n    throw new Error(`Control errors must not use $ as a prefix; got ${JSON.stringify(action.errors)}`);\n  }\n\n  const childAndAsyncErrors = Object.keys(state.errors).filter(key => key.startsWith('_') || key.startsWith('$')).reduce((res, key) => Object.assign(res, {\n    [key]: state.errors[key]\n  }), {});\n  const newErrors = Object.assign(childAndAsyncErrors, action.errors);\n  return computeArrayState(state.id, state.controls, state.value, newErrors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction setUserDefinedPropertyReducer$1(state, action) {\n  if (action.type !== SetUserDefinedPropertyAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  if (state.userDefinedProperties[action.name] === action.value) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    userDefinedProperties: Object.assign(Object.assign({}, state.userDefinedProperties), {\n      [action.name]: action.value\n    })\n  });\n}\n\nfunction setValueReducer$1(state, action) {\n  if (action.type !== SetValueAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  if (state.value === action.value) {\n    return state;\n  }\n\n  if (action.value instanceof Date) {\n    throw new Error('Date values are not supported. Please used serialized strings instead.');\n  }\n\n  const value = action.value;\n  const controls = value.map((v, i) => {\n    if (!state.controls[i]) {\n      return createChildState(`${state.id}.${i}`, v);\n    }\n\n    return formStateReducer(state.controls[i], new SetValueAction(state.controls[i].id, v));\n  });\n  return computeArrayState(state.id, controls, value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction startAsyncValidationReducer$1(state, action) {\n  if (action.type !== StartAsyncValidationAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  if (state.pendingValidations.indexOf(action.name) >= 0) {\n    return state;\n  }\n\n  const pendingValidations = [...state.pendingValidations, action.name];\n  return computeArrayState(state.id, state.controls, state.value, state.errors, pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction swapArrayValues(a, i, j) {\n  const n = [...a];\n  [n[i], n[j]] = [n[j], n[i]];\n  return n;\n}\n\nfunction swapControlReducer(state, action) {\n  if (action.type !== SwapArrayControlAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer$1(state, action);\n  }\n\n  const fromIndex = action.fromIndex;\n  const toIndex = action.toIndex;\n\n  if (fromIndex === toIndex) {\n    return state;\n  }\n\n  if (fromIndex < 0 || toIndex < 0) {\n    throw new Error(`fromIndex ${fromIndex} or toIndex ${fromIndex} was negative`);\n  }\n\n  if (fromIndex >= state.controls.length || toIndex >= state.controls.length) {\n    throw new Error(`fromIndex ${fromIndex} or toIndex ${toIndex} is out of bounds with the length of the controls ${state.controls.length}`);\n  }\n\n  let controls = swapArrayValues(state.controls, fromIndex, toIndex);\n  controls = controls.map((c, i) => i >= fromIndex || i >= toIndex ? updateIdRecursive(c, `${state.id}.${i}`) : c);\n  return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: true,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction formArrayReducerInternal(state, action) {\n  if (!isArrayState(state)) {\n    throw new Error('The state must be an array state');\n  }\n\n  if (!isNgrxFormsAction(action)) {\n    return state;\n  }\n\n  if (!action.controlId.startsWith(state.id)) {\n    return state;\n  }\n\n  switch (action.type) {\n    case FocusAction.TYPE:\n    case UnfocusAction.TYPE:\n    case AddGroupControlAction.TYPE:\n    case RemoveGroupControlAction.TYPE:\n      return childReducer$1(state, action);\n\n    default:\n      break;\n  }\n\n  state = setValueReducer$1(state, action);\n  state = setErrorsReducer$1(state, action);\n  state = startAsyncValidationReducer$1(state, action);\n  state = setAsyncErrorReducer$1(state, action);\n  state = clearAsyncErrorReducer$1(state, action);\n  state = enableReducer$1(state, action);\n  state = disableReducer$1(state, action);\n  state = markAsDirtyReducer$1(state, action);\n  state = markAsPristineReducer$1(state, action);\n  state = markAsTouchedReducer$1(state, action);\n  state = markAsUntouchedReducer$1(state, action);\n  state = markAsSubmittedReducer$1(state, action);\n  state = markAsUnsubmittedReducer$1(state, action);\n  state = setUserDefinedPropertyReducer$1(state, action);\n  state = resetReducer$1(state, action);\n  state = addControlReducer$1(state, action);\n  state = removeControlReducer$1(state, action);\n  state = swapControlReducer(state, action);\n  state = moveControlReducer(state, action);\n  return state;\n}\n/**\n * This reducer function updates a form array state with actions.\n */\n\n\nfunction formArrayReducer(state, action) {\n  if (!state) {\n    throw new Error('The array state must be defined!');\n  }\n\n  return formArrayReducerInternal(state, action);\n}\n\nfunction formStateReducer(state, action) {\n  if (!state) {\n    throw new Error('The form state must be defined!');\n  }\n\n  if (!isFormState(state)) {\n    throw new Error(`state must be a form state, got ${state}`);\n  }\n\n  if (isGroupState(state)) {\n    return formGroupReducer(state, action);\n  }\n\n  if (isArrayState(state)) {\n    return formArrayReducer(state, action);\n  }\n\n  return formControlReducer(state, action);\n}\n/**\n * This function creates a reducer function that first applies an action to the state\n * and afterwards applies all given update functions one after another to the resulting\n * form state. However, the update functions are only applied if the form state changed\n * as result of applying the action. If you need the update functions to be applied\n * regardless of whether the state changed (e.g. because the update function closes\n * over variables that may change independently of the form state) you can simply apply\n * the update manually (e.g. `updateFunction(formStateReducer(state, action))`).\n *\n * The following (contrived) example uses this function to create a reducer that after\n * each action validates the child control `name` to be required and sets the child\n * control `email`'s value to be `''` if the name is invalid.\n *\n```typescript\ninterface FormValue {\n  name: string;\n  email: string;\n}\n\nconst updateFormState = updateGroup<FormValue>(\n  {\n    name: validate(required),\n  },\n  {\n    email: (email, parentGroup) =>\n      parentGroup.controls.name.isInvalid\n        ? setValue('', email)\n        : email,\n  },\n);\n\nconst reducer = createFormStateReducerWithUpdate<FormValue>(updateFormState);\n```\n */\n\n\nfunction createFormStateReducerWithUpdate(updateFnOrUpdateFnArr, ...updateFnArr) {\n  updateFnArr = [...(Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr]), ...updateFnArr];\n  return (state, action) => {\n    const newState = formStateReducer(state, action);\n    return newState === state ? state : updateFnArr.reduce((s, f) => f(s), newState);\n  };\n}\n\nfunction reduceNestedFormState(state, key, action) {\n  const value = state[key];\n\n  if (!isFormState(value)) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    [key]: formStateReducer(value, action)\n  });\n}\n\nfunction reduceNestedFormStates(state, action) {\n  return Object.keys(state).reduce((s, key) => reduceNestedFormState(s, key, action), state);\n}\n/**\n * This function returns an object that can be passed to ngrx's `createReducer`\n * function (available starting with ngrx version 8). By doing this all form\n * state properties on the state will be updated whenever necessary (i.e.\n * whenever an ngrx-forms action is dispatched).\n *\n * To manually update a form state (e.g. to validate it) use\n * `wrapReducerWithFormStateUpdate`.\n */\n\n\nfunction onNgrxForms() {\n  return {\n    reducer: (state, action) => isFormState(state) ? formStateReducer(state, action) : reduceNestedFormStates(state, action),\n    types: ALL_NGRX_FORMS_ACTION_TYPES\n  };\n}\n/**\n * Define a reducer for a ngrx-forms action. This functions works the same as\n * ngrx's `on` except that you provide the ngrx-forms action class instead of\n * your action creator as a parameter.\n */\n\n\nfunction onNgrxFormsAction(actionCons, reducer) {\n  return {\n    reducer: (state, action) => reducer(reduceNestedFormStates(state, action), action),\n    types: [actionCons.TYPE]\n  };\n}\n/**\n * This function wraps a reducer and returns another reducer that first calls\n * the given reducer and then calls the given update function for the form state\n * that is specified by the form state locator function.\n *\n * The update function is passed the form state and the updated containing state\n * as parameters.\n */\n\n\nfunction wrapReducerWithFormStateUpdate(reducer, formStateLocator, updateFn) {\n  return (state, action) => {\n    const updatedState = reducer(state, action);\n    const formState = formStateLocator(updatedState); // if the state itself is the form state, update it directly\n\n    if (formState === updatedState) {\n      return updateFn(formState, updatedState);\n    }\n\n    const formStateKey = Object.keys(updatedState).find(key => updatedState[key] === formState);\n    const updatedFormState = updateFn(formState, updatedState);\n\n    if (updatedFormState === formState) {\n      return updatedState;\n    }\n\n    return Object.assign(Object.assign({}, updatedState), {\n      [formStateKey]: updatedFormState\n    });\n  };\n}\n\nfunction dispatchActionPerChild(controls, actionCreator) {\n  let hasChanged = false;\n  const newControls = Object.keys(controls).reduce((c, key) => {\n    Object.assign(c, {\n      [key]: formStateReducer(controls[key], actionCreator(controls[key].id))\n    });\n    hasChanged = hasChanged || c[key] !== controls[key];\n    return c;\n  }, {});\n  return hasChanged ? newControls : controls;\n}\n\nfunction callChildReducers(controls, action) {\n  let hasChanged = false;\n  const newControls = Object.keys(controls).map(key => [key, formStateReducer(controls[key], action)]).reduce((res, [key, state]) => {\n    hasChanged = hasChanged || state !== controls[key];\n    return Object.assign(res, {\n      [key]: state\n    });\n  }, {});\n  return hasChanged ? newControls : controls;\n}\n\nfunction childReducer(state, action) {\n  const controls = callChildReducers(state.controls, action);\n\n  if (state.controls === controls) {\n    return state;\n  }\n\n  return computeGroupState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction addControlReducer(state, action) {\n  if (action.type !== AddGroupControlAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  if (state.controls.hasOwnProperty(action.name)) {\n    throw new Error(`Group '${state.id}' already has child control '${action.name}'!`); // `;\n  }\n\n  const controls = Object.assign({}, state.controls, {\n    [action.name]: createChildState(`${state.id}.${action.name}`, action.value)\n  });\n  return computeGroupState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: true,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction clearAsyncErrorReducer(state, action) {\n  if (action.type !== ClearAsyncErrorAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  const name = `$${action.name}`;\n  let errors = state.errors;\n\n  if (errors.hasOwnProperty(name)) {\n    errors = Object.assign({}, state.errors);\n    delete errors[name];\n  }\n\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\n\n  if (errors === state.errors && pendingValidations.length === state.pendingValidations.length) {\n    return state;\n  }\n\n  return computeGroupState(state.id, state.controls, state.value, errors, pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction disableReducer(state, action) {\n  if (action.type !== DisableAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  if (state.isDisabled) {\n    return state;\n  }\n\n  return computeGroupState(state.id, dispatchActionPerChild(state.controls, controlId => new DisableAction(controlId)), state.value, {}, [], state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: false,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction enableReducer(state, action) {\n  if (action.type !== EnableAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  const controls = dispatchActionPerChild(state.controls, controlId => new EnableAction(controlId));\n\n  if (controls === state.controls) {\n    return state;\n  }\n\n  return computeGroupState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: true,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction markAsDirtyReducer(state, action) {\n  if (action.type !== MarkAsDirtyAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsDirtyAction(controlId));\n\n  if (controls === state.controls) {\n    return state;\n  }\n\n  return computeGroupState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: true,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction markAsPristineReducer(state, action) {\n  if (action.type !== MarkAsPristineAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  if (state.isPristine) {\n    return state;\n  }\n\n  return computeGroupState(state.id, dispatchActionPerChild(state.controls, controlId => new MarkAsPristineAction(controlId)), state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: false,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction markAsSubmittedReducer(state, action) {\n  if (action.type !== MarkAsSubmittedAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsSubmittedAction(controlId));\n\n  if (controls === state.controls) {\n    return state;\n  }\n\n  return computeGroupState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: true\n  });\n}\n\nfunction markAsTouchedReducer(state, action) {\n  if (action.type !== MarkAsTouchedAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsTouchedAction(controlId));\n\n  if (controls === state.controls) {\n    return state;\n  }\n\n  return computeGroupState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: true,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction markAsUnsubmittedReducer(state, action) {\n  if (action.type !== MarkAsUnsubmittedAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  if (state.isUnsubmitted) {\n    return state;\n  }\n\n  return computeGroupState(state.id, dispatchActionPerChild(state.controls, controlId => new MarkAsUnsubmittedAction(controlId)), state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: false\n  });\n}\n\nfunction markAsUntouchedReducer(state, action) {\n  if (action.type !== MarkAsUntouchedAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  if (state.isUntouched) {\n    return state;\n  }\n\n  return computeGroupState(state.id, dispatchActionPerChild(state.controls, controlId => new MarkAsUntouchedAction(controlId)), state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: false,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction removeControlReducer(state, action) {\n  if (action.type !== RemoveGroupControlAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  if (!state.controls.hasOwnProperty(action.name)) {\n    throw new Error(`Group '${state.id}' does not have child control '${action.name}'!`); // `;\n  }\n\n  const controls = Object.assign({}, state.controls);\n  delete controls[action.name];\n  return computeGroupState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: true,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction resetReducer(state, action) {\n  if (action.type !== ResetAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  if (state.isPristine && state.isUntouched && state.isUnsubmitted) {\n    return state;\n  }\n\n  return computeGroupState(state.id, dispatchActionPerChild(state.controls, controlId => new ResetAction(controlId)), state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: false,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: false,\n    wasOrShouldBeSubmitted: false\n  });\n}\n\nfunction setAsyncErrorReducer(state, action) {\n  if (action.type !== SetAsyncErrorAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  if (state.isDisabled) {\n    return state;\n  }\n\n  const name = `$${action.name}`;\n  let value = action.value;\n\n  if (deepEquals(state.errors[name], action.value)) {\n    value = state.errors[name];\n  }\n\n  const errors = Object.assign(Object.assign({}, state.errors), {\n    [name]: value\n  });\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\n  return computeGroupState(state.id, state.controls, state.value, errors, pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction setErrorsReducer(state, action) {\n  if (action.type !== SetErrorsAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  if (state.isDisabled) {\n    return state;\n  }\n\n  if (state.errors === action.errors) {\n    return state;\n  }\n\n  if (deepEquals(state.errors, action.errors)) {\n    return state;\n  }\n\n  if (!action.errors || typeof action.errors !== 'object' || Array.isArray(action.errors)) {\n    throw new Error(`Control errors must be an object; got ${action.errors}`); // `;\n  }\n\n  if (Object.keys(action.errors).some(key => key.startsWith('_'))) {\n    throw new Error(`Control errors must not use underscore as a prefix; got ${JSON.stringify(action.errors)}`); // `;\n  }\n\n  if (Object.keys(action.errors).some(key => key.startsWith('$'))) {\n    throw new Error(`Control errors must not use $ as a prefix; got ${JSON.stringify(action.errors)}`); // `;\n  }\n\n  const childAndAsyncErrors = Object.keys(state.errors).filter(key => key.startsWith('_') || key.startsWith('$')).reduce((res, key) => Object.assign(res, {\n    [key]: state.errors[key]\n  }), {});\n  const newErrors = Object.assign(childAndAsyncErrors, action.errors);\n  return computeGroupState(state.id, state.controls, state.value, newErrors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction setUserDefinedPropertyReducer(state, action) {\n  if (action.type !== SetUserDefinedPropertyAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  if (state.userDefinedProperties[action.name] === action.value) {\n    return state;\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    userDefinedProperties: Object.assign(Object.assign({}, state.userDefinedProperties), {\n      [action.name]: action.value\n    })\n  });\n}\n\nfunction setValueReducer(state, action) {\n  if (action.type !== SetValueAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  if (state.value === action.value) {\n    return state;\n  }\n\n  if (action.value instanceof Date) {\n    throw new Error('Date values are not supported. Please used serialized strings instead.');\n  }\n\n  const value = action.value;\n  const controls = Object.keys(value).reduce((c, key) => {\n    // tslint:disable-next-line:prefer-conditional-expression\n    if (!state.controls[key]) {\n      Object.assign(c, {\n        [key]: createChildState(`${state.id}.${key}`, value[key])\n      });\n    } else {\n      Object.assign(c, {\n        [key]: formStateReducer(state.controls[key], new SetValueAction(state.controls[key].id, value[key]))\n      });\n    }\n\n    return c;\n  }, {});\n  return computeGroupState(state.id, controls, value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction startAsyncValidationReducer(state, action) {\n  if (action.type !== StartAsyncValidationAction.TYPE) {\n    return state;\n  }\n\n  if (action.controlId !== state.id) {\n    return childReducer(state, action);\n  }\n\n  if (state.pendingValidations.indexOf(action.name) >= 0) {\n    return state;\n  }\n\n  const pendingValidations = [...state.pendingValidations, action.name];\n  return computeGroupState(state.id, state.controls, state.value, state.errors, pendingValidations, state.userDefinedProperties, {\n    wasOrShouldBeDirty: state.isDirty,\n    wasOrShouldBeEnabled: state.isEnabled,\n    wasOrShouldBeTouched: state.isTouched,\n    wasOrShouldBeSubmitted: state.isSubmitted\n  });\n}\n\nfunction formGroupReducerInternal(state, action) {\n  if (!isGroupState(state)) {\n    throw new Error('The state must be a group state');\n  }\n\n  if (!isNgrxFormsAction(action)) {\n    return state;\n  }\n\n  if (!action.controlId.startsWith(state.id)) {\n    return state;\n  }\n\n  switch (action.type) {\n    case FocusAction.TYPE:\n    case UnfocusAction.TYPE:\n    case AddArrayControlAction.TYPE:\n    case RemoveArrayControlAction.TYPE:\n    case MoveArrayControlAction.TYPE:\n    case SwapArrayControlAction.TYPE:\n      return childReducer(state, action);\n\n    default:\n      break;\n  }\n\n  state = setValueReducer(state, action);\n  state = setErrorsReducer(state, action);\n  state = startAsyncValidationReducer(state, action);\n  state = setAsyncErrorReducer(state, action);\n  state = clearAsyncErrorReducer(state, action);\n  state = enableReducer(state, action);\n  state = disableReducer(state, action);\n  state = markAsDirtyReducer(state, action);\n  state = markAsPristineReducer(state, action);\n  state = markAsTouchedReducer(state, action);\n  state = markAsUntouchedReducer(state, action);\n  state = markAsSubmittedReducer(state, action);\n  state = markAsUnsubmittedReducer(state, action);\n  state = addControlReducer(state, action);\n  state = removeControlReducer(state, action);\n  state = setUserDefinedPropertyReducer(state, action);\n  state = resetReducer(state, action);\n  return state;\n}\n/**\n * This reducer function updates a form group state with actions.\n */\n\n\nfunction formGroupReducer(state, action) {\n  if (!state) {\n    throw new Error('The group state must be defined!');\n  }\n\n  return formGroupReducerInternal(state, action);\n}\n\nfunction abstractControlReducer(state, action) {\n  if (isArrayState(state)) {\n    return formArrayReducer(state, action);\n  }\n\n  if (isGroupState(state)) {\n    return formGroupReducer(state, action);\n  }\n\n  return formControlReducer(state, action);\n}\n\nfunction compose(...fns) {\n  return t => fns.reduce((res, f) => f(res), t);\n}\n\nfunction ensureState(state) {\n  if (!state) {\n    throw new Error('state must not be undefined!');\n  }\n\n  return state;\n}\n\nfunction updateArrayControlsState(filterFn, updateFn) {\n  return state => {\n    let hasChanged = false;\n    const newControls = state.controls.map((control, idx) => {\n      if (!filterFn(control, idx)) {\n        return control;\n      }\n\n      const newControl = updateFn(control, state);\n      hasChanged = hasChanged || newControl !== control;\n      return newControl;\n    });\n    return hasChanged ? newControls : state.controls;\n  };\n}\n\nfunction updateArraySingle(filterFn, updateFn) {\n  return state => {\n    const newControls = updateArrayControlsState(filterFn, updateFn)(state);\n    return newControls !== state.controls ? computeArrayState(state.id, newControls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n      wasOrShouldBeDirty: state.isDirty,\n      wasOrShouldBeEnabled: state.isEnabled,\n      wasOrShouldBeTouched: state.isTouched,\n      wasOrShouldBeSubmitted: state.isSubmitted\n    }) : state;\n  };\n}\n\nfunction updateArrayWithFilter(stateOrFilterFunction, filterFunctionOrFunctionOrFunctionArray, updateFnOrUpdateFnArr, ...rest) {\n  if (isArrayState(stateOrFilterFunction)) {\n    const filterFn = filterFunctionOrFunctionOrFunctionArray;\n    const updateFnArr = Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr];\n    return updateFnArr.concat(...rest).reduce((s, updateFn) => updateArraySingle(filterFn, updateFn)(s), stateOrFilterFunction);\n  }\n\n  let updateFnArr = Array.isArray(filterFunctionOrFunctionOrFunctionArray) ? filterFunctionOrFunctionOrFunctionArray : [filterFunctionOrFunctionOrFunctionArray];\n  updateFnArr = updateFnOrUpdateFnArr === undefined ? updateFnArr : updateFnArr.concat(updateFnOrUpdateFnArr);\n  return s => updateArrayWithFilter(ensureState(s), stateOrFilterFunction, updateFnArr.concat(rest));\n}\n\nfunction updateArray(stateOrFunctionOrFunctionArray, updateFnOrUpdateFnArr, ...rest) {\n  if (isArrayState(stateOrFunctionOrFunctionArray)) {\n    const updateFnArr = Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr];\n    return updateFnArr.concat(...rest).reduce((s, updateFn) => updateArraySingle(() => true, updateFn)(s), stateOrFunctionOrFunctionArray);\n  }\n\n  let updateFnArr = Array.isArray(stateOrFunctionOrFunctionArray) ? stateOrFunctionOrFunctionArray : [stateOrFunctionOrFunctionArray];\n  updateFnArr = updateFnOrUpdateFnArr === undefined ? updateFnArr : updateFnArr.concat(updateFnOrUpdateFnArr);\n  return s => updateArray(ensureState(s), updateFnArr.concat(rest));\n}\n\nfunction updateGroupControlsState(updateFns) {\n  return state => {\n    let hasChanged = false;\n    const newControls = Object.keys(state.controls).reduce((res, key) => {\n      const control = state.controls[key];\n      Object.assign(res, {\n        [key]: control\n      });\n\n      if (updateFns.hasOwnProperty(key)) {\n        const newControl = updateFns[key](control, state);\n        hasChanged = hasChanged || newControl !== control;\n        Object.assign(res, {\n          [key]: newControl\n        });\n      }\n\n      return res;\n    }, {});\n    return hasChanged ? newControls : state.controls;\n  };\n}\n\nfunction updateGroupSingle(updateFns) {\n  return state => {\n    const newControls = updateGroupControlsState(updateFns)(state);\n    return newControls !== state.controls ? computeGroupState(state.id, newControls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n      wasOrShouldBeDirty: state.isDirty,\n      wasOrShouldBeEnabled: state.isEnabled,\n      wasOrShouldBeTouched: state.isTouched,\n      wasOrShouldBeSubmitted: state.isSubmitted\n    }) : state;\n  };\n}\n\nfunction updateGroup(stateOrUpdateFnOrUpdateFnArray, updateFnOrUpdateFnArr, ...rest) {\n  if (isGroupState(stateOrUpdateFnOrUpdateFnArray)) {\n    const updateFnArr = Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr];\n    return updateFnArr.concat(...rest).reduce((s, updateFn) => updateGroupSingle(updateFn)(s), stateOrUpdateFnOrUpdateFnArray);\n  }\n\n  let updateFnArr = Array.isArray(stateOrUpdateFnOrUpdateFnArray) ? stateOrUpdateFnOrUpdateFnArray : [stateOrUpdateFnOrUpdateFnArray];\n  updateFnArr = updateFnOrUpdateFnArr === undefined ? updateFnArr : updateFnArr.concat(updateFnOrUpdateFnArr);\n  return s => updateGroup(ensureState(s), updateFnArr.concat(rest));\n}\n\nfunction updateRecursiveSingle(parent, updateFn) {\n  return state => {\n    if (isGroupState(state)) {\n      const updateFunctions = Object.keys(state.controls).reduce((agg, key) => Object.assign(agg, {\n        [key]: (s, p) => updateRecursiveSingle(p, updateFn)(s)\n      }), {});\n      state = updateGroup(updateFunctions)(state);\n      return updateFn(state, parent);\n    }\n\n    if (isArrayState(state)) {\n      state = updateArray((s, p) => updateRecursiveSingle(p, updateFn)(s))(state);\n      return updateFn(state, parent);\n    }\n\n    return updateFn(state, parent);\n  };\n}\n\nfunction updateRecursive(stateOrFunctionOrFunctionArray, updateFnOrUpdateFnArr, ...rest) {\n  if (isFormState(stateOrFunctionOrFunctionArray)) {\n    const updateFnArr = Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr];\n    return updateFnArr.concat(...rest).reduce((s, updateFn) => updateRecursiveSingle(stateOrFunctionOrFunctionArray, updateFn)(s), stateOrFunctionOrFunctionArray);\n  }\n\n  let updateFnArr = Array.isArray(stateOrFunctionOrFunctionArray) ? stateOrFunctionOrFunctionArray : [stateOrFunctionOrFunctionArray];\n  updateFnArr = updateFnOrUpdateFnArr === undefined ? updateFnArr : updateFnArr.concat(updateFnOrUpdateFnArr);\n  return s => updateRecursive(ensureState(s), updateFnArr.concat(rest));\n}\n\nfunction setValue(valueOrState, value) {\n  if (isFormState(valueOrState)) {\n    return abstractControlReducer(valueOrState, new SetValueAction(valueOrState.id, value));\n  }\n\n  return s => setValue(ensureState(s), valueOrState);\n}\n\nfunction setErrors(errorsOrErrorsArrayOrState, errorsOrErrorsArray, ...rest) {\n  if (isFormState(errorsOrErrorsArrayOrState)) {\n    const errorsArray = Array.isArray(errorsOrErrorsArray) ? errorsOrErrorsArray : [errorsOrErrorsArray];\n    const errors = errorsArray.concat(...rest).reduce((agg, err) => Object.assign(agg, err), {});\n    return formStateReducer(errorsOrErrorsArrayOrState, new SetErrorsAction(errorsOrErrorsArrayOrState.id, errors));\n  }\n\n  let errorsArray = Array.isArray(errorsOrErrorsArrayOrState) ? errorsOrErrorsArrayOrState : [errorsOrErrorsArrayOrState];\n  errorsArray = errorsOrErrorsArray === undefined ? errorsArray : errorsArray.concat(errorsOrErrorsArray);\n  return s => setErrors(ensureState(s), errorsArray.concat(rest));\n}\n\nfunction validate(stateOrFunctionOrFunctionArray, functionOrFunctionArr, ...rest) {\n  if (isFormState(stateOrFunctionOrFunctionArray)) {\n    const functionArr = Array.isArray(functionOrFunctionArr) ? functionOrFunctionArr : [functionOrFunctionArr];\n    const errors = functionArr.concat(...rest).reduce((agg, validationFn) => Object.assign(agg, validationFn(stateOrFunctionOrFunctionArray.value)), {});\n    return formStateReducer(stateOrFunctionOrFunctionArray, new SetErrorsAction(stateOrFunctionOrFunctionArray.id, errors));\n  }\n\n  let updateFnArr = Array.isArray(stateOrFunctionOrFunctionArray) ? stateOrFunctionOrFunctionArray : [stateOrFunctionOrFunctionArray];\n  updateFnArr = functionOrFunctionArr === undefined ? updateFnArr : updateFnArr.concat(functionOrFunctionArr);\n  return s => validate(ensureState(s), updateFnArr.concat(rest));\n}\n\nfunction enable(state) {\n  return abstractControlReducer(state, new EnableAction(state.id));\n}\n\nfunction disable(state) {\n  return abstractControlReducer(state, new DisableAction(state.id));\n}\n\nfunction markAsDirty(state) {\n  return abstractControlReducer(state, new MarkAsDirtyAction(state.id));\n}\n\nfunction markAsPristine(state) {\n  return abstractControlReducer(state, new MarkAsPristineAction(state.id));\n}\n\nfunction markAsTouched(state) {\n  return abstractControlReducer(state, new MarkAsTouchedAction(state.id));\n}\n\nfunction markAsUntouched(state) {\n  return abstractControlReducer(state, new MarkAsUntouchedAction(state.id));\n}\n\nfunction markAsSubmitted(state) {\n  return abstractControlReducer(state, new MarkAsSubmittedAction(state.id));\n}\n\nfunction markAsUnsubmitted(state) {\n  return abstractControlReducer(state, new MarkAsUnsubmittedAction(state.id));\n}\n/**\n * This update function takes a form control state and marks it as focused (which\n * will also `.focus()` the form element).\n */\n\n\nfunction focus(state) {\n  return formControlReducer(state, new FocusAction(state.id));\n}\n/**\n * This update function takes a form control state and marks it as not focused (which\n * will also `.blur()` the form element).\n */\n\n\nfunction unfocus(state) {\n  return formControlReducer(state, new UnfocusAction(state.id));\n}\n\nfunction addArrayControl(valueOrState, indexOrValue, index) {\n  if (isArrayState(valueOrState)) {\n    return formArrayReducer(valueOrState, new AddArrayControlAction(valueOrState.id, indexOrValue, index));\n  }\n\n  return s => addArrayControl(ensureState(s), valueOrState, indexOrValue);\n}\n\nfunction addGroupControl(nameOrState, valueOrName, value) {\n  if (isGroupState(nameOrState)) {\n    return formGroupReducer(nameOrState, new AddGroupControlAction(nameOrState.id, valueOrName, value));\n  }\n\n  return s => addGroupControl(ensureState(s), nameOrState, valueOrName);\n}\n\nfunction moveArrayControl(indexOrState, fromIndex, toIndex) {\n  if (isArrayState(indexOrState)) {\n    return formArrayReducer(indexOrState, new MoveArrayControlAction(indexOrState.id, fromIndex, toIndex));\n  }\n\n  return s => moveArrayControl(ensureState(s), indexOrState, fromIndex);\n}\n\nfunction swapArrayControl(indexOrState, fromIndex, toIndex) {\n  if (isArrayState(indexOrState)) {\n    return formArrayReducer(indexOrState, new SwapArrayControlAction(indexOrState.id, fromIndex, toIndex));\n  }\n\n  return s => swapArrayControl(ensureState(s), indexOrState, fromIndex);\n}\n\nfunction removeArrayControl(indexOrState, index) {\n  if (isArrayState(indexOrState)) {\n    return formArrayReducer(indexOrState, new RemoveArrayControlAction(indexOrState.id, index));\n  }\n\n  return s => removeArrayControl(ensureState(s), indexOrState);\n}\n\nfunction removeGroupControl(nameOrState, name) {\n  if (isGroupState(nameOrState)) {\n    return formGroupReducer(nameOrState, new RemoveGroupControlAction(nameOrState.id, name));\n  }\n\n  return s => removeGroupControl(ensureState(s), nameOrState);\n}\n\nfunction setUserDefinedProperty(nameOrState, valueOrName, value) {\n  if (isFormState(nameOrState)) {\n    return formStateReducer(nameOrState, new SetUserDefinedPropertyAction(nameOrState.id, valueOrName, value));\n  }\n\n  return s => setUserDefinedProperty(ensureState(s), nameOrState, valueOrName);\n}\n\nfunction reset(state) {\n  return abstractControlReducer(state, new ResetAction(state.id));\n}\n\nfunction startAsyncValidation(nameOrState, name) {\n  if (isFormState(nameOrState)) {\n    return abstractControlReducer(nameOrState, new StartAsyncValidationAction(nameOrState.id, name));\n  }\n\n  return s => startAsyncValidation(ensureState(s), nameOrState);\n}\n\nfunction setAsyncError(nameOrState, nameOrValue, value) {\n  if (isFormState(nameOrState)) {\n    return abstractControlReducer(nameOrState, new SetAsyncErrorAction(nameOrState.id, nameOrValue, value));\n  }\n\n  return s => setAsyncError(ensureState(s), nameOrState, nameOrValue);\n}\n\nfunction clearAsyncError(nameOrState, name) {\n  if (isFormState(nameOrState)) {\n    return abstractControlReducer(nameOrState, new ClearAsyncErrorAction(nameOrState.id, name));\n  }\n\n  return s => clearAsyncError(ensureState(s), nameOrState);\n}\n/**\n * Used to provide a {@link FormViewAdapter} for form elements.\n */\n\n\nconst NGRX_FORM_VIEW_ADAPTER = new InjectionToken('NgrxFormViewAdapter'); // tslint:disable:directive-class-suffix\n\nclass NgrxCheckboxViewAdapter {\n  constructor(renderer, elementRef) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.nativeIdWasSet = false;\n\n    this.onChange = () => void 0;\n\n    this.onTouched = () => void 0;\n  }\n\n  set ngrxFormControlState(value) {\n    if (!value) {\n      throw new Error('The control state must not be undefined!');\n    }\n\n    this.state = value;\n    const nativeId = this.elementRef.nativeElement.id;\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\n\n    if (shouldSetNativeId) {\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\n    }\n  }\n\n  ngAfterViewInit() {\n    const nativeId = this.elementRef.nativeElement.id;\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\n\n    if (shouldSetNativeId) {\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\n      this.nativeIdWasSet = true;\n    }\n  }\n\n  setViewValue(value) {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'checked', value);\n  }\n\n  setOnChangeCallback(fn) {\n    this.onChange = fn;\n  }\n\n  setOnTouchedCallback(fn) {\n    this.onTouched = fn;\n  }\n\n  setIsDisabled(isDisabled) {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  handleInput({\n    target\n  }) {\n    this.onChange(target.checked);\n  }\n\n}\n\nNgrxCheckboxViewAdapter.ɵfac = function NgrxCheckboxViewAdapter_Factory(t) {\n  return new (t || NgrxCheckboxViewAdapter)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgrxCheckboxViewAdapter.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgrxCheckboxViewAdapter,\n  selectors: [[\"input\", \"type\", \"checkbox\", \"ngrxFormControlState\", \"\"]],\n  hostBindings: function NgrxCheckboxViewAdapter_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"blur\", function NgrxCheckboxViewAdapter_blur_HostBindingHandler() {\n        return ctx.onTouched();\n      })(\"change\", function NgrxCheckboxViewAdapter_change_HostBindingHandler($event) {\n        return ctx.handleInput($event);\n      });\n    }\n  },\n  inputs: {\n    ngrxFormControlState: \"ngrxFormControlState\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NGRX_FORM_VIEW_ADAPTER,\n    useExisting: forwardRef(() => NgrxCheckboxViewAdapter),\n    multi: true\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgrxCheckboxViewAdapter, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: 'input[type=checkbox][ngrxFormControlState]',\n      providers: [{\n        provide: NGRX_FORM_VIEW_ADAPTER,\n        useExisting: forwardRef(() => NgrxCheckboxViewAdapter),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    onTouched: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    ngrxFormControlState: [{\n      type: Input\n    }],\n    handleInput: [{\n      type: HostListener,\n      args: ['change', ['$event']]\n    }]\n  });\n})();\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\n\n\nfunction isAndroid(navigator) {\n  return /android (\\d+)/.test(navigator.userAgent.toLowerCase());\n} // tslint:disable:directive-class-suffix\n// tslint:disable:directive-selector\n// TODO: since this directive has a side-effect (setting the element's id attribute)\n// it should not blacklist other types of inputs but instead it should somehow figure\n// out whether it is the \"active\" view adapter and only perform its side effects if it\n// is active\n\n\nclass NgrxDefaultViewAdapter {\n  constructor(renderer, elementRef, platformId = null, // we use a special injection string that should never exist at runtime to allow mocking this dependency for testing\n  navigator = null) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.platformId = platformId;\n    this.nativeIdWasSet = false;\n\n    this.onChange = () => void 0;\n\n    this.onTouched = () => void 0;\n    /** Whether the user is creating a composition string (IME events). */\n\n\n    this.isComposing = false;\n    this.isCompositionSupported = isPlatformBrowser(this.platformId || '') && !isAndroid(navigator || window.navigator);\n  }\n\n  set ngrxFormControlState(value) {\n    if (!value) {\n      throw new Error('The control state must not be undefined!');\n    }\n\n    this.state = value;\n    const nativeId = this.elementRef.nativeElement.id;\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\n\n    if (shouldSetNativeId) {\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\n    }\n  }\n\n  ngAfterViewInit() {\n    const nativeId = this.elementRef.nativeElement.id;\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\n\n    if (shouldSetNativeId) {\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\n      this.nativeIdWasSet = true;\n    }\n  }\n\n  setViewValue(value) {\n    const normalizedValue = value == null ? '' : value;\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\n  }\n\n  setOnChangeCallback(fn) {\n    this.onChange = fn;\n  }\n\n  setOnTouchedCallback(fn) {\n    this.onTouched = fn;\n  }\n\n  setIsDisabled(isDisabled) {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  handleInput({\n    target\n  }) {\n    if (this.isCompositionSupported && this.isComposing) {\n      return;\n    }\n\n    this.onChange(target.value);\n  }\n\n  compositionStart() {\n    this.isComposing = true;\n  }\n\n  compositionEnd({\n    target\n  }) {\n    this.isComposing = false;\n\n    if (this.isCompositionSupported) {\n      this.onChange(target.value);\n    }\n  }\n\n}\n\nNgrxDefaultViewAdapter.ɵfac = function NgrxDefaultViewAdapter_Factory(t) {\n  return new (t || NgrxDefaultViewAdapter)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PLATFORM_ID, 8), i0.ɵɵdirectiveInject('ngrx-forms/never', 8));\n};\n\nNgrxDefaultViewAdapter.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgrxDefaultViewAdapter,\n  selectors: [[\"input\", \"ngrxFormControlState\", \"\", 3, \"type\", \"checkbox\", 3, \"type\", \"number\", 3, \"type\", \"radio\", 3, \"type\", \"range\"], [\"textarea\", \"ngrxFormControlState\", \"\"]],\n  hostBindings: function NgrxDefaultViewAdapter_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"blur\", function NgrxDefaultViewAdapter_blur_HostBindingHandler() {\n        return ctx.onTouched();\n      })(\"input\", function NgrxDefaultViewAdapter_input_HostBindingHandler($event) {\n        return ctx.handleInput($event);\n      })(\"compositionstart\", function NgrxDefaultViewAdapter_compositionstart_HostBindingHandler() {\n        return ctx.compositionStart();\n      })(\"compositionend\", function NgrxDefaultViewAdapter_compositionend_HostBindingHandler($event) {\n        return ctx.compositionEnd($event);\n      });\n    }\n  },\n  inputs: {\n    ngrxFormControlState: \"ngrxFormControlState\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NGRX_FORM_VIEW_ADAPTER,\n    useExisting: forwardRef(() => NgrxDefaultViewAdapter),\n    multi: true\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgrxDefaultViewAdapter, [{\n    type: Directive,\n    args: [{\n      selector: 'input:not([type=checkbox]):not([type=number]):not([type=radio]):not([type=range])[ngrxFormControlState],textarea[ngrxFormControlState]',\n      providers: [{\n        provide: NGRX_FORM_VIEW_ADAPTER,\n        useExisting: forwardRef(() => NgrxDefaultViewAdapter),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: ['ngrx-forms/never']\n      }]\n    }];\n  }, {\n    onTouched: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    ngrxFormControlState: [{\n      type: Input\n    }],\n    handleInput: [{\n      type: HostListener,\n      args: ['input', ['$event']]\n    }],\n    compositionStart: [{\n      type: HostListener,\n      args: ['compositionstart']\n    }],\n    compositionEnd: [{\n      type: HostListener,\n      args: ['compositionend', ['$event']]\n    }]\n  });\n})(); // tslint:disable:directive-class-suffix\n\n\nclass NgrxNumberViewAdapter {\n  constructor(renderer, elementRef) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.nativeIdWasSet = false;\n\n    this.onChange = () => void 0;\n\n    this.onTouched = () => void 0;\n  }\n\n  set ngrxFormControlState(value) {\n    if (!value) {\n      throw new Error('The control state must not be undefined!');\n    }\n\n    this.state = value;\n    const nativeId = this.elementRef.nativeElement.id;\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\n\n    if (shouldSetNativeId) {\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\n    }\n  }\n\n  ngAfterViewInit() {\n    const nativeId = this.elementRef.nativeElement.id;\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\n\n    if (shouldSetNativeId) {\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\n      this.nativeIdWasSet = true;\n    }\n  }\n\n  setViewValue(value) {\n    // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n    const normalizedValue = value === null ? '' : value;\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\n  }\n\n  setOnChangeCallback(fn) {\n    this.onChange = fn;\n  }\n\n  setOnTouchedCallback(fn) {\n    this.onTouched = fn;\n  }\n\n  setIsDisabled(isDisabled) {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  handleInput({\n    target\n  }) {\n    const value = target.value;\n    this.onChange(value === '' ? null : parseFloat(value));\n  }\n\n}\n\nNgrxNumberViewAdapter.ɵfac = function NgrxNumberViewAdapter_Factory(t) {\n  return new (t || NgrxNumberViewAdapter)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgrxNumberViewAdapter.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgrxNumberViewAdapter,\n  selectors: [[\"input\", \"type\", \"number\", \"ngrxFormControlState\", \"\"]],\n  hostBindings: function NgrxNumberViewAdapter_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"blur\", function NgrxNumberViewAdapter_blur_HostBindingHandler() {\n        return ctx.onTouched();\n      })(\"change\", function NgrxNumberViewAdapter_change_HostBindingHandler($event) {\n        return ctx.handleInput($event);\n      })(\"input\", function NgrxNumberViewAdapter_input_HostBindingHandler($event) {\n        return ctx.handleInput($event);\n      });\n    }\n  },\n  inputs: {\n    ngrxFormControlState: \"ngrxFormControlState\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NGRX_FORM_VIEW_ADAPTER,\n    useExisting: forwardRef(() => NgrxNumberViewAdapter),\n    multi: true\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgrxNumberViewAdapter, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: 'input[type=number][ngrxFormControlState]',\n      providers: [{\n        provide: NGRX_FORM_VIEW_ADAPTER,\n        useExisting: forwardRef(() => NgrxNumberViewAdapter),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    onTouched: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    ngrxFormControlState: [{\n      type: Input\n    }],\n    handleInput: [{\n      type: HostListener,\n      args: ['change', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['input', ['$event']]\n    }]\n  });\n})(); // tslint:disable:directive-class-suffix\n\n\nclass NgrxSelectViewAdapter {\n  constructor(renderer, elementRef) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.optionMap = {};\n    this.idCounter = 0;\n    this.selectedId = null;\n    this.value = undefined;\n    this.nativeIdWasSet = false;\n\n    this.onChangeFn = () => void 0;\n\n    this.onTouched = () => void 0;\n  }\n\n  set ngrxFormControlState(value) {\n    if (!value) {\n      throw new Error('The control state must not be undefined!');\n    }\n\n    this.state = value;\n    const nativeId = this.elementRef.nativeElement.id;\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\n\n    if (shouldSetNativeId) {\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\n    }\n  }\n\n  ngAfterViewInit() {\n    const nativeId = this.elementRef.nativeElement.id;\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\n\n    if (shouldSetNativeId) {\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\n      this.nativeIdWasSet = true;\n    }\n  }\n\n  setViewValue(value) {\n    this.value = value;\n    this.selectedId = this.getOptionId(value);\n\n    if (this.selectedId === null) {\n      this.renderer.setProperty(this.elementRef.nativeElement, 'selectedIndex', -1);\n    }\n\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.selectedId);\n  }\n\n  onChange({\n    target\n  }) {\n    this.selectedId = target.value;\n    const value = this.optionMap[this.selectedId];\n    this.value = value;\n    this.onChangeFn(value);\n  }\n\n  setOnChangeCallback(fn) {\n    this.onChangeFn = fn;\n  }\n\n  setOnTouchedCallback(fn) {\n    this.onTouched = fn;\n  }\n\n  setIsDisabled(isDisabled) {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  createOptionId() {\n    const id = this.idCounter.toString();\n    this.idCounter += 1;\n    return id;\n  }\n\n  updateOptionValue(id, value) {\n    this.optionMap[id] = value;\n\n    if (this.selectedId === id) {\n      this.onChangeFn(value);\n    } else if (value === this.value) {\n      this.setViewValue(value);\n    }\n  }\n\n  deregisterOption(id) {\n    delete this.optionMap[id];\n  }\n\n  getOptionId(value) {\n    for (const id of Array.from(Object.keys(this.optionMap))) {\n      if (this.optionMap[id] === value) {\n        return id;\n      }\n    }\n\n    return null;\n  }\n\n}\n\nNgrxSelectViewAdapter.ɵfac = function NgrxSelectViewAdapter_Factory(t) {\n  return new (t || NgrxSelectViewAdapter)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgrxSelectViewAdapter.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgrxSelectViewAdapter,\n  selectors: [[\"select\", \"ngrxFormControlState\", \"\", 3, \"multiple\", \"\"]],\n  hostBindings: function NgrxSelectViewAdapter_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"blur\", function NgrxSelectViewAdapter_blur_HostBindingHandler() {\n        return ctx.onTouched();\n      })(\"change\", function NgrxSelectViewAdapter_change_HostBindingHandler($event) {\n        return ctx.onChange($event);\n      });\n    }\n  },\n  inputs: {\n    ngrxFormControlState: \"ngrxFormControlState\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NGRX_FORM_VIEW_ADAPTER,\n    useExisting: forwardRef(() => NgrxSelectViewAdapter),\n    multi: true\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgrxSelectViewAdapter, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: 'select:not([multiple])[ngrxFormControlState]',\n      providers: [{\n        provide: NGRX_FORM_VIEW_ADAPTER,\n        useExisting: forwardRef(() => NgrxSelectViewAdapter),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    onTouched: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    ngrxFormControlState: [{\n      type: Input\n    }],\n    onChange: [{\n      type: HostListener,\n      args: ['change', ['$event']]\n    }]\n  });\n})();\n\nconst NULL_VIEW_ADAPTER$1 = {\n  createOptionId: () => '',\n  deregisterOption: () => void 0,\n  updateOptionValue: () => void 0\n};\nconst NULL_RENDERER$2 = {\n  setProperty: () => void 0\n};\n\nclass NgrxSelectOption {\n  constructor(element, renderer, viewAdapter) {\n    this.element = element;\n    this.renderer = renderer;\n    this.viewAdapter = viewAdapter;\n    this.isInitialized = false;\n    this.renderer = viewAdapter ? renderer : NULL_RENDERER$2;\n    this.viewAdapter = viewAdapter || NULL_VIEW_ADAPTER$1;\n    this.id = this.viewAdapter.createOptionId();\n  }\n\n  set value(value) {\n    // this cannot be done inside ngOnInit since the value property\n    // must be already set when the option value is updated in the view\n    // adapter and the initial binding of 'value' happens before\n    // ngOnInit runs\n    if (!this.isInitialized) {\n      this.isInitialized = true;\n      this.renderer.setProperty(this.element.nativeElement, 'value', this.id);\n    }\n\n    this.viewAdapter.updateOptionValue(this.id, value);\n  }\n\n  ngOnDestroy() {\n    this.viewAdapter.deregisterOption(this.id);\n  }\n\n}\n\nNgrxSelectOption.ɵfac = function NgrxSelectOption_Factory(t) {\n  return new (t || NgrxSelectOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(NgrxSelectViewAdapter, 9));\n};\n\nNgrxSelectOption.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgrxSelectOption,\n  selectors: [[\"option\"]],\n  inputs: {\n    value: \"value\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgrxSelectOption, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: 'option'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: NgrxSelectViewAdapter,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    value: [{\n      type: Input,\n      args: ['value']\n    }]\n  });\n})(); // tslint:disable:directive-class-suffix\n\n\nclass NgrxSelectMultipleViewAdapter {\n  constructor(renderer, elementRef) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.options = {};\n    this.optionValues = {};\n    this.idCounter = 0;\n    this.selectedIds = [];\n    this.nativeIdWasSet = false;\n\n    this.onChangeFn = () => void 0;\n\n    this.onTouched = () => void 0;\n  }\n\n  set ngrxFormControlState(value) {\n    if (!value) {\n      throw new Error('The control state must not be undefined!');\n    }\n\n    this.state = value;\n    const nativeId = this.elementRef.nativeElement.id;\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\n\n    if (shouldSetNativeId) {\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\n    }\n  }\n\n  ngAfterViewInit() {\n    const nativeId = this.elementRef.nativeElement.id;\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\n\n    if (shouldSetNativeId) {\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\n      this.nativeIdWasSet = true;\n    }\n  }\n\n  setViewValue(value) {\n    if (value === null) {\n      value = [];\n    }\n\n    if (!Array.isArray(value)) {\n      throw new Error(`the value provided to a NgrxSelectMultipleViewAdapter must be null or an array; got ${value} of type ${typeof value}`); // `\n    }\n\n    this.selectedIds = value.map(v => this.getOptionId(v)).filter(id => id !== null).map(id => id);\n    Object.keys(this.options).forEach(id => this.options[id].isSelected = this.selectedIds.indexOf(id) >= 0);\n  }\n\n  onChange() {\n    this.selectedIds = Object.keys(this.options).filter(id => this.options[id].isSelected);\n    const value = this.selectedIds.map(id => this.optionValues[id]);\n    this.onChangeFn(value);\n  }\n\n  setOnChangeCallback(fn) {\n    this.onChangeFn = fn;\n  }\n\n  setOnTouchedCallback(fn) {\n    this.onTouched = fn;\n  }\n\n  setIsDisabled(isDisabled) {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  registerOption(option) {\n    const id = this.idCounter.toString();\n    this.options[id] = option;\n    this.idCounter += 1;\n    return id;\n  }\n\n  updateOptionValue(id, value) {\n    this.optionValues[id] = value;\n\n    if (this.selectedIds.indexOf(id) >= 0) {\n      this.onChange();\n    }\n  }\n\n  deregisterOption(id) {\n    delete this.options[id];\n    delete this.optionValues[id];\n  }\n\n  getOptionId(value) {\n    for (const id of Array.from(Object.keys(this.optionValues))) {\n      if (this.optionValues[id] === value) {\n        return id;\n      }\n    }\n\n    return null;\n  }\n\n}\n\nNgrxSelectMultipleViewAdapter.ɵfac = function NgrxSelectMultipleViewAdapter_Factory(t) {\n  return new (t || NgrxSelectMultipleViewAdapter)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgrxSelectMultipleViewAdapter.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgrxSelectMultipleViewAdapter,\n  selectors: [[\"select\", \"multiple\", \"\", \"ngrxFormControlState\", \"\"]],\n  hostBindings: function NgrxSelectMultipleViewAdapter_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"blur\", function NgrxSelectMultipleViewAdapter_blur_HostBindingHandler() {\n        return ctx.onTouched();\n      })(\"change\", function NgrxSelectMultipleViewAdapter_change_HostBindingHandler() {\n        return ctx.onChange();\n      });\n    }\n  },\n  inputs: {\n    ngrxFormControlState: \"ngrxFormControlState\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NGRX_FORM_VIEW_ADAPTER,\n    useExisting: forwardRef(() => NgrxSelectMultipleViewAdapter),\n    multi: true\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgrxSelectMultipleViewAdapter, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: 'select[multiple][ngrxFormControlState]',\n      providers: [{\n        provide: NGRX_FORM_VIEW_ADAPTER,\n        useExisting: forwardRef(() => NgrxSelectMultipleViewAdapter),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    onTouched: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    ngrxFormControlState: [{\n      type: Input\n    }],\n    onChange: [{\n      type: HostListener,\n      args: ['change']\n    }]\n  });\n})();\n\nconst NULL_VIEW_ADAPTER = {\n  registerOption: () => '',\n  deregisterOption: () => void 0,\n  updateOptionValue: () => void 0\n};\nconst NULL_RENDERER$1 = {\n  setProperty: () => void 0\n};\n\nclass NgrxSelectMultipleOption {\n  constructor(element, renderer, viewAdapter) {\n    this.element = element;\n    this.renderer = renderer;\n    this.viewAdapter = viewAdapter;\n    this.renderer = viewAdapter ? renderer : NULL_RENDERER$1;\n    this.viewAdapter = viewAdapter || NULL_VIEW_ADAPTER;\n    this.id = this.viewAdapter.registerOption(this);\n  }\n\n  set value(value) {\n    this.viewAdapter.updateOptionValue(this.id, value);\n  }\n\n  set isSelected(selected) {\n    this.renderer.setProperty(this.element.nativeElement, 'selected', selected);\n  }\n\n  get isSelected() {\n    return this.element.nativeElement.selected;\n  }\n\n  ngOnInit() {\n    this.renderer.setProperty(this.element.nativeElement, 'value', this.id);\n  }\n\n  ngOnDestroy() {\n    this.viewAdapter.deregisterOption(this.id);\n  }\n\n}\n\nNgrxSelectMultipleOption.ɵfac = function NgrxSelectMultipleOption_Factory(t) {\n  return new (t || NgrxSelectMultipleOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(NgrxSelectMultipleViewAdapter, 9));\n};\n\nNgrxSelectMultipleOption.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgrxSelectMultipleOption,\n  selectors: [[\"option\"]],\n  inputs: {\n    value: \"value\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgrxSelectMultipleOption, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: 'option'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: NgrxSelectMultipleViewAdapter,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    value: [{\n      type: Input,\n      args: ['value']\n    }]\n  });\n})(); // tslint:disable:directive-class-suffix\n\n\nconst NULL_RENDERER = {\n  setProperty: () => void 0\n};\n/**\n * This directive is necessary to restore the default behaviour of Angular\n * when an `option` is used without an **ngrx-forms** form state. Since it\n * is not possible to select an element with a selector that considers its\n * parent the `option` directives for `select` and `select[multiple]` will\n * always be applied and therefore overriding the `[value]` binding which\n * disabled Angular's normal behaviour. This directive restores this\n * behaviour if no `select` or `select[multiple]` view adapter is found.\n * This is not a perfect solution since it may interfere with other\n * directives that try to set the `[value]` but that is very unlikely.\n */\n\nclass NgrxFallbackSelectOption {\n  constructor(element, renderer, viewAdapter, multipleViewAdapter) {\n    this.element = element;\n    this.renderer = renderer;\n    this.renderer = viewAdapter || multipleViewAdapter ? NULL_RENDERER : renderer;\n  }\n\n  set value(value) {\n    this.renderer.setProperty(this.element.nativeElement, 'value', value);\n  }\n\n}\n\nNgrxFallbackSelectOption.ɵfac = function NgrxFallbackSelectOption_Factory(t) {\n  return new (t || NgrxFallbackSelectOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(NgrxSelectViewAdapter, 9), i0.ɵɵdirectiveInject(NgrxSelectMultipleViewAdapter, 9));\n};\n\nNgrxFallbackSelectOption.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgrxFallbackSelectOption,\n  selectors: [[\"option\"]],\n  inputs: {\n    value: \"value\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgrxFallbackSelectOption, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: 'option'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: NgrxSelectViewAdapter,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: NgrxSelectMultipleViewAdapter,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    value: [{\n      type: Input,\n      args: ['value']\n    }]\n  });\n})(); // tslint:disable:directive-class-suffix\n\n\nclass NgrxRadioViewAdapter {\n  constructor(renderer, elementRef) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.nativeNameWasSet = false;\n\n    this.onChange = () => void 0;\n\n    this.onTouched = () => void 0;\n  }\n\n  set value(val) {\n    if (val !== this.latestValue) {\n      this.latestValue = val;\n\n      if (this.isChecked) {\n        this.onChange();\n      }\n    }\n  }\n\n  set ngrxFormControlState(value) {\n    if (!value) {\n      throw new Error('The control state must not be undefined!');\n    }\n\n    this.state = value;\n    const nativeName = this.elementRef.nativeElement.name;\n    const shouldSetNativeName = value.id !== nativeName && this.nativeNameWasSet;\n\n    if (shouldSetNativeName) {\n      this.renderer.setProperty(this.elementRef.nativeElement, 'name', value.id);\n    }\n  }\n\n  ngOnInit() {\n    this.isChecked = this.elementRef.nativeElement.checked;\n  }\n\n  ngAfterViewInit() {\n    const nativeName = this.elementRef.nativeElement.name;\n    const shouldSetNativeName = this.state.id !== nativeName && !nativeName;\n\n    if (shouldSetNativeName) {\n      this.renderer.setProperty(this.elementRef.nativeElement, 'name', this.state.id);\n      this.nativeNameWasSet = true;\n    }\n  }\n\n  setViewValue(value) {\n    this.isChecked = value === this.latestValue;\n    this.renderer.setProperty(this.elementRef.nativeElement, 'checked', this.isChecked);\n  }\n\n  setOnChangeCallback(fn) {\n    this.onChange = () => fn(this.latestValue);\n  }\n\n  setOnTouchedCallback(fn) {\n    this.onTouched = fn;\n  }\n\n  setIsDisabled(isDisabled) {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n}\n\nNgrxRadioViewAdapter.ɵfac = function NgrxRadioViewAdapter_Factory(t) {\n  return new (t || NgrxRadioViewAdapter)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgrxRadioViewAdapter.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgrxRadioViewAdapter,\n  selectors: [[\"input\", \"type\", \"radio\", \"ngrxFormControlState\", \"\"]],\n  hostBindings: function NgrxRadioViewAdapter_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"change\", function NgrxRadioViewAdapter_change_HostBindingHandler() {\n        return ctx.onChange();\n      })(\"blur\", function NgrxRadioViewAdapter_blur_HostBindingHandler() {\n        return ctx.onTouched();\n      });\n    }\n  },\n  inputs: {\n    value: \"value\",\n    ngrxFormControlState: \"ngrxFormControlState\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NGRX_FORM_VIEW_ADAPTER,\n    useExisting: forwardRef(() => NgrxRadioViewAdapter),\n    multi: true\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgrxRadioViewAdapter, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: 'input[type=radio][ngrxFormControlState]',\n      providers: [{\n        provide: NGRX_FORM_VIEW_ADAPTER,\n        useExisting: forwardRef(() => NgrxRadioViewAdapter),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    ngrxFormControlState: [{\n      type: Input\n    }],\n    onChange: [{\n      type: HostListener,\n      args: ['change']\n    }],\n    onTouched: [{\n      type: HostListener,\n      args: ['blur']\n    }]\n  });\n})(); // tslint:disable:directive-class-suffix\n\n\nclass NgrxRangeViewAdapter {\n  constructor(renderer, elementRef) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.nativeIdWasSet = false;\n\n    this.onChange = () => void 0;\n\n    this.onTouched = () => void 0;\n  }\n\n  set ngrxFormControlState(value) {\n    if (!value) {\n      throw new Error('The control state must not be undefined!');\n    }\n\n    this.state = value;\n    const nativeId = this.elementRef.nativeElement.id;\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\n\n    if (shouldSetNativeId) {\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\n    }\n  }\n\n  ngAfterViewInit() {\n    const nativeId = this.elementRef.nativeElement.id;\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\n\n    if (shouldSetNativeId) {\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\n      this.nativeIdWasSet = true;\n    }\n  }\n\n  setViewValue(value) {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', parseFloat(value));\n  }\n\n  setOnChangeCallback(fn) {\n    this.onChange = fn;\n  }\n\n  setOnTouchedCallback(fn) {\n    this.onTouched = fn;\n  }\n\n  setIsDisabled(isDisabled) {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  handleInput({\n    target\n  }) {\n    const value = target.value;\n    this.onChange(value === '' ? null : parseFloat(value));\n  }\n\n}\n\nNgrxRangeViewAdapter.ɵfac = function NgrxRangeViewAdapter_Factory(t) {\n  return new (t || NgrxRangeViewAdapter)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgrxRangeViewAdapter.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgrxRangeViewAdapter,\n  selectors: [[\"input\", \"type\", \"range\", \"ngrxFormControlState\", \"\"]],\n  hostBindings: function NgrxRangeViewAdapter_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"blur\", function NgrxRangeViewAdapter_blur_HostBindingHandler() {\n        return ctx.onTouched();\n      })(\"change\", function NgrxRangeViewAdapter_change_HostBindingHandler($event) {\n        return ctx.handleInput($event);\n      })(\"input\", function NgrxRangeViewAdapter_input_HostBindingHandler($event) {\n        return ctx.handleInput($event);\n      });\n    }\n  },\n  inputs: {\n    ngrxFormControlState: \"ngrxFormControlState\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NGRX_FORM_VIEW_ADAPTER,\n    useExisting: forwardRef(() => NgrxRangeViewAdapter),\n    multi: true\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgrxRangeViewAdapter, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: 'input[type=range][ngrxFormControlState]',\n      providers: [{\n        provide: NGRX_FORM_VIEW_ADAPTER,\n        useExisting: forwardRef(() => NgrxRangeViewAdapter),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    onTouched: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    ngrxFormControlState: [{\n      type: Input\n    }],\n    handleInput: [{\n      type: HostListener,\n      args: ['change', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['input', ['$event']]\n    }]\n  });\n})();\n\nconst BUILTIN_ADAPTERS = [NgrxCheckboxViewAdapter, NgrxRangeViewAdapter, NgrxNumberViewAdapter, NgrxSelectViewAdapter, NgrxSelectMultipleViewAdapter, NgrxRadioViewAdapter];\n\nfunction isBuiltInViewAdapter(viewAdapter) {\n  return BUILTIN_ADAPTERS.some(a => viewAdapter.constructor === a);\n}\n\nfunction selectViewAdapter(viewAdapters) {\n  if (!viewAdapters) {\n    throw new Error('No view adapter matches!');\n  }\n\n  let defaultAdapter;\n  let builtinAdapter;\n  let customAdapter;\n  viewAdapters.forEach(v => {\n    if (v.constructor === NgrxDefaultViewAdapter) {\n      defaultAdapter = v;\n    } else if (isBuiltInViewAdapter(v)) {\n      if (builtinAdapter) {\n        throw new Error('More than one built-in view adapter matches!');\n      }\n\n      builtinAdapter = v;\n    } else {\n      if (customAdapter) {\n        throw new Error('More than one custom view adapter matches!');\n      }\n\n      customAdapter = v;\n    }\n  });\n\n  if (customAdapter) {\n    return customAdapter;\n  }\n\n  if (builtinAdapter) {\n    return builtinAdapter;\n  }\n\n  if (defaultAdapter) {\n    return defaultAdapter;\n  }\n\n  throw new Error('No valid view adapter!');\n} // tslint:disable-next-line:variable-name\n\n\nconst NgrxValueConverters = {\n  default() {\n    return {\n      convertViewToStateValue: value => typeof value === 'object' && value !== null ? box(value) : value,\n      convertStateToViewValue: unbox\n    };\n  },\n\n  dateToISOString: {\n    convertViewToStateValue: date => date === null ? null : date.toISOString(),\n    convertStateToViewValue: s => s === null ? null : new Date(Date.parse(s))\n  },\n  objectToJSON: {\n    convertViewToStateValue: value => value === null ? null : JSON.stringify(value),\n    convertStateToViewValue: s => s === null ? null : JSON.parse(s)\n  }\n};\nvar NGRX_UPDATE_ON_TYPE;\n\n(function (NGRX_UPDATE_ON_TYPE) {\n  NGRX_UPDATE_ON_TYPE[\"CHANGE\"] = \"change\";\n  NGRX_UPDATE_ON_TYPE[\"BLUR\"] = \"blur\";\n  NGRX_UPDATE_ON_TYPE[\"NEVER\"] = \"never\";\n})(NGRX_UPDATE_ON_TYPE || (NGRX_UPDATE_ON_TYPE = {}));\n\nclass ControlValueAccessorAdapter {\n  constructor(valueAccessor) {\n    this.valueAccessor = valueAccessor;\n  }\n\n  setViewValue(value) {\n    this.valueAccessor.writeValue(value);\n  }\n\n  setOnChangeCallback(fn) {\n    this.valueAccessor.registerOnChange(fn);\n  }\n\n  setOnTouchedCallback(fn) {\n    this.valueAccessor.registerOnTouched(fn);\n  }\n\n  setIsDisabled(isDisabled) {\n    if (this.valueAccessor.setDisabledState) {\n      this.valueAccessor.setDisabledState(isDisabled);\n    }\n  }\n\n}\n\nclass NgrxFormControlDirective {\n  constructor(el, // for the dom parameter the `null` type must be last to ensure that in the compiled output\n  // there is no reference to the Document type to support non-browser platforms\n  dom, actionsSubject, viewAdapters, valueAccessors) {\n    this.el = el;\n    this.dom = dom;\n    this.actionsSubject = actionsSubject;\n    this.isInitialized = false;\n    this.focusTrackingIsEnabled = false;\n    this.ngrxUpdateOn = NGRX_UPDATE_ON_TYPE.CHANGE;\n    this.ngrxValueConverter = NgrxValueConverters.default();\n    viewAdapters = viewAdapters || [];\n    valueAccessors = valueAccessors || [];\n\n    if (valueAccessors.length > 1) {\n      throw new Error('More than one custom control value accessor matches!');\n    }\n\n    this.viewAdapter = valueAccessors.length > 0 ? new ControlValueAccessorAdapter(valueAccessors[0]) : selectViewAdapter(viewAdapters);\n  }\n\n  set ngrxFormControlState(newState) {\n    if (!newState) {\n      throw new Error('The control state must not be undefined!');\n    }\n\n    const oldState = this.state;\n    this.state = newState;\n\n    if (this.isInitialized) {\n      this.updateViewIfControlIdChanged(newState, oldState);\n      this.updateViewIfValueChanged(newState, oldState);\n      this.updateViewIfIsDisabledChanged(newState, oldState);\n      this.updateViewIfIsFocusedChanged(newState, oldState);\n    }\n  }\n\n  set ngrxEnableFocusTracking(value) {\n    if (value && !this.dom) {\n      throw new Error('focus tracking is only supported on the browser platform');\n    }\n\n    this.focusTrackingIsEnabled = value;\n  } // TODO: move this into a separate directive\n  // automatically apply the attribute that's used by the CDK to set initial focus\n\n\n  get focusRegionStartAttr() {\n    return this.state && this.state.isFocused ? '' : null;\n  }\n\n  updateViewIfControlIdChanged(newState, oldState) {\n    if (oldState && newState.id === oldState.id) {\n      return;\n    }\n\n    this.stateValue = newState.value;\n    this.viewValue = this.ngrxValueConverter.convertStateToViewValue(this.stateValue);\n    this.viewAdapter.setViewValue(this.viewValue);\n\n    if (this.viewAdapter.setIsDisabled) {\n      this.viewAdapter.setIsDisabled(newState.isDisabled);\n    }\n  }\n\n  updateViewIfValueChanged(newState, _) {\n    if (newState.value === this.stateValue) {\n      return;\n    }\n\n    this.stateValue = newState.value;\n    this.viewValue = this.ngrxValueConverter.convertStateToViewValue(newState.value);\n    this.viewAdapter.setViewValue(this.viewValue);\n  }\n\n  updateViewIfIsDisabledChanged(newState, oldState) {\n    if (!this.viewAdapter.setIsDisabled) {\n      return;\n    }\n\n    if (oldState && newState.isDisabled === oldState.isDisabled) {\n      return;\n    }\n\n    this.viewAdapter.setIsDisabled(newState.isDisabled);\n  }\n\n  updateViewIfIsFocusedChanged(newState, oldState) {\n    if (!this.focusTrackingIsEnabled) {\n      return;\n    }\n\n    if (oldState && newState.isFocused === oldState.isFocused) {\n      return;\n    }\n\n    if (newState.isFocused) {\n      this.el.nativeElement.focus();\n    } else {\n      this.el.nativeElement.blur();\n    }\n  }\n\n  dispatchAction(action) {\n    if (this.actionsSubject !== null) {\n      this.actionsSubject.next(action);\n    } else {\n      throw new Error('ActionsSubject must be present in order to dispatch actions!');\n    }\n  }\n\n  ngOnInit() {\n    if (!this.state) {\n      throw new Error('The form state must not be undefined!');\n    }\n\n    this.isInitialized = true;\n    this.updateViewIfControlIdChanged(this.state, undefined);\n    this.updateViewIfValueChanged(this.state, undefined);\n    this.updateViewIfIsDisabledChanged(this.state, undefined);\n    this.updateViewIfIsFocusedChanged(this.state, undefined);\n\n    const dispatchMarkAsDirtyAction = () => {\n      if (this.state.isPristine) {\n        this.dispatchAction(new MarkAsDirtyAction(this.state.id));\n      }\n    };\n\n    const dispatchSetValueAction = () => {\n      this.stateValue = this.ngrxValueConverter.convertViewToStateValue(this.viewValue);\n\n      if (this.stateValue !== this.state.value) {\n        this.dispatchAction(new SetValueAction(this.state.id, this.stateValue));\n        dispatchMarkAsDirtyAction();\n      }\n    };\n\n    this.viewAdapter.setOnChangeCallback(viewValue => {\n      this.viewValue = viewValue;\n\n      if (this.ngrxUpdateOn === NGRX_UPDATE_ON_TYPE.CHANGE) {\n        dispatchSetValueAction();\n      }\n    });\n    this.viewAdapter.setOnTouchedCallback(() => {\n      if (!this.state.isTouched && this.ngrxUpdateOn !== NGRX_UPDATE_ON_TYPE.NEVER) {\n        this.dispatchAction(new MarkAsTouchedAction(this.state.id));\n      }\n\n      if (this.ngrxUpdateOn === NGRX_UPDATE_ON_TYPE.BLUR) {\n        dispatchSetValueAction();\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    // we need to update the view again after it was initialized since some\n    // controls depend on child elements for setting the value (e.g. selects)\n    this.viewAdapter.setViewValue(this.viewValue);\n\n    if (this.viewAdapter.setIsDisabled) {\n      this.viewAdapter.setIsDisabled(this.state.isDisabled);\n    }\n  }\n\n  onFocusChange() {\n    if (!this.focusTrackingIsEnabled) {\n      return;\n    }\n\n    const isControlFocused = this.el.nativeElement === this.dom.activeElement;\n\n    if (isControlFocused !== this.state.isFocused) {\n      this.dispatchAction(isControlFocused ? new FocusAction(this.state.id) : new UnfocusAction(this.state.id));\n    }\n  }\n\n}\n\nNgrxFormControlDirective.ɵfac = function NgrxFormControlDirective_Factory(t) {\n  return new (t || NgrxFormControlDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(ActionsSubject, 8), i0.ɵɵdirectiveInject(NGRX_FORM_VIEW_ADAPTER, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10));\n};\n\nNgrxFormControlDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgrxFormControlDirective,\n  selectors: [[\"\", \"ngrxFormControlState\", \"\", 3, \"ngrxFormsAction\", \"\"]],\n  hostVars: 1,\n  hostBindings: function NgrxFormControlDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focusin\", function NgrxFormControlDirective_focusin_HostBindingHandler() {\n        return ctx.onFocusChange();\n      })(\"focusout\", function NgrxFormControlDirective_focusout_HostBindingHandler() {\n        return ctx.onFocusChange();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"cdk-focus-region-start\", ctx.focusRegionStartAttr);\n    }\n  },\n  inputs: {\n    ngrxFormControlState: \"ngrxFormControlState\",\n    ngrxUpdateOn: \"ngrxUpdateOn\",\n    ngrxEnableFocusTracking: \"ngrxEnableFocusTracking\",\n    ngrxValueConverter: \"ngrxValueConverter\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgrxFormControlDirective, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: ':not([ngrxFormsAction])[ngrxFormControlState]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i1.ActionsSubject,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ActionsSubject]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Self\n      }, {\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NGRX_FORM_VIEW_ADAPTER]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Self\n      }, {\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NG_VALUE_ACCESSOR]\n      }]\n    }];\n  }, {\n    ngrxFormControlState: [{\n      type: Input\n    }],\n    ngrxUpdateOn: [{\n      type: Input\n    }],\n    ngrxEnableFocusTracking: [{\n      type: Input\n    }],\n    ngrxValueConverter: [{\n      type: Input\n    }],\n    focusRegionStartAttr: [{\n      type: HostBinding,\n      args: ['attr.cdk-focus-region-start']\n    }],\n    onFocusChange: [{\n      type: HostListener,\n      args: ['focusin']\n    }, {\n      type: HostListener,\n      args: ['focusout']\n    }]\n  });\n})();\n\nclass NgrxLocalFormControlDirective extends NgrxFormControlDirective {\n  constructor(el, dom, viewAdapters, valueAccessors) {\n    super(el, dom, null, viewAdapters, valueAccessors);\n    this.ngrxFormsAction = new EventEmitter();\n  }\n\n  dispatchAction(action) {\n    this.ngrxFormsAction.emit(action);\n  }\n\n}\n\nNgrxLocalFormControlDirective.ɵfac = function NgrxLocalFormControlDirective_Factory(t) {\n  return new (t || NgrxLocalFormControlDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(NGRX_FORM_VIEW_ADAPTER, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10));\n};\n\nNgrxLocalFormControlDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgrxLocalFormControlDirective,\n  selectors: [[\"\", \"ngrxFormControlState\", \"\", \"ngrxFormsAction\", \"\"]],\n  outputs: {\n    ngrxFormsAction: \"ngrxFormsAction\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgrxLocalFormControlDirective, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: '[ngrxFormControlState][ngrxFormsAction]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Self\n      }, {\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NGRX_FORM_VIEW_ADAPTER]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Self\n      }, {\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NG_VALUE_ACCESSOR]\n      }]\n    }];\n  }, {\n    ngrxFormsAction: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgrxFormDirective {\n  constructor(actionsSubject) {\n    this.actionsSubject = actionsSubject;\n    this.actionsSubject = actionsSubject;\n  }\n\n  dispatchAction(action) {\n    if (this.actionsSubject !== null) {\n      this.actionsSubject.next(action);\n    } else {\n      throw new Error('ActionsSubject must be present in order to dispatch actions!');\n    }\n  }\n\n  ngOnInit() {\n    if (!this.state) {\n      throw new Error('The form state must not be undefined!');\n    }\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.isUnsubmitted) {\n      this.dispatchAction(new MarkAsSubmittedAction(this.state.id));\n    }\n  }\n\n}\n\nNgrxFormDirective.ɵfac = function NgrxFormDirective_Factory(t) {\n  return new (t || NgrxFormDirective)(i0.ɵɵdirectiveInject(ActionsSubject, 8));\n};\n\nNgrxFormDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgrxFormDirective,\n  selectors: [[\"form\", \"ngrxFormState\", \"\", 3, \"ngrxFormsAction\", \"\"]],\n  hostBindings: function NgrxFormDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"submit\", function NgrxFormDirective_submit_HostBindingHandler($event) {\n        return ctx.onSubmit($event);\n      });\n    }\n  },\n  inputs: {\n    state: [\"ngrxFormState\", \"state\"]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgrxFormDirective, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: 'form:not([ngrxFormsAction])[ngrxFormState]'\n    }]\n  }], function () {\n    return [{\n      type: i1.ActionsSubject,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ActionsSubject]\n      }]\n    }];\n  }, {\n    state: [{\n      type: Input,\n      args: ['ngrxFormState']\n    }],\n    onSubmit: [{\n      type: HostListener,\n      args: ['submit', ['$event']]\n    }]\n  });\n})();\n\nclass NgrxLocalFormDirective extends NgrxFormDirective {\n  constructor() {\n    super(null);\n    this.ngrxFormsAction = new EventEmitter();\n  }\n\n  dispatchAction(action) {\n    this.ngrxFormsAction.emit(action);\n  }\n\n}\n\nNgrxLocalFormDirective.ɵfac = function NgrxLocalFormDirective_Factory(t) {\n  return new (t || NgrxLocalFormDirective)();\n};\n\nNgrxLocalFormDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgrxLocalFormDirective,\n  selectors: [[\"form\", \"ngrxFormState\", \"\", \"ngrxFormsAction\", \"\"]],\n  outputs: {\n    ngrxFormsAction: \"ngrxFormsAction\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgrxLocalFormDirective, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: 'form[ngrxFormState][ngrxFormsAction]'\n    }]\n  }], function () {\n    return [];\n  }, {\n    ngrxFormsAction: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Lists the available status class names based on the property\n * they are depending on.\n */\n\n\nconst NGRX_STATUS_CLASS_NAMES = {\n  isValid: 'ngrx-forms-valid',\n  isInvalid: 'ngrx-forms-invalid',\n  isDirty: 'ngrx-forms-dirty',\n  isPristine: 'ngrx-forms-pristine',\n  isTouched: 'ngrx-forms-touched',\n  isUntouched: 'ngrx-forms-untouched',\n  isSubmitted: 'ngrx-forms-submitted',\n  isUnsubmitted: 'ngrx-forms-unsubmitted',\n  isValidationPending: 'ngrx-forms-validation-pending'\n};\n\nclass NgrxStatusCssClassesDirective {\n  set ngrxFormControlState(state) {\n    this.state = state;\n  }\n\n  set ngrxFormState(state) {\n    this.state = state;\n  }\n\n  get isValid() {\n    return this.state.isValid;\n  }\n\n  get isInvalid() {\n    return this.state.isInvalid;\n  }\n\n  get isDirty() {\n    return this.state.isDirty;\n  }\n\n  get isPristine() {\n    return this.state.isPristine;\n  }\n\n  get isTouched() {\n    return this.state.isTouched;\n  }\n\n  get isUntouched() {\n    return this.state.isUntouched;\n  }\n\n  get isSubmitted() {\n    return this.state.isSubmitted;\n  }\n\n  get isUnsubmitted() {\n    return this.state.isUnsubmitted;\n  }\n\n  get isValidationPending() {\n    return this.state.isValidationPending;\n  }\n\n}\n\nNgrxStatusCssClassesDirective.ɵfac = function NgrxStatusCssClassesDirective_Factory(t) {\n  return new (t || NgrxStatusCssClassesDirective)();\n};\n\nNgrxStatusCssClassesDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgrxStatusCssClassesDirective,\n  selectors: [[\"form\", \"ngrxFormState\", \"\"], [\"\", \"ngrxFormControlState\", \"\"]],\n  hostVars: 18,\n  hostBindings: function NgrxStatusCssClassesDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ngrx-forms-valid\", ctx.isValid)(\"ngrx-forms-invalid\", ctx.isInvalid)(\"ngrx-forms-dirty\", ctx.isDirty)(\"ngrx-forms-pristine\", ctx.isPristine)(\"ngrx-forms-touched\", ctx.isTouched)(\"ngrx-forms-untouched\", ctx.isUntouched)(\"ngrx-forms-submitted\", ctx.isSubmitted)(\"ngrx-forms-unsubmitted\", ctx.isUnsubmitted)(\"ngrx-forms-validation-pending\", ctx.isValidationPending);\n    }\n  },\n  inputs: {\n    ngrxFormControlState: \"ngrxFormControlState\",\n    ngrxFormState: \"ngrxFormState\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgrxStatusCssClassesDirective, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: 'form[ngrxFormState],[ngrxFormControlState]'\n    }]\n  }], null, {\n    ngrxFormControlState: [{\n      type: Input\n    }],\n    ngrxFormState: [{\n      type: Input\n    }],\n    isValid: [{\n      type: HostBinding,\n      args: [`class.${NGRX_STATUS_CLASS_NAMES.isValid}`]\n    }],\n    isInvalid: [{\n      type: HostBinding,\n      args: [`class.${NGRX_STATUS_CLASS_NAMES.isInvalid}`]\n    }],\n    isDirty: [{\n      type: HostBinding,\n      args: [`class.${NGRX_STATUS_CLASS_NAMES.isDirty}`]\n    }],\n    isPristine: [{\n      type: HostBinding,\n      args: [`class.${NGRX_STATUS_CLASS_NAMES.isPristine}`]\n    }],\n    isTouched: [{\n      type: HostBinding,\n      args: [`class.${NGRX_STATUS_CLASS_NAMES.isTouched}`]\n    }],\n    isUntouched: [{\n      type: HostBinding,\n      args: [`class.${NGRX_STATUS_CLASS_NAMES.isUntouched}`]\n    }],\n    isSubmitted: [{\n      type: HostBinding,\n      args: [`class.${NGRX_STATUS_CLASS_NAMES.isSubmitted}`]\n    }],\n    isUnsubmitted: [{\n      type: HostBinding,\n      args: [`class.${NGRX_STATUS_CLASS_NAMES.isUnsubmitted}`]\n    }],\n    isValidationPending: [{\n      type: HostBinding,\n      args: [`class.${NGRX_STATUS_CLASS_NAMES.isValidationPending}`]\n    }]\n  });\n})();\n\nconst exportsAndDeclarations = [NgrxFormControlDirective, NgrxLocalFormControlDirective, NgrxFormDirective, NgrxLocalFormDirective, NgrxCheckboxViewAdapter, NgrxDefaultViewAdapter, NgrxNumberViewAdapter, NgrxRadioViewAdapter, NgrxRangeViewAdapter, NgrxSelectMultipleOption, NgrxSelectMultipleViewAdapter, NgrxSelectOption, NgrxSelectViewAdapter, NgrxFallbackSelectOption, NgrxStatusCssClassesDirective];\n\nclass NgrxFormsModule {}\n\nNgrxFormsModule.ɵfac = function NgrxFormsModule_Factory(t) {\n  return new (t || NgrxFormsModule)();\n};\n\nNgrxFormsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgrxFormsModule\n});\nNgrxFormsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgrxFormsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: exportsAndDeclarations,\n      exports: exportsAndDeclarations\n    }]\n  }], null, null);\n})();\n/**\n * ngrx-forms\n * Proper integration of forms in Angular applications using Ngrx\n * Written by Jonathan Ziller.\n * MIT license.\n * https://github.com/MrWolfZ/ngrx-forms\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ALL_NGRX_FORMS_ACTION_TYPES, AddArrayControlAction, AddGroupControlAction, ClearAsyncErrorAction, DisableAction, EnableAction, FocusAction, MarkAsDirtyAction, MarkAsPristineAction, MarkAsSubmittedAction, MarkAsTouchedAction, MarkAsUnsubmittedAction, MarkAsUntouchedAction, MoveArrayControlAction, NGRX_FORM_VIEW_ADAPTER, NGRX_STATUS_CLASS_NAMES, NGRX_UPDATE_ON_TYPE, NgrxCheckboxViewAdapter, NgrxDefaultViewAdapter, NgrxFallbackSelectOption, NgrxFormControlDirective, NgrxFormDirective, NgrxFormsModule, NgrxLocalFormControlDirective, NgrxLocalFormDirective, NgrxNumberViewAdapter, NgrxRadioViewAdapter, NgrxRangeViewAdapter, NgrxSelectMultipleOption, NgrxSelectMultipleViewAdapter, NgrxSelectOption, NgrxSelectViewAdapter, NgrxStatusCssClassesDirective, NgrxValueConverters, RemoveArrayControlAction, RemoveGroupControlAction, ResetAction, SetAsyncErrorAction, SetErrorsAction, SetUserDefinedPropertyAction, SetValueAction, StartAsyncValidationAction, SwapArrayControlAction, UnfocusAction, addArrayControl, addGroupControl, box, clearAsyncError, compose, createFormArrayState, createFormControlState, createFormGroupState, createFormStateReducerWithUpdate, disable, enable, focus, formArrayReducer, formControlReducer, formGroupReducer, formStateReducer, isArrayState, isBoxed, isGroupState, isNgrxFormsAction, markAsDirty, markAsPristine, markAsSubmitted, markAsTouched, markAsUnsubmitted, markAsUntouched, moveArrayControl, onNgrxForms, onNgrxFormsAction, removeArrayControl, removeGroupControl, reset, setAsyncError, setErrors, setUserDefinedProperty, setValue, startAsyncValidation, swapArrayControl, unbox, unfocus, updateArray, updateArrayWithFilter, updateGroup, updateRecursive, validate, wrapReducerWithFormStateUpdate };","map":{"version":3,"sources":["C:/Users/ansif/OneDrive/Documents/Workspaces/archives/angular-be5pvt/node_modules/ngrx-forms/fesm2015/ngrx-forms.js"],"names":["i0","InjectionToken","forwardRef","Directive","HostListener","Input","PLATFORM_ID","Optional","Inject","Host","Self","HostBinding","EventEmitter","Output","NgModule","isPlatformBrowser","DOCUMENT","NG_VALUE_ACCESSOR","i1","ActionsSubject","SetValueAction","constructor","controlId","value","type","TYPE","SetErrorsAction","errors","SetAsyncErrorAction","name","ClearAsyncErrorAction","StartAsyncValidationAction","MarkAsDirtyAction","MarkAsPristineAction","EnableAction","DisableAction","MarkAsTouchedAction","MarkAsUntouchedAction","FocusAction","UnfocusAction","MarkAsSubmittedAction","MarkAsUnsubmittedAction","AddArrayControlAction","index","AddGroupControlAction","RemoveArrayControlAction","SwapArrayControlAction","fromIndex","toIndex","MoveArrayControlAction","RemoveGroupControlAction","SetUserDefinedPropertyAction","ResetAction","isNgrxFormsAction","action","startsWith","ALL_NGRX_FORMS_ACTION_TYPES","isBoxed","__boxed","box","unbox","indexOf","Array","isArray","map","Object","keys","reduce","a","k","assign","isEmpty","obj","length","defaultOptions","treatUndefinedAndMissingKeyAsSame","deepEquals","_1","_2","options","leftChain","rightChain","compare2Objects","x","y","p","isNaN","Date","RegExp","String","Number","toString","isPrototypeOf","hasOwnProperty","undefined","push","pop","arguments","Error","isFormState","state","isArrayState","controls","isGroupState","createChildState","id","childValue","createFormControlState","createFormArrayState","createFormGroupState","verifyFormControlValueIsValid","errorMsg","JSON","stringify","serialized","deserialized","parse","pendingValidations","isValidationPending","isValid","isInvalid","isEnabled","isDisabled","isDirty","isPristine","isTouched","isUntouched","isSubmitted","isUnsubmitted","isFocused","isUnfocused","userDefinedProperties","getFormGroupValue","originalValue","hasChanged","newValue","res","key","getFormGroupErrors","originalErrors","groupErrors","filter","newErrors","controlErrors","computeGroupState","flags","wasOrShouldBeDirty","some","wasOrShouldBeEnabled","wasOrShouldBeTouched","wasOrShouldBeSubmitted","initialValue","getFormArrayValue","i","getFormArrayErrors","computeArrayState","inferredControls","clearAsyncErrorReducer$2","v","disableReducer$2","enableReducer$2","focusReducer","markAsDirtyReducer$2","markAsPristineReducer$2","markAsSubmittedReducer$2","markAsTouchedReducer$2","markAsUnsubmittedReducer$2","markAsUntouchedReducer$2","resetReducer$2","setAsyncErrorReducer$2","setErrorsReducer$2","asyncErrors","setUserDefinedPropertyReducer$2","setValueReducer$2","startAsyncValidationReducer$2","unfocusReducer","formControlReducerInternal","formControlReducer","dispatchActionPerChild$1","actionCreator","newControls","newState","formStateReducer","callChildReducers$1","childReducer$1","updateIdRecursiveForGroup","newId","agg","updateIdRecursive","updateIdRecursiveForArray","c","addControlReducer$1","splice","clearAsyncErrorReducer$1","disableReducer$1","enableReducer$1","markAsDirtyReducer$1","markAsPristineReducer$1","markAsSubmittedReducer$1","markAsTouchedReducer$1","markAsUnsubmittedReducer$1","markAsUntouchedReducer$1","move","array","item","slice","targetIndex","moveControlReducer","removeControlReducer$1","_","resetReducer$1","setAsyncErrorReducer$1","setErrorsReducer$1","childAndAsyncErrors","setUserDefinedPropertyReducer$1","setValueReducer$1","startAsyncValidationReducer$1","swapArrayValues","j","n","swapControlReducer","formArrayReducerInternal","formArrayReducer","formGroupReducer","createFormStateReducerWithUpdate","updateFnOrUpdateFnArr","updateFnArr","s","f","reduceNestedFormState","reduceNestedFormStates","onNgrxForms","reducer","types","onNgrxFormsAction","actionCons","wrapReducerWithFormStateUpdate","formStateLocator","updateFn","updatedState","formState","formStateKey","find","updatedFormState","dispatchActionPerChild","callChildReducers","childReducer","addControlReducer","clearAsyncErrorReducer","disableReducer","enableReducer","markAsDirtyReducer","markAsPristineReducer","markAsSubmittedReducer","markAsTouchedReducer","markAsUnsubmittedReducer","markAsUntouchedReducer","removeControlReducer","resetReducer","setAsyncErrorReducer","setErrorsReducer","setUserDefinedPropertyReducer","setValueReducer","startAsyncValidationReducer","formGroupReducerInternal","abstractControlReducer","compose","fns","t","ensureState","updateArrayControlsState","filterFn","control","idx","newControl","updateArraySingle","updateArrayWithFilter","stateOrFilterFunction","filterFunctionOrFunctionOrFunctionArray","rest","concat","updateArray","stateOrFunctionOrFunctionArray","updateGroupControlsState","updateFns","updateGroupSingle","updateGroup","stateOrUpdateFnOrUpdateFnArray","updateRecursiveSingle","parent","updateFunctions","updateRecursive","setValue","valueOrState","setErrors","errorsOrErrorsArrayOrState","errorsOrErrorsArray","errorsArray","err","validate","functionOrFunctionArr","functionArr","validationFn","enable","disable","markAsDirty","markAsPristine","markAsTouched","markAsUntouched","markAsSubmitted","markAsUnsubmitted","focus","unfocus","addArrayControl","indexOrValue","addGroupControl","nameOrState","valueOrName","moveArrayControl","indexOrState","swapArrayControl","removeArrayControl","removeGroupControl","setUserDefinedProperty","reset","startAsyncValidation","setAsyncError","nameOrValue","clearAsyncError","NGRX_FORM_VIEW_ADAPTER","NgrxCheckboxViewAdapter","renderer","elementRef","nativeIdWasSet","onChange","onTouched","ngrxFormControlState","nativeId","nativeElement","shouldSetNativeId","setProperty","ngAfterViewInit","setViewValue","setOnChangeCallback","fn","setOnTouchedCallback","setIsDisabled","handleInput","target","checked","ɵfac","Renderer2","ElementRef","ɵdir","provide","useExisting","multi","args","selector","providers","isAndroid","navigator","test","userAgent","toLowerCase","NgrxDefaultViewAdapter","platformId","isComposing","isCompositionSupported","window","normalizedValue","compositionStart","compositionEnd","decorators","NgrxNumberViewAdapter","parseFloat","NgrxSelectViewAdapter","optionMap","idCounter","selectedId","onChangeFn","getOptionId","createOptionId","updateOptionValue","deregisterOption","from","NULL_VIEW_ADAPTER$1","NULL_RENDERER$2","NgrxSelectOption","element","viewAdapter","isInitialized","ngOnDestroy","NgrxSelectMultipleViewAdapter","optionValues","selectedIds","forEach","isSelected","registerOption","option","NULL_VIEW_ADAPTER","NULL_RENDERER$1","NgrxSelectMultipleOption","selected","ngOnInit","NULL_RENDERER","NgrxFallbackSelectOption","multipleViewAdapter","NgrxRadioViewAdapter","nativeNameWasSet","val","latestValue","isChecked","nativeName","shouldSetNativeName","NgrxRangeViewAdapter","BUILTIN_ADAPTERS","isBuiltInViewAdapter","selectViewAdapter","viewAdapters","defaultAdapter","builtinAdapter","customAdapter","NgrxValueConverters","default","convertViewToStateValue","convertStateToViewValue","dateToISOString","date","toISOString","objectToJSON","NGRX_UPDATE_ON_TYPE","ControlValueAccessorAdapter","valueAccessor","writeValue","registerOnChange","registerOnTouched","setDisabledState","NgrxFormControlDirective","el","dom","actionsSubject","valueAccessors","focusTrackingIsEnabled","ngrxUpdateOn","CHANGE","ngrxValueConverter","oldState","updateViewIfControlIdChanged","updateViewIfValueChanged","updateViewIfIsDisabledChanged","updateViewIfIsFocusedChanged","ngrxEnableFocusTracking","focusRegionStartAttr","stateValue","viewValue","blur","dispatchAction","next","dispatchMarkAsDirtyAction","dispatchSetValueAction","NEVER","BLUR","onFocusChange","isControlFocused","activeElement","NgrxLocalFormControlDirective","ngrxFormsAction","emit","NgrxFormDirective","onSubmit","event","preventDefault","NgrxLocalFormDirective","NGRX_STATUS_CLASS_NAMES","NgrxStatusCssClassesDirective","ngrxFormState","exportsAndDeclarations","NgrxFormsModule","ɵmod","ɵinj","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, HostListener, Input, PLATFORM_ID, Optional, Inject, Host, Self, HostBinding, EventEmitter, Output, NgModule } from '@angular/core';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i1 from '@ngrx/store';\nimport { ActionsSubject } from '@ngrx/store';\n\n// NOTE: the explicit type declaration for the `TYPE` properties is required\n// for the output declarations to properly use the literal string type instead\n// of just `string`\nclass SetValueAction {\n    constructor(controlId, value) {\n        this.controlId = controlId;\n        this.value = value;\n        this.type = SetValueAction.TYPE;\n    }\n}\nSetValueAction.TYPE = 'ngrx/forms/SET_VALUE';\nclass SetErrorsAction {\n    constructor(controlId, errors) {\n        this.controlId = controlId;\n        this.errors = errors;\n        this.type = SetErrorsAction.TYPE;\n    }\n}\nSetErrorsAction.TYPE = 'ngrx/forms/SET_ERRORS';\nclass SetAsyncErrorAction {\n    constructor(controlId, name, value) {\n        this.controlId = controlId;\n        this.name = name;\n        this.value = value;\n        this.type = SetAsyncErrorAction.TYPE;\n    }\n}\nSetAsyncErrorAction.TYPE = 'ngrx/forms/SET_ASYNC_ERROR';\nclass ClearAsyncErrorAction {\n    constructor(controlId, name) {\n        this.controlId = controlId;\n        this.name = name;\n        this.type = ClearAsyncErrorAction.TYPE;\n    }\n}\nClearAsyncErrorAction.TYPE = 'ngrx/forms/CLEAR_ASYNC_ERROR';\nclass StartAsyncValidationAction {\n    constructor(controlId, name) {\n        this.controlId = controlId;\n        this.name = name;\n        this.type = StartAsyncValidationAction.TYPE;\n    }\n}\nStartAsyncValidationAction.TYPE = 'ngrx/forms/START_ASYNC_VALIDATION';\nclass MarkAsDirtyAction {\n    constructor(controlId) {\n        this.controlId = controlId;\n        this.type = MarkAsDirtyAction.TYPE;\n    }\n}\nMarkAsDirtyAction.TYPE = 'ngrx/forms/MARK_AS_DIRTY';\nclass MarkAsPristineAction {\n    constructor(controlId) {\n        this.controlId = controlId;\n        this.type = MarkAsPristineAction.TYPE;\n    }\n}\nMarkAsPristineAction.TYPE = 'ngrx/forms/MARK_AS_PRISTINE';\nclass EnableAction {\n    constructor(controlId) {\n        this.controlId = controlId;\n        this.type = EnableAction.TYPE;\n    }\n}\nEnableAction.TYPE = 'ngrx/forms/ENABLE';\nclass DisableAction {\n    constructor(controlId) {\n        this.controlId = controlId;\n        this.type = DisableAction.TYPE;\n    }\n}\nDisableAction.TYPE = 'ngrx/forms/DISABLE';\nclass MarkAsTouchedAction {\n    constructor(controlId) {\n        this.controlId = controlId;\n        this.type = MarkAsTouchedAction.TYPE;\n    }\n}\nMarkAsTouchedAction.TYPE = 'ngrx/forms/MARK_AS_TOUCHED';\nclass MarkAsUntouchedAction {\n    constructor(controlId) {\n        this.controlId = controlId;\n        this.type = MarkAsUntouchedAction.TYPE;\n    }\n}\nMarkAsUntouchedAction.TYPE = 'ngrx/forms/MARK_AS_UNTOUCHED';\nclass FocusAction {\n    constructor(controlId) {\n        this.controlId = controlId;\n        this.type = FocusAction.TYPE;\n    }\n}\nFocusAction.TYPE = 'ngrx/forms/FOCUS';\nclass UnfocusAction {\n    constructor(controlId) {\n        this.controlId = controlId;\n        this.type = UnfocusAction.TYPE;\n    }\n}\nUnfocusAction.TYPE = 'ngrx/forms/UNFOCUS';\nclass MarkAsSubmittedAction {\n    constructor(controlId) {\n        this.controlId = controlId;\n        this.type = MarkAsSubmittedAction.TYPE;\n    }\n}\nMarkAsSubmittedAction.TYPE = 'ngrx/forms/MARK_AS_SUBMITTED';\nclass MarkAsUnsubmittedAction {\n    constructor(controlId) {\n        this.controlId = controlId;\n        this.type = MarkAsUnsubmittedAction.TYPE;\n    }\n}\nMarkAsUnsubmittedAction.TYPE = 'ngrx/forms/MARK_AS_UNSUBMITTED';\nclass AddArrayControlAction {\n    constructor(controlId, value, index) {\n        this.controlId = controlId;\n        this.value = value;\n        this.index = index;\n        this.type = AddArrayControlAction.TYPE;\n    }\n}\nAddArrayControlAction.TYPE = 'ngrx/forms/ADD_ARRAY_CONTROL';\nclass AddGroupControlAction {\n    constructor(controlId, name, value) {\n        this.controlId = controlId;\n        this.name = name;\n        this.value = value;\n        this.type = AddGroupControlAction.TYPE;\n    }\n}\nAddGroupControlAction.TYPE = 'ngrx/forms/ADD_GROUP_CONTROL';\nclass RemoveArrayControlAction {\n    constructor(controlId, index) {\n        this.controlId = controlId;\n        this.index = index;\n        this.type = RemoveArrayControlAction.TYPE;\n    }\n}\nRemoveArrayControlAction.TYPE = 'ngrx/forms/REMOVE_ARRAY_CONTROL';\nclass SwapArrayControlAction {\n    constructor(controlId, fromIndex, toIndex) {\n        this.controlId = controlId;\n        this.fromIndex = fromIndex;\n        this.toIndex = toIndex;\n        this.type = SwapArrayControlAction.TYPE;\n    }\n}\nSwapArrayControlAction.TYPE = 'ngrx/forms/SWAP_ARRAY_CONTROL';\nclass MoveArrayControlAction {\n    constructor(controlId, fromIndex, toIndex) {\n        this.controlId = controlId;\n        this.fromIndex = fromIndex;\n        this.toIndex = toIndex;\n        this.type = MoveArrayControlAction.TYPE;\n    }\n}\nMoveArrayControlAction.TYPE = 'ngrx/forms/MOVE_ARRAY_CONTROL';\nclass RemoveGroupControlAction {\n    constructor(controlId, name) {\n        this.controlId = controlId;\n        this.name = name;\n        this.type = RemoveGroupControlAction.TYPE;\n    }\n}\nRemoveGroupControlAction.TYPE = 'ngrx/forms/REMOVE_CONTROL';\nclass SetUserDefinedPropertyAction {\n    constructor(controlId, name, value) {\n        this.controlId = controlId;\n        this.name = name;\n        this.value = value;\n        this.type = SetUserDefinedPropertyAction.TYPE;\n    }\n}\nSetUserDefinedPropertyAction.TYPE = 'ngrx/forms/SET_USER_DEFINED_PROPERTY';\nclass ResetAction {\n    constructor(controlId) {\n        this.controlId = controlId;\n        this.type = ResetAction.TYPE;\n    }\n}\nResetAction.TYPE = 'ngrx/forms/RESET';\nfunction isNgrxFormsAction(action) {\n    return !!action.type && action.type.startsWith('ngrx/forms/');\n}\nconst ALL_NGRX_FORMS_ACTION_TYPES = [\n    SetValueAction.TYPE,\n    SetErrorsAction.TYPE,\n    SetAsyncErrorAction.TYPE,\n    ClearAsyncErrorAction.TYPE,\n    StartAsyncValidationAction.TYPE,\n    MarkAsDirtyAction.TYPE,\n    MarkAsPristineAction.TYPE,\n    EnableAction.TYPE,\n    DisableAction.TYPE,\n    MarkAsTouchedAction.TYPE,\n    MarkAsUntouchedAction.TYPE,\n    FocusAction.TYPE,\n    UnfocusAction.TYPE,\n    MarkAsSubmittedAction.TYPE,\n    MarkAsUnsubmittedAction.TYPE,\n    AddGroupControlAction.TYPE,\n    RemoveGroupControlAction.TYPE,\n    AddArrayControlAction.TYPE,\n    RemoveArrayControlAction.TYPE,\n    SetUserDefinedPropertyAction.TYPE,\n    ResetAction.TYPE,\n    SwapArrayControlAction.TYPE,\n    MoveArrayControlAction.TYPE,\n];\n\nfunction isBoxed(value) {\n    return !!value && value.__boxed === '';\n}\nfunction box(value) {\n    return {\n        __boxed: '',\n        value,\n    };\n}\nfunction unbox(value) {\n    if (['string', 'boolean', 'number', 'undefined'].indexOf(typeof value) >= 0 || value === null) {\n        return value;\n    }\n    if (isBoxed(value)) {\n        return value.value;\n    }\n    if (Array.isArray(value)) {\n        return value.map(unbox);\n    }\n    return Object.keys(value).reduce((a, k) => Object.assign(a, { [k]: unbox(value[k]) }), {});\n}\n\nfunction isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n}\nconst defaultOptions = {\n    treatUndefinedAndMissingKeyAsSame: false,\n};\nfunction deepEquals(_1, _2, options = {}) {\n    const { treatUndefinedAndMissingKeyAsSame } = Object.assign({}, defaultOptions, options);\n    const leftChain = [];\n    const rightChain = [];\n    function compare2Objects(x, y) {\n        let p;\n        // remember that NaN === NaN returns false\n        // and isNaN(undefined) returns true\n        if (isNaN(x) && isNaN(y) && typeof x === 'number' && typeof y === 'number') {\n            return true;\n        }\n        // Compare primitives and functions.\n        // Check if both arguments link to the same object.\n        // Especially useful on the step where we compare prototypes\n        if (x === y) {\n            return true;\n        }\n        // Works in case when functions are created in constructor.\n        // Comparing dates is a common scenario. Another built-ins?\n        // We can even handle functions passed across iframes\n        if ((typeof x === 'function' && typeof y === 'function') ||\n            (x instanceof Date && y instanceof Date) ||\n            (x instanceof RegExp && y instanceof RegExp) ||\n            (x instanceof String && y instanceof String) ||\n            (x instanceof Number && y instanceof Number)) {\n            return x.toString() === y.toString();\n        }\n        // At last checking prototypes as good as we can\n        if (!(x instanceof Object && y instanceof Object)) {\n            return false;\n        }\n        if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) {\n            return false;\n        }\n        if (x.constructor !== y.constructor) {\n            return false;\n        }\n        // Check for infinitive linking loops\n        if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) {\n            return false;\n        }\n        // Quick checking of one object being a subset of another.\n        for (p in y) {\n            if (treatUndefinedAndMissingKeyAsSame && y.hasOwnProperty(p) && !x.hasOwnProperty(p) && y[p] === undefined) {\n                continue;\n            }\n            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                return false;\n            }\n            else if (typeof y[p] !== typeof x[p]) {\n                return false;\n            }\n        }\n        // tslint:disable:forin\n        for (p in x) {\n            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                if (!treatUndefinedAndMissingKeyAsSame || !x.hasOwnProperty(p) || y.hasOwnProperty(p) || x[p] !== undefined) {\n                    return false;\n                }\n            }\n            switch (typeof (x[p])) {\n                case 'object':\n                case 'function':\n                    leftChain.push(x);\n                    rightChain.push(y);\n                    if (!compare2Objects(x[p], y[p])) {\n                        return false;\n                    }\n                    leftChain.pop();\n                    rightChain.pop();\n                    break;\n                default:\n                    if (x[p] !== y[p]) {\n                        return false;\n                    }\n                    break;\n            }\n        }\n        return true;\n    }\n    if (arguments.length <= 1) {\n        throw new Error('Need two or more arguments to compare');\n    }\n    return compare2Objects(_1, _2);\n}\n\n/**\n * This function determines if a value is a form state.\n */\nfunction isFormState(state) {\n    return !!state && state.hasOwnProperty('id') && state.hasOwnProperty('value') && state.hasOwnProperty('errors');\n}\n/**\n * This function determines if a value is an array state.\n */\nfunction isArrayState(state) {\n    return isFormState(state) && state.hasOwnProperty('controls') && Array.isArray(state.controls);\n}\n/**\n * This function determines if a value is a group state.\n */\nfunction isGroupState(state) {\n    return isFormState(state) && state.hasOwnProperty('controls') && !Array.isArray(state.controls) && typeof state.controls !== 'function';\n}\nfunction createChildState(id, childValue) {\n    if (isBoxed(childValue)) {\n        return createFormControlState(id, childValue);\n    }\n    if (childValue !== null && Array.isArray(childValue)) {\n        return createFormArrayState(id, childValue);\n    }\n    if (childValue !== null && typeof childValue === 'object') {\n        return createFormGroupState(id, childValue);\n    }\n    return createFormControlState(id, childValue);\n}\nfunction verifyFormControlValueIsValid(value) {\n    if (value === null || ['string', 'number', 'boolean', 'undefined'].indexOf(typeof value) >= 0) {\n        return value;\n    }\n    if (!isBoxed(value)) {\n        const errorMsg = 'Form control states only support undefined, null, string, number, and boolean values as well as boxed values';\n        throw new Error(`${errorMsg}; got ${JSON.stringify(value)} of type ${typeof value}`); // `;\n    }\n    if (value.value === null || ['string', 'number', 'boolean', 'undefined'].indexOf(typeof value.value) >= 0) {\n        return value;\n    }\n    const serialized = JSON.stringify(value);\n    const deserialized = JSON.parse(serialized);\n    if (deepEquals(value, deserialized, { treatUndefinedAndMissingKeyAsSame: true })) {\n        return value;\n    }\n    throw new Error(`A form control value must be serializable (i.e. value === JSON.parse(JSON.stringify(value))), got: ${JSON.stringify(value)}`);\n}\n/**\n * This function creates a form control state with an ID and a value.\n */\nfunction createFormControlState(id, value) {\n    return {\n        id,\n        value: verifyFormControlValueIsValid(value),\n        errors: {},\n        pendingValidations: [],\n        isValidationPending: false,\n        isValid: true,\n        isInvalid: false,\n        isEnabled: true,\n        isDisabled: false,\n        isDirty: false,\n        isPristine: true,\n        isTouched: false,\n        isUntouched: true,\n        isSubmitted: false,\n        isUnsubmitted: true,\n        isFocused: false,\n        isUnfocused: true,\n        userDefinedProperties: {},\n    };\n}\nfunction getFormGroupValue(controls, originalValue) {\n    let hasChanged = Object.keys(originalValue).length !== Object.keys(controls).length;\n    const newValue = Object.keys(controls).reduce((res, key) => {\n        hasChanged = hasChanged || originalValue[key] !== controls[key].value;\n        res[key] = controls[key].value;\n        return res;\n    }, {});\n    return hasChanged ? newValue : originalValue;\n}\nfunction getFormGroupErrors(controls, originalErrors) {\n    let hasChanged = false;\n    const groupErrors = Object.keys(originalErrors)\n        .filter(key => !key.startsWith('_'))\n        .reduce((res, key) => Object.assign(res, { [key]: originalErrors[key] }), {});\n    const newErrors = Object.keys(controls).reduce((res, key) => {\n        const controlErrors = controls[key].errors;\n        if (!isEmpty(controlErrors)) {\n            hasChanged = hasChanged || originalErrors[`_${key}`] !== controlErrors;\n            Object.assign(res, { [`_${key}`]: controls[key].errors });\n        }\n        else {\n            hasChanged = hasChanged || originalErrors.hasOwnProperty(`_${key}`);\n        }\n        return res;\n    }, groupErrors);\n    hasChanged = hasChanged || Object.keys(originalErrors).length !== Object.keys(newErrors).length;\n    return hasChanged ? newErrors : originalErrors;\n}\nfunction computeGroupState(id, controls, value, errors, pendingValidations, userDefinedProperties, flags) {\n    value = getFormGroupValue(controls, value);\n    errors = getFormGroupErrors(controls, errors);\n    const isValid = isEmpty(errors);\n    const isDirty = flags.wasOrShouldBeDirty || Object.keys(controls).some(key => controls[key].isDirty);\n    const isEnabled = flags.wasOrShouldBeEnabled || Object.keys(controls).some(key => controls[key].isEnabled);\n    const isTouched = flags.wasOrShouldBeTouched || Object.keys(controls).some(key => controls[key].isTouched);\n    const isSubmitted = flags.wasOrShouldBeSubmitted || Object.keys(controls).some(key => controls[key].isSubmitted);\n    const isValidationPending = pendingValidations.length > 0 || Object.keys(controls).some(key => controls[key].isValidationPending);\n    return {\n        id,\n        value,\n        errors,\n        pendingValidations,\n        isValidationPending,\n        isValid,\n        isInvalid: !isValid,\n        isEnabled,\n        isDisabled: !isEnabled,\n        isDirty,\n        isPristine: !isDirty,\n        isTouched,\n        isUntouched: !isTouched,\n        isSubmitted,\n        isUnsubmitted: !isSubmitted,\n        userDefinedProperties,\n        controls,\n    };\n}\n/**\n * This function creates a form group state with an ID and a value.\n * From the value the shape of the group state is inferred, i.e.\n * object properties are inferred as form groups, array properties\n * are inferred as form arrays, and primitive properties are inferred\n * as form controls.\n */\nfunction createFormGroupState(id, initialValue) {\n    const controls = Object.keys(initialValue)\n        .map((key) => [key, createChildState(`${id}.${key}`, initialValue[key])])\n        .reduce((res, [controlId, state]) => Object.assign(res, { [controlId]: state }), {});\n    return computeGroupState(id, controls, initialValue, {}, [], {}, { wasOrShouldBeEnabled: true });\n}\nfunction getFormArrayValue(controls, originalValue) {\n    let hasChanged = Object.keys(originalValue).length !== Object.keys(controls).length;\n    const newValue = controls.map((state, i) => {\n        hasChanged = hasChanged || originalValue[i] !== state.value;\n        return state.value;\n    });\n    return hasChanged ? newValue : originalValue;\n}\nfunction getFormArrayErrors(controls, originalErrors) {\n    let hasChanged = false;\n    const groupErrors = Object.keys(originalErrors)\n        .filter(key => !key.startsWith('_'))\n        .reduce((res, key) => Object.assign(res, { [key]: originalErrors[key] }), {});\n    const newErrors = controls.reduce((res, state, i) => {\n        const controlErrors = state.errors;\n        if (!isEmpty(controlErrors)) {\n            hasChanged = hasChanged || originalErrors[`_${i}`] !== controlErrors;\n            Object.assign(res, { [`_${i}`]: controlErrors });\n        }\n        else {\n            hasChanged = hasChanged || originalErrors.hasOwnProperty(`_${i}`);\n        }\n        return res;\n    }, groupErrors);\n    hasChanged = hasChanged || Object.keys(originalErrors).length !== Object.keys(newErrors).length;\n    return hasChanged ? newErrors : originalErrors;\n}\nfunction computeArrayState(id, inferredControls, value, errors, pendingValidations, userDefinedProperties, flags) {\n    const controls = inferredControls;\n    value = getFormArrayValue(controls, value);\n    errors = getFormArrayErrors(controls, errors);\n    const isValid = isEmpty(errors);\n    const isDirty = flags.wasOrShouldBeDirty || controls.some(state => state.isDirty);\n    const isEnabled = flags.wasOrShouldBeEnabled || controls.some(state => state.isEnabled);\n    const isTouched = flags.wasOrShouldBeTouched || controls.some(state => state.isTouched);\n    const isSubmitted = flags.wasOrShouldBeSubmitted || controls.some(state => state.isSubmitted);\n    const isValidationPending = pendingValidations.length > 0 || controls.some(state => state.isValidationPending);\n    return {\n        id,\n        value,\n        errors,\n        pendingValidations,\n        isValidationPending,\n        isValid,\n        isInvalid: !isValid,\n        isEnabled,\n        isDisabled: !isEnabled,\n        isDirty,\n        isPristine: !isDirty,\n        isTouched,\n        isUntouched: !isTouched,\n        isSubmitted,\n        isUnsubmitted: !isSubmitted,\n        userDefinedProperties,\n        controls: inferredControls,\n    };\n}\n/**\n * This function creates a form array state with an ID and a value.\n * From the value the shape of the array state is inferred, i.e.\n * object values are inferred as form groups, array values\n * are inferred as form arrays, and primitive values are inferred\n * as form controls.\n */\nfunction createFormArrayState(id, initialValue) {\n    const controls = initialValue\n        .map((value, i) => createChildState(`${id}.${i}`, value));\n    return computeArrayState(id, controls, initialValue, {}, [], {}, { wasOrShouldBeEnabled: true });\n}\n\nfunction clearAsyncErrorReducer$2(state, action) {\n    if (action.type !== ClearAsyncErrorAction.TYPE) {\n        return state;\n    }\n    const name = `$${action.name}`;\n    let errors = state.errors;\n    if (errors.hasOwnProperty(name)) {\n        errors = Object.assign({}, state.errors);\n        delete errors[name];\n    }\n    const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\n    const isValid = isEmpty(errors);\n    if (errors === state.errors && isValid === state.isValid && pendingValidations.length === state.pendingValidations.length) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { isValid, isInvalid: !isValid, errors,\n        pendingValidations, isValidationPending: pendingValidations.length > 0 });\n}\n\nfunction disableReducer$2(state, action) {\n    if (action.type !== DisableAction.TYPE) {\n        return state;\n    }\n    if (state.isDisabled) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { isEnabled: false, isDisabled: true, isValid: true, isInvalid: false, errors: {}, pendingValidations: [], isValidationPending: false });\n}\n\nfunction enableReducer$2(state, action) {\n    if (action.type !== EnableAction.TYPE) {\n        return state;\n    }\n    if (state.isEnabled) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { isEnabled: true, isDisabled: false });\n}\n\nfunction focusReducer(state, action) {\n    if (action.type !== FocusAction.TYPE) {\n        return state;\n    }\n    if (state.isFocused) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { isFocused: true, isUnfocused: false });\n}\n\nfunction markAsDirtyReducer$2(state, action) {\n    if (action.type !== MarkAsDirtyAction.TYPE) {\n        return state;\n    }\n    if (state.isDirty) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { isDirty: true, isPristine: false });\n}\n\nfunction markAsPristineReducer$2(state, action) {\n    if (action.type !== MarkAsPristineAction.TYPE) {\n        return state;\n    }\n    if (state.isPristine) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { isDirty: false, isPristine: true });\n}\n\nfunction markAsSubmittedReducer$2(state, action) {\n    if (action.type !== MarkAsSubmittedAction.TYPE) {\n        return state;\n    }\n    if (state.isSubmitted) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { isSubmitted: true, isUnsubmitted: false });\n}\n\nfunction markAsTouchedReducer$2(state, action) {\n    if (action.type !== MarkAsTouchedAction.TYPE) {\n        return state;\n    }\n    if (state.isTouched) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { isTouched: true, isUntouched: false });\n}\n\nfunction markAsUnsubmittedReducer$2(state, action) {\n    if (action.type !== MarkAsUnsubmittedAction.TYPE) {\n        return state;\n    }\n    if (state.isUnsubmitted) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { isSubmitted: false, isUnsubmitted: true });\n}\n\nfunction markAsUntouchedReducer$2(state, action) {\n    if (action.type !== MarkAsUntouchedAction.TYPE) {\n        return state;\n    }\n    if (state.isUntouched) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { isTouched: false, isUntouched: true });\n}\n\nfunction resetReducer$2(state, action) {\n    if (action.type !== ResetAction.TYPE) {\n        return state;\n    }\n    if (state.isPristine && state.isUntouched && state.isUnsubmitted) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { isDirty: false, isPristine: true, isTouched: false, isUntouched: true, isSubmitted: false, isUnsubmitted: true });\n}\n\nfunction setAsyncErrorReducer$2(state, action) {\n    if (action.type !== SetAsyncErrorAction.TYPE) {\n        return state;\n    }\n    if (state.isDisabled) {\n        return state;\n    }\n    const name = `$${action.name}`;\n    let value = action.value;\n    if (deepEquals(state.errors[name], action.value)) {\n        value = state.errors[name];\n    }\n    const errors = Object.assign(Object.assign({}, state.errors), { [name]: value });\n    const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\n    return Object.assign(Object.assign({}, state), { isValid: false, isInvalid: true, errors,\n        pendingValidations, isValidationPending: pendingValidations.length > 0 });\n}\n\nfunction setErrorsReducer$2(state, action) {\n    if (action.type !== SetErrorsAction.TYPE) {\n        return state;\n    }\n    if (state.isDisabled) {\n        return state;\n    }\n    if (state.errors === action.errors) {\n        return state;\n    }\n    if (deepEquals(state.errors, action.errors)) {\n        return state;\n    }\n    if (!action.errors || typeof action.errors !== 'object' || Array.isArray(action.errors)) {\n        throw new Error(`Control errors must be an object; got ${action.errors}`); // `;\n    }\n    if (Object.keys(action.errors).some(key => key.startsWith('$'))) {\n        throw new Error(`Control errors must not use $ as a prefix; got ${JSON.stringify(action.errors)}`); // `;\n    }\n    const asyncErrors = Object.keys(state.errors)\n        .filter(key => key.startsWith('$'))\n        .reduce((res, key) => Object.assign(res, { [key]: state.errors[key] }), {});\n    const newErrors = isEmpty(asyncErrors) ? action.errors : Object.assign(asyncErrors, action.errors);\n    const isValid = isEmpty(newErrors);\n    return Object.assign(Object.assign({}, state), { isValid, isInvalid: !isValid, errors: newErrors });\n}\n\nfunction setUserDefinedPropertyReducer$2(state, action) {\n    if (action.type !== SetUserDefinedPropertyAction.TYPE) {\n        return state;\n    }\n    if (state.userDefinedProperties[action.name] === action.value) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { userDefinedProperties: Object.assign(Object.assign({}, state.userDefinedProperties), { [action.name]: action.value }) });\n}\n\nfunction setValueReducer$2(state, action) {\n    if (action.type !== SetValueAction.TYPE) {\n        return state;\n    }\n    if (state.value === action.value) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { value: verifyFormControlValueIsValid(action.value) });\n}\n\nfunction startAsyncValidationReducer$2(state, action) {\n    if (action.type !== StartAsyncValidationAction.TYPE) {\n        return state;\n    }\n    if (state.pendingValidations.indexOf(action.name) >= 0) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { pendingValidations: [...state.pendingValidations, action.name], isValidationPending: true });\n}\n\nfunction unfocusReducer(state, action) {\n    if (action.type !== UnfocusAction.TYPE) {\n        return state;\n    }\n    if (state.isUnfocused) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { isFocused: false, isUnfocused: true });\n}\n\nfunction formControlReducerInternal(state, action) {\n    if (isGroupState(state) || isArrayState(state)) {\n        throw new Error('The state must be a control state');\n    }\n    if (action.controlId !== state.id) {\n        return state;\n    }\n    state = setValueReducer$2(state, action);\n    state = setErrorsReducer$2(state, action);\n    state = startAsyncValidationReducer$2(state, action);\n    state = setAsyncErrorReducer$2(state, action);\n    state = clearAsyncErrorReducer$2(state, action);\n    state = enableReducer$2(state, action);\n    state = disableReducer$2(state, action);\n    state = focusReducer(state, action);\n    state = unfocusReducer(state, action);\n    state = markAsDirtyReducer$2(state, action);\n    state = markAsPristineReducer$2(state, action);\n    state = markAsTouchedReducer$2(state, action);\n    state = markAsUntouchedReducer$2(state, action);\n    state = markAsSubmittedReducer$2(state, action);\n    state = markAsUnsubmittedReducer$2(state, action);\n    state = setUserDefinedPropertyReducer$2(state, action);\n    state = resetReducer$2(state, action);\n    return state;\n}\n/**\n * This reducer function updates a form control state with actions.\n */\nfunction formControlReducer(state, action) {\n    if (!state) {\n        throw new Error('The control state must be defined!');\n    }\n    return formControlReducerInternal(state, action);\n}\n\nfunction dispatchActionPerChild$1(controls, actionCreator) {\n    let hasChanged = false;\n    const newControls = controls\n        .map(state => {\n        const newState = formStateReducer(state, actionCreator(state.id));\n        hasChanged = hasChanged || state !== newState;\n        return newState;\n    });\n    return hasChanged ? newControls : controls;\n}\nfunction callChildReducers$1(controls, action) {\n    let hasChanged = false;\n    const newControls = controls\n        .map(state => {\n        const newState = formStateReducer(state, action);\n        hasChanged = hasChanged || state !== newState;\n        return newState;\n    });\n    return hasChanged ? newControls : controls;\n}\nfunction childReducer$1(state, action) {\n    const controls = callChildReducers$1(state.controls, action);\n    if (state.controls === controls) {\n        return state;\n    }\n    return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\nfunction updateIdRecursiveForGroup(state, newId) {\n    const controls = Object.keys(state.controls)\n        .reduce((agg, key) => Object.assign(agg, {\n        [key]: updateIdRecursive(state.controls[key], `${newId}.${key}`),\n    }), {});\n    return Object.assign(Object.assign({}, state), { id: newId, controls });\n}\nfunction updateIdRecursiveForArray(state, newId) {\n    const controls = state.controls.map((c, i) => updateIdRecursive(c, `${newId}.${i}`));\n    return Object.assign(Object.assign({}, state), { id: newId, controls });\n}\nfunction updateIdRecursive(state, newId) {\n    if (state.id === newId) {\n        return state;\n    }\n    if (isGroupState(state)) {\n        return updateIdRecursiveForGroup(state, newId);\n    }\n    if (isArrayState(state)) {\n        return updateIdRecursiveForArray(state, newId);\n    }\n    return Object.assign(Object.assign({}, state), { id: newId });\n}\n\nfunction addControlReducer$1(state, action) {\n    if (action.type !== AddArrayControlAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    const index = action.index === undefined ? state.controls.length : action.index;\n    if (index > state.controls.length || index < 0) {\n        throw new Error(`Index ${index} is out of bounds for array '${state.id}' with length ${state.controls.length}!`);\n    }\n    let controls = [...state.controls];\n    controls.splice(index, 0, createChildState(`${state.id}.${index}`, action.value));\n    controls = controls.map((c, i) => updateIdRecursive(c, `${state.id}.${i}`));\n    return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: true,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction clearAsyncErrorReducer$1(state, action) {\n    if (action.type !== ClearAsyncErrorAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    const name = `$${action.name}`;\n    let errors = state.errors;\n    if (state.errors.hasOwnProperty(name)) {\n        errors = Object.assign({}, state.errors);\n        delete errors[name];\n    }\n    const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\n    if (errors === state.errors && pendingValidations.length === state.pendingValidations.length) {\n        return state;\n    }\n    return computeArrayState(state.id, state.controls, state.value, errors, pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction disableReducer$1(state, action) {\n    if (action.type !== DisableAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    if (state.isDisabled) {\n        return state;\n    }\n    return computeArrayState(state.id, dispatchActionPerChild$1(state.controls, controlId => new DisableAction(controlId)), state.value, {}, [], state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: false,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction enableReducer$1(state, action) {\n    if (action.type !== EnableAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    const controls = dispatchActionPerChild$1(state.controls, controlId => new EnableAction(controlId));\n    if (controls === state.controls && state.isEnabled) {\n        return state;\n    }\n    return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: true,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction markAsDirtyReducer$1(state, action) {\n    if (action.type !== MarkAsDirtyAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    const controls = dispatchActionPerChild$1(state.controls, controlId => new MarkAsDirtyAction(controlId));\n    if (controls === state.controls && state.isDirty) {\n        return state;\n    }\n    return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: true,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction markAsPristineReducer$1(state, action) {\n    if (action.type !== MarkAsPristineAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    if (state.isPristine) {\n        return state;\n    }\n    return computeArrayState(state.id, dispatchActionPerChild$1(state.controls, controlId => new MarkAsPristineAction(controlId)), state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: false,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction markAsSubmittedReducer$1(state, action) {\n    if (action.type !== MarkAsSubmittedAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    const controls = dispatchActionPerChild$1(state.controls, controlId => new MarkAsSubmittedAction(controlId));\n    if (controls === state.controls) {\n        return state;\n    }\n    return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: true,\n    });\n}\n\nfunction markAsTouchedReducer$1(state, action) {\n    if (action.type !== MarkAsTouchedAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    const controls = dispatchActionPerChild$1(state.controls, controlId => new MarkAsTouchedAction(controlId));\n    if (controls === state.controls) {\n        return state;\n    }\n    return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: true,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction markAsUnsubmittedReducer$1(state, action) {\n    if (action.type !== MarkAsUnsubmittedAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    if (state.isUnsubmitted) {\n        return state;\n    }\n    return computeArrayState(state.id, dispatchActionPerChild$1(state.controls, controlId => new MarkAsUnsubmittedAction(controlId)), state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: false,\n    });\n}\n\nfunction markAsUntouchedReducer$1(state, action) {\n    if (action.type !== MarkAsUntouchedAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    if (state.isUntouched) {\n        return state;\n    }\n    return computeArrayState(state.id, dispatchActionPerChild$1(state.controls, controlId => new MarkAsUntouchedAction(controlId)), state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: false,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction move(array, fromIndex, toIndex) {\n    const item = array[fromIndex];\n    const length = array.length;\n    if (fromIndex > toIndex) {\n        return [\n            ...array.slice(0, toIndex),\n            item,\n            ...array.slice(toIndex, fromIndex),\n            ...array.slice(fromIndex + 1, length),\n        ];\n    }\n    else {\n        const targetIndex = toIndex + 1;\n        return [\n            ...array.slice(0, fromIndex),\n            ...array.slice(fromIndex + 1, targetIndex),\n            item,\n            ...array.slice(targetIndex, length),\n        ];\n    }\n}\nfunction moveControlReducer(state, action) {\n    if (action.type !== MoveArrayControlAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    const fromIndex = action.fromIndex;\n    const toIndex = action.toIndex;\n    if (fromIndex === toIndex) {\n        return state;\n    }\n    if (fromIndex < 0 || toIndex < 0) {\n        throw new Error(`fromIndex ${fromIndex} or toIndex ${fromIndex} was negative`);\n    }\n    if (fromIndex >= state.controls.length || toIndex >= state.controls.length) {\n        throw new Error(`fromIndex ${fromIndex} or toIndex ${toIndex} is out of bounds with the length of the controls ${state.controls.length}`);\n    }\n    let controls = move(state.controls, fromIndex, toIndex);\n    controls = controls.map((c, i) => updateIdRecursive(c, `${state.id}.${i}`));\n    return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: true,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction removeControlReducer$1(state, action) {\n    if (action.type !== RemoveArrayControlAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    if (action.index >= state.controls.length || action.index < 0) {\n        throw new Error(`Index ${action.index} is out of bounds for array '${state.id}' with length ${state.controls.length}!`);\n    }\n    const index = action.index;\n    const controls = state.controls.filter((_, i) => i !== index).map((c, i) => updateIdRecursive(c, `${state.id}.${i}`));\n    return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: true,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction resetReducer$1(state, action) {\n    if (action.type !== ResetAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    if (state.isPristine && state.isUntouched && state.isUnsubmitted) {\n        return state;\n    }\n    return computeArrayState(state.id, dispatchActionPerChild$1(state.controls, controlId => new ResetAction(controlId)), state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: false,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: false,\n        wasOrShouldBeSubmitted: false,\n    });\n}\n\nfunction setAsyncErrorReducer$1(state, action) {\n    if (action.type !== SetAsyncErrorAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    if (state.isDisabled) {\n        return state;\n    }\n    const name = `$${action.name}`;\n    let value = action.value;\n    if (deepEquals(state.errors[name], action.value)) {\n        value = state.errors[name];\n    }\n    const errors = Object.assign(Object.assign({}, state.errors), { [name]: value });\n    const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\n    return computeArrayState(state.id, state.controls, state.value, errors, pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction setErrorsReducer$1(state, action) {\n    if (action.type !== SetErrorsAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    if (state.isDisabled) {\n        return state;\n    }\n    if (state.errors === action.errors) {\n        return state;\n    }\n    if (deepEquals(state.errors, action.errors)) {\n        return state;\n    }\n    if (!action.errors || typeof action.errors !== 'object' || Array.isArray(action.errors)) {\n        throw new Error(`Control errors must be an object; got ${action.errors}`);\n    }\n    if (Object.keys(action.errors).some(key => key.startsWith('_'))) {\n        throw new Error(`Control errors must not use underscore as a prefix; got ${JSON.stringify(action.errors)}`);\n    }\n    if (Object.keys(action.errors).some(key => key.startsWith('$'))) {\n        throw new Error(`Control errors must not use $ as a prefix; got ${JSON.stringify(action.errors)}`);\n    }\n    const childAndAsyncErrors = Object.keys(state.errors)\n        .filter(key => key.startsWith('_') || key.startsWith('$'))\n        .reduce((res, key) => Object.assign(res, { [key]: state.errors[key] }), {});\n    const newErrors = Object.assign(childAndAsyncErrors, action.errors);\n    return computeArrayState(state.id, state.controls, state.value, newErrors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction setUserDefinedPropertyReducer$1(state, action) {\n    if (action.type !== SetUserDefinedPropertyAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    if (state.userDefinedProperties[action.name] === action.value) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { userDefinedProperties: Object.assign(Object.assign({}, state.userDefinedProperties), { [action.name]: action.value }) });\n}\n\nfunction setValueReducer$1(state, action) {\n    if (action.type !== SetValueAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    if (state.value === action.value) {\n        return state;\n    }\n    if (action.value instanceof Date) {\n        throw new Error('Date values are not supported. Please used serialized strings instead.');\n    }\n    const value = action.value;\n    const controls = value\n        .map((v, i) => {\n        if (!state.controls[i]) {\n            return createChildState(`${state.id}.${i}`, v);\n        }\n        return formStateReducer(state.controls[i], new SetValueAction(state.controls[i].id, v));\n    });\n    return computeArrayState(state.id, controls, value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction startAsyncValidationReducer$1(state, action) {\n    if (action.type !== StartAsyncValidationAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    if (state.pendingValidations.indexOf(action.name) >= 0) {\n        return state;\n    }\n    const pendingValidations = [...state.pendingValidations, action.name];\n    return computeArrayState(state.id, state.controls, state.value, state.errors, pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction swapArrayValues(a, i, j) {\n    const n = [...a];\n    [n[i], n[j]] = [n[j], n[i]];\n    return n;\n}\nfunction swapControlReducer(state, action) {\n    if (action.type !== SwapArrayControlAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer$1(state, action);\n    }\n    const fromIndex = action.fromIndex;\n    const toIndex = action.toIndex;\n    if (fromIndex === toIndex) {\n        return state;\n    }\n    if (fromIndex < 0 || toIndex < 0) {\n        throw new Error(`fromIndex ${fromIndex} or toIndex ${fromIndex} was negative`);\n    }\n    if (fromIndex >= state.controls.length || toIndex >= state.controls.length) {\n        throw new Error(`fromIndex ${fromIndex} or toIndex ${toIndex} is out of bounds with the length of the controls ${state.controls.length}`);\n    }\n    let controls = swapArrayValues(state.controls, fromIndex, toIndex);\n    controls = controls.map((c, i) => (i >= fromIndex || i >= toIndex) ? updateIdRecursive(c, `${state.id}.${i}`) : c);\n    return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: true,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction formArrayReducerInternal(state, action) {\n    if (!isArrayState(state)) {\n        throw new Error('The state must be an array state');\n    }\n    if (!isNgrxFormsAction(action)) {\n        return state;\n    }\n    if (!action.controlId.startsWith(state.id)) {\n        return state;\n    }\n    switch (action.type) {\n        case FocusAction.TYPE:\n        case UnfocusAction.TYPE:\n        case AddGroupControlAction.TYPE:\n        case RemoveGroupControlAction.TYPE:\n            return childReducer$1(state, action);\n        default:\n            break;\n    }\n    state = setValueReducer$1(state, action);\n    state = setErrorsReducer$1(state, action);\n    state = startAsyncValidationReducer$1(state, action);\n    state = setAsyncErrorReducer$1(state, action);\n    state = clearAsyncErrorReducer$1(state, action);\n    state = enableReducer$1(state, action);\n    state = disableReducer$1(state, action);\n    state = markAsDirtyReducer$1(state, action);\n    state = markAsPristineReducer$1(state, action);\n    state = markAsTouchedReducer$1(state, action);\n    state = markAsUntouchedReducer$1(state, action);\n    state = markAsSubmittedReducer$1(state, action);\n    state = markAsUnsubmittedReducer$1(state, action);\n    state = setUserDefinedPropertyReducer$1(state, action);\n    state = resetReducer$1(state, action);\n    state = addControlReducer$1(state, action);\n    state = removeControlReducer$1(state, action);\n    state = swapControlReducer(state, action);\n    state = moveControlReducer(state, action);\n    return state;\n}\n/**\n * This reducer function updates a form array state with actions.\n */\nfunction formArrayReducer(state, action) {\n    if (!state) {\n        throw new Error('The array state must be defined!');\n    }\n    return formArrayReducerInternal(state, action);\n}\n\nfunction formStateReducer(state, action) {\n    if (!state) {\n        throw new Error('The form state must be defined!');\n    }\n    if (!isFormState(state)) {\n        throw new Error(`state must be a form state, got ${state}`);\n    }\n    if (isGroupState(state)) {\n        return formGroupReducer(state, action);\n    }\n    if (isArrayState(state)) {\n        return formArrayReducer(state, action);\n    }\n    return formControlReducer(state, action);\n}\n/**\n * This function creates a reducer function that first applies an action to the state\n * and afterwards applies all given update functions one after another to the resulting\n * form state. However, the update functions are only applied if the form state changed\n * as result of applying the action. If you need the update functions to be applied\n * regardless of whether the state changed (e.g. because the update function closes\n * over variables that may change independently of the form state) you can simply apply\n * the update manually (e.g. `updateFunction(formStateReducer(state, action))`).\n *\n * The following (contrived) example uses this function to create a reducer that after\n * each action validates the child control `name` to be required and sets the child\n * control `email`'s value to be `''` if the name is invalid.\n *\n```typescript\ninterface FormValue {\n  name: string;\n  email: string;\n}\n\nconst updateFormState = updateGroup<FormValue>(\n  {\n    name: validate(required),\n  },\n  {\n    email: (email, parentGroup) =>\n      parentGroup.controls.name.isInvalid\n        ? setValue('', email)\n        : email,\n  },\n);\n\nconst reducer = createFormStateReducerWithUpdate<FormValue>(updateFormState);\n```\n */\nfunction createFormStateReducerWithUpdate(updateFnOrUpdateFnArr, ...updateFnArr) {\n    updateFnArr = [...(Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr]), ...updateFnArr];\n    return (state, action) => {\n        const newState = formStateReducer(state, action);\n        return newState === state ? state : updateFnArr.reduce((s, f) => f(s), newState);\n    };\n}\nfunction reduceNestedFormState(state, key, action) {\n    const value = state[key];\n    if (!isFormState(value)) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { [key]: formStateReducer(value, action) });\n}\nfunction reduceNestedFormStates(state, action) {\n    return Object.keys(state).reduce((s, key) => reduceNestedFormState(s, key, action), state);\n}\n/**\n * This function returns an object that can be passed to ngrx's `createReducer`\n * function (available starting with ngrx version 8). By doing this all form\n * state properties on the state will be updated whenever necessary (i.e.\n * whenever an ngrx-forms action is dispatched).\n *\n * To manually update a form state (e.g. to validate it) use\n * `wrapReducerWithFormStateUpdate`.\n */\nfunction onNgrxForms() {\n    return {\n        reducer: (state, action) => isFormState(state) ? formStateReducer(state, action) : reduceNestedFormStates(state, action),\n        types: ALL_NGRX_FORMS_ACTION_TYPES,\n    };\n}\n/**\n * Define a reducer for a ngrx-forms action. This functions works the same as\n * ngrx's `on` except that you provide the ngrx-forms action class instead of\n * your action creator as a parameter.\n */\nfunction onNgrxFormsAction(actionCons, reducer) {\n    return {\n        reducer: (state, action) => reducer(reduceNestedFormStates(state, action), action),\n        types: [actionCons.TYPE],\n    };\n}\n/**\n * This function wraps a reducer and returns another reducer that first calls\n * the given reducer and then calls the given update function for the form state\n * that is specified by the form state locator function.\n *\n * The update function is passed the form state and the updated containing state\n * as parameters.\n */\nfunction wrapReducerWithFormStateUpdate(reducer, formStateLocator, updateFn) {\n    return (state, action) => {\n        const updatedState = reducer(state, action);\n        const formState = formStateLocator(updatedState);\n        // if the state itself is the form state, update it directly\n        if (formState === updatedState) {\n            return updateFn(formState, updatedState);\n        }\n        const formStateKey = Object.keys(updatedState).find(key => updatedState[key] === formState);\n        const updatedFormState = updateFn(formState, updatedState);\n        if (updatedFormState === formState) {\n            return updatedState;\n        }\n        return Object.assign(Object.assign({}, updatedState), { [formStateKey]: updatedFormState });\n    };\n}\n\nfunction dispatchActionPerChild(controls, actionCreator) {\n    let hasChanged = false;\n    const newControls = Object.keys(controls)\n        .reduce((c, key) => {\n        Object.assign(c, { [key]: formStateReducer(controls[key], actionCreator(controls[key].id)) });\n        hasChanged = hasChanged || c[key] !== controls[key];\n        return c;\n    }, {});\n    return hasChanged ? newControls : controls;\n}\nfunction callChildReducers(controls, action) {\n    let hasChanged = false;\n    const newControls = Object.keys(controls)\n        .map(key => [key, formStateReducer(controls[key], action)])\n        .reduce((res, [key, state]) => {\n        hasChanged = hasChanged || state !== controls[key];\n        return Object.assign(res, { [key]: state });\n    }, {});\n    return hasChanged ? newControls : controls;\n}\nfunction childReducer(state, action) {\n    const controls = callChildReducers(state.controls, action);\n    if (state.controls === controls) {\n        return state;\n    }\n    return computeGroupState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction addControlReducer(state, action) {\n    if (action.type !== AddGroupControlAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    if (state.controls.hasOwnProperty(action.name)) {\n        throw new Error(`Group '${state.id}' already has child control '${action.name}'!`); // `;\n    }\n    const controls = Object.assign({}, state.controls, {\n        [action.name]: createChildState(`${state.id}.${action.name}`, action.value),\n    });\n    return computeGroupState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: true,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction clearAsyncErrorReducer(state, action) {\n    if (action.type !== ClearAsyncErrorAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    const name = `$${action.name}`;\n    let errors = state.errors;\n    if (errors.hasOwnProperty(name)) {\n        errors = Object.assign({}, state.errors);\n        delete errors[name];\n    }\n    const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\n    if (errors === state.errors && pendingValidations.length === state.pendingValidations.length) {\n        return state;\n    }\n    return computeGroupState(state.id, state.controls, state.value, errors, pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction disableReducer(state, action) {\n    if (action.type !== DisableAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    if (state.isDisabled) {\n        return state;\n    }\n    return computeGroupState(state.id, dispatchActionPerChild(state.controls, controlId => new DisableAction(controlId)), state.value, {}, [], state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: false,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction enableReducer(state, action) {\n    if (action.type !== EnableAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    const controls = dispatchActionPerChild(state.controls, controlId => new EnableAction(controlId));\n    if (controls === state.controls) {\n        return state;\n    }\n    return computeGroupState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: true,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction markAsDirtyReducer(state, action) {\n    if (action.type !== MarkAsDirtyAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsDirtyAction(controlId));\n    if (controls === state.controls) {\n        return state;\n    }\n    return computeGroupState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: true,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction markAsPristineReducer(state, action) {\n    if (action.type !== MarkAsPristineAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    if (state.isPristine) {\n        return state;\n    }\n    return computeGroupState(state.id, dispatchActionPerChild(state.controls, controlId => new MarkAsPristineAction(controlId)), state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: false,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction markAsSubmittedReducer(state, action) {\n    if (action.type !== MarkAsSubmittedAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsSubmittedAction(controlId));\n    if (controls === state.controls) {\n        return state;\n    }\n    return computeGroupState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: true,\n    });\n}\n\nfunction markAsTouchedReducer(state, action) {\n    if (action.type !== MarkAsTouchedAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsTouchedAction(controlId));\n    if (controls === state.controls) {\n        return state;\n    }\n    return computeGroupState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: true,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction markAsUnsubmittedReducer(state, action) {\n    if (action.type !== MarkAsUnsubmittedAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    if (state.isUnsubmitted) {\n        return state;\n    }\n    return computeGroupState(state.id, dispatchActionPerChild(state.controls, controlId => new MarkAsUnsubmittedAction(controlId)), state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: false,\n    });\n}\n\nfunction markAsUntouchedReducer(state, action) {\n    if (action.type !== MarkAsUntouchedAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    if (state.isUntouched) {\n        return state;\n    }\n    return computeGroupState(state.id, dispatchActionPerChild(state.controls, controlId => new MarkAsUntouchedAction(controlId)), state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: false,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction removeControlReducer(state, action) {\n    if (action.type !== RemoveGroupControlAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    if (!state.controls.hasOwnProperty(action.name)) {\n        throw new Error(`Group '${state.id}' does not have child control '${action.name}'!`); // `;\n    }\n    const controls = Object.assign({}, state.controls);\n    delete controls[action.name];\n    return computeGroupState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: true,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction resetReducer(state, action) {\n    if (action.type !== ResetAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    if (state.isPristine && state.isUntouched && state.isUnsubmitted) {\n        return state;\n    }\n    return computeGroupState(state.id, dispatchActionPerChild(state.controls, controlId => new ResetAction(controlId)), state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: false,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: false,\n        wasOrShouldBeSubmitted: false,\n    });\n}\n\nfunction setAsyncErrorReducer(state, action) {\n    if (action.type !== SetAsyncErrorAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    if (state.isDisabled) {\n        return state;\n    }\n    const name = `$${action.name}`;\n    let value = action.value;\n    if (deepEquals(state.errors[name], action.value)) {\n        value = state.errors[name];\n    }\n    const errors = Object.assign(Object.assign({}, state.errors), { [name]: value });\n    const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\n    return computeGroupState(state.id, state.controls, state.value, errors, pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction setErrorsReducer(state, action) {\n    if (action.type !== SetErrorsAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    if (state.isDisabled) {\n        return state;\n    }\n    if (state.errors === action.errors) {\n        return state;\n    }\n    if (deepEquals(state.errors, action.errors)) {\n        return state;\n    }\n    if (!action.errors || typeof action.errors !== 'object' || Array.isArray(action.errors)) {\n        throw new Error(`Control errors must be an object; got ${action.errors}`); // `;\n    }\n    if (Object.keys(action.errors).some(key => key.startsWith('_'))) {\n        throw new Error(`Control errors must not use underscore as a prefix; got ${JSON.stringify(action.errors)}`); // `;\n    }\n    if (Object.keys(action.errors).some(key => key.startsWith('$'))) {\n        throw new Error(`Control errors must not use $ as a prefix; got ${JSON.stringify(action.errors)}`); // `;\n    }\n    const childAndAsyncErrors = Object.keys(state.errors)\n        .filter(key => key.startsWith('_') || key.startsWith('$'))\n        .reduce((res, key) => Object.assign(res, { [key]: state.errors[key] }), {});\n    const newErrors = Object.assign(childAndAsyncErrors, action.errors);\n    return computeGroupState(state.id, state.controls, state.value, newErrors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction setUserDefinedPropertyReducer(state, action) {\n    if (action.type !== SetUserDefinedPropertyAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    if (state.userDefinedProperties[action.name] === action.value) {\n        return state;\n    }\n    return Object.assign(Object.assign({}, state), { userDefinedProperties: Object.assign(Object.assign({}, state.userDefinedProperties), { [action.name]: action.value }) });\n}\n\nfunction setValueReducer(state, action) {\n    if (action.type !== SetValueAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    if (state.value === action.value) {\n        return state;\n    }\n    if (action.value instanceof Date) {\n        throw new Error('Date values are not supported. Please used serialized strings instead.');\n    }\n    const value = action.value;\n    const controls = Object.keys(value)\n        .reduce((c, key) => {\n        // tslint:disable-next-line:prefer-conditional-expression\n        if (!state.controls[key]) {\n            Object.assign(c, { [key]: createChildState(`${state.id}.${key}`, value[key]) });\n        }\n        else {\n            Object.assign(c, { [key]: formStateReducer(state.controls[key], new SetValueAction(state.controls[key].id, value[key])) });\n        }\n        return c;\n    }, {});\n    return computeGroupState(state.id, controls, value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction startAsyncValidationReducer(state, action) {\n    if (action.type !== StartAsyncValidationAction.TYPE) {\n        return state;\n    }\n    if (action.controlId !== state.id) {\n        return childReducer(state, action);\n    }\n    if (state.pendingValidations.indexOf(action.name) >= 0) {\n        return state;\n    }\n    const pendingValidations = [...state.pendingValidations, action.name];\n    return computeGroupState(state.id, state.controls, state.value, state.errors, pendingValidations, state.userDefinedProperties, {\n        wasOrShouldBeDirty: state.isDirty,\n        wasOrShouldBeEnabled: state.isEnabled,\n        wasOrShouldBeTouched: state.isTouched,\n        wasOrShouldBeSubmitted: state.isSubmitted,\n    });\n}\n\nfunction formGroupReducerInternal(state, action) {\n    if (!isGroupState(state)) {\n        throw new Error('The state must be a group state');\n    }\n    if (!isNgrxFormsAction(action)) {\n        return state;\n    }\n    if (!action.controlId.startsWith(state.id)) {\n        return state;\n    }\n    switch (action.type) {\n        case FocusAction.TYPE:\n        case UnfocusAction.TYPE:\n        case AddArrayControlAction.TYPE:\n        case RemoveArrayControlAction.TYPE:\n        case MoveArrayControlAction.TYPE:\n        case SwapArrayControlAction.TYPE:\n            return childReducer(state, action);\n        default:\n            break;\n    }\n    state = setValueReducer(state, action);\n    state = setErrorsReducer(state, action);\n    state = startAsyncValidationReducer(state, action);\n    state = setAsyncErrorReducer(state, action);\n    state = clearAsyncErrorReducer(state, action);\n    state = enableReducer(state, action);\n    state = disableReducer(state, action);\n    state = markAsDirtyReducer(state, action);\n    state = markAsPristineReducer(state, action);\n    state = markAsTouchedReducer(state, action);\n    state = markAsUntouchedReducer(state, action);\n    state = markAsSubmittedReducer(state, action);\n    state = markAsUnsubmittedReducer(state, action);\n    state = addControlReducer(state, action);\n    state = removeControlReducer(state, action);\n    state = setUserDefinedPropertyReducer(state, action);\n    state = resetReducer(state, action);\n    return state;\n}\n/**\n * This reducer function updates a form group state with actions.\n */\nfunction formGroupReducer(state, action) {\n    if (!state) {\n        throw new Error('The group state must be defined!');\n    }\n    return formGroupReducerInternal(state, action);\n}\n\nfunction abstractControlReducer(state, action) {\n    if (isArrayState(state)) {\n        return formArrayReducer(state, action);\n    }\n    if (isGroupState(state)) {\n        return formGroupReducer(state, action);\n    }\n    return formControlReducer(state, action);\n}\nfunction compose(...fns) {\n    return (t) => fns.reduce((res, f) => f(res), t);\n}\nfunction ensureState(state) {\n    if (!state) {\n        throw new Error('state must not be undefined!');\n    }\n    return state;\n}\n\nfunction updateArrayControlsState(filterFn, updateFn) {\n    return (state) => {\n        let hasChanged = false;\n        const newControls = state.controls.map((control, idx) => {\n            if (!filterFn(control, idx)) {\n                return control;\n            }\n            const newControl = updateFn(control, state);\n            hasChanged = hasChanged || newControl !== control;\n            return newControl;\n        });\n        return hasChanged ? newControls : state.controls;\n    };\n}\nfunction updateArraySingle(filterFn, updateFn) {\n    return (state) => {\n        const newControls = updateArrayControlsState(filterFn, updateFn)(state);\n        return newControls !== state.controls\n            ? computeArrayState(state.id, newControls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n                wasOrShouldBeDirty: state.isDirty,\n                wasOrShouldBeEnabled: state.isEnabled,\n                wasOrShouldBeTouched: state.isTouched,\n                wasOrShouldBeSubmitted: state.isSubmitted,\n            })\n            : state;\n    };\n}\nfunction updateArrayWithFilter(stateOrFilterFunction, filterFunctionOrFunctionOrFunctionArray, updateFnOrUpdateFnArr, ...rest) {\n    if (isArrayState(stateOrFilterFunction)) {\n        const filterFn = filterFunctionOrFunctionOrFunctionArray;\n        const updateFnArr = Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr];\n        return updateFnArr.concat(...rest).reduce((s, updateFn) => updateArraySingle(filterFn, updateFn)(s), stateOrFilterFunction);\n    }\n    let updateFnArr = Array.isArray(filterFunctionOrFunctionOrFunctionArray)\n        ? filterFunctionOrFunctionOrFunctionArray\n        : [filterFunctionOrFunctionOrFunctionArray];\n    updateFnArr = updateFnOrUpdateFnArr === undefined ? updateFnArr : updateFnArr.concat(updateFnOrUpdateFnArr);\n    return (s) => updateArrayWithFilter(ensureState(s), stateOrFilterFunction, updateFnArr.concat(rest));\n}\nfunction updateArray(stateOrFunctionOrFunctionArray, updateFnOrUpdateFnArr, ...rest) {\n    if (isArrayState(stateOrFunctionOrFunctionArray)) {\n        const updateFnArr = Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr];\n        return updateFnArr.concat(...rest).reduce((s, updateFn) => updateArraySingle(() => true, updateFn)(s), stateOrFunctionOrFunctionArray);\n    }\n    let updateFnArr = Array.isArray(stateOrFunctionOrFunctionArray) ? stateOrFunctionOrFunctionArray : [stateOrFunctionOrFunctionArray];\n    updateFnArr = updateFnOrUpdateFnArr === undefined ? updateFnArr : updateFnArr.concat(updateFnOrUpdateFnArr);\n    return (s) => updateArray(ensureState(s), updateFnArr.concat(rest));\n}\n\nfunction updateGroupControlsState(updateFns) {\n    return (state) => {\n        let hasChanged = false;\n        const newControls = Object.keys(state.controls).reduce((res, key) => {\n            const control = state.controls[key];\n            Object.assign(res, { [key]: control });\n            if (updateFns.hasOwnProperty(key)) {\n                const newControl = updateFns[key](control, state);\n                hasChanged = hasChanged || newControl !== control;\n                Object.assign(res, { [key]: newControl });\n            }\n            return res;\n        }, {});\n        return hasChanged ? newControls : state.controls;\n    };\n}\nfunction updateGroupSingle(updateFns) {\n    return (state) => {\n        const newControls = updateGroupControlsState(updateFns)(state);\n        return newControls !== state.controls\n            ? computeGroupState(state.id, newControls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {\n                wasOrShouldBeDirty: state.isDirty,\n                wasOrShouldBeEnabled: state.isEnabled,\n                wasOrShouldBeTouched: state.isTouched,\n                wasOrShouldBeSubmitted: state.isSubmitted,\n            })\n            : state;\n    };\n}\nfunction updateGroup(stateOrUpdateFnOrUpdateFnArray, updateFnOrUpdateFnArr, ...rest) {\n    if (isGroupState(stateOrUpdateFnOrUpdateFnArray)) {\n        const updateFnArr = Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr];\n        return updateFnArr.concat(...rest).reduce((s, updateFn) => updateGroupSingle(updateFn)(s), stateOrUpdateFnOrUpdateFnArray);\n    }\n    let updateFnArr = Array.isArray(stateOrUpdateFnOrUpdateFnArray) ? stateOrUpdateFnOrUpdateFnArray : [stateOrUpdateFnOrUpdateFnArray];\n    updateFnArr = updateFnOrUpdateFnArr === undefined ? updateFnArr : updateFnArr.concat(updateFnOrUpdateFnArr);\n    return (s) => updateGroup(ensureState(s), updateFnArr.concat(rest));\n}\n\nfunction updateRecursiveSingle(parent, updateFn) {\n    return (state) => {\n        if (isGroupState(state)) {\n            const updateFunctions = Object.keys(state.controls).reduce((agg, key) => Object.assign(agg, {\n                [key]: (s, p) => updateRecursiveSingle(p, updateFn)(s),\n            }), {});\n            state = updateGroup(updateFunctions)(state);\n            return updateFn(state, parent);\n        }\n        if (isArrayState(state)) {\n            state = updateArray((s, p) => updateRecursiveSingle(p, updateFn)(s))(state);\n            return updateFn(state, parent);\n        }\n        return updateFn(state, parent);\n    };\n}\nfunction updateRecursive(stateOrFunctionOrFunctionArray, updateFnOrUpdateFnArr, ...rest) {\n    if (isFormState(stateOrFunctionOrFunctionArray)) {\n        const updateFnArr = Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr];\n        return updateFnArr.concat(...rest)\n            .reduce((s, updateFn) => updateRecursiveSingle(stateOrFunctionOrFunctionArray, updateFn)(s), stateOrFunctionOrFunctionArray);\n    }\n    let updateFnArr = Array.isArray(stateOrFunctionOrFunctionArray) ? stateOrFunctionOrFunctionArray : [stateOrFunctionOrFunctionArray];\n    updateFnArr = updateFnOrUpdateFnArr === undefined ? updateFnArr : updateFnArr.concat(updateFnOrUpdateFnArr);\n    return (s) => updateRecursive(ensureState(s), updateFnArr.concat(rest));\n}\n\nfunction setValue(valueOrState, value) {\n    if (isFormState(valueOrState)) {\n        return abstractControlReducer(valueOrState, new SetValueAction(valueOrState.id, value));\n    }\n    return (s) => setValue(ensureState(s), valueOrState);\n}\n\nfunction setErrors(errorsOrErrorsArrayOrState, errorsOrErrorsArray, ...rest) {\n    if (isFormState(errorsOrErrorsArrayOrState)) {\n        const errorsArray = Array.isArray(errorsOrErrorsArray) ? errorsOrErrorsArray : [errorsOrErrorsArray];\n        const errors = errorsArray.concat(...rest).reduce((agg, err) => Object.assign(agg, err), {});\n        return formStateReducer(errorsOrErrorsArrayOrState, new SetErrorsAction(errorsOrErrorsArrayOrState.id, errors));\n    }\n    let errorsArray = Array.isArray(errorsOrErrorsArrayOrState) ? errorsOrErrorsArrayOrState : [errorsOrErrorsArrayOrState];\n    errorsArray = errorsOrErrorsArray === undefined ? errorsArray : errorsArray.concat(errorsOrErrorsArray);\n    return (s) => setErrors(ensureState(s), errorsArray.concat(rest));\n}\n\nfunction validate(stateOrFunctionOrFunctionArray, functionOrFunctionArr, ...rest) {\n    if (isFormState(stateOrFunctionOrFunctionArray)) {\n        const functionArr = Array.isArray(functionOrFunctionArr) ? functionOrFunctionArr : [functionOrFunctionArr];\n        const errors = functionArr.concat(...rest)\n            .reduce((agg, validationFn) => Object.assign(agg, validationFn(stateOrFunctionOrFunctionArray.value)), {});\n        return formStateReducer(stateOrFunctionOrFunctionArray, new SetErrorsAction(stateOrFunctionOrFunctionArray.id, errors));\n    }\n    let updateFnArr = Array.isArray(stateOrFunctionOrFunctionArray) ? stateOrFunctionOrFunctionArray : [stateOrFunctionOrFunctionArray];\n    updateFnArr = functionOrFunctionArr === undefined ? updateFnArr : updateFnArr.concat(functionOrFunctionArr);\n    return (s) => validate(ensureState(s), updateFnArr.concat(rest));\n}\n\nfunction enable(state) {\n    return abstractControlReducer(state, new EnableAction(state.id));\n}\n\nfunction disable(state) {\n    return abstractControlReducer(state, new DisableAction(state.id));\n}\n\nfunction markAsDirty(state) {\n    return abstractControlReducer(state, new MarkAsDirtyAction(state.id));\n}\n\nfunction markAsPristine(state) {\n    return abstractControlReducer(state, new MarkAsPristineAction(state.id));\n}\n\nfunction markAsTouched(state) {\n    return abstractControlReducer(state, new MarkAsTouchedAction(state.id));\n}\n\nfunction markAsUntouched(state) {\n    return abstractControlReducer(state, new MarkAsUntouchedAction(state.id));\n}\n\nfunction markAsSubmitted(state) {\n    return abstractControlReducer(state, new MarkAsSubmittedAction(state.id));\n}\n\nfunction markAsUnsubmitted(state) {\n    return abstractControlReducer(state, new MarkAsUnsubmittedAction(state.id));\n}\n\n/**\n * This update function takes a form control state and marks it as focused (which\n * will also `.focus()` the form element).\n */\nfunction focus(state) {\n    return formControlReducer(state, new FocusAction(state.id));\n}\n\n/**\n * This update function takes a form control state and marks it as not focused (which\n * will also `.blur()` the form element).\n */\nfunction unfocus(state) {\n    return formControlReducer(state, new UnfocusAction(state.id));\n}\n\nfunction addArrayControl(valueOrState, indexOrValue, index) {\n    if (isArrayState(valueOrState)) {\n        return formArrayReducer(valueOrState, new AddArrayControlAction(valueOrState.id, indexOrValue, index));\n    }\n    return (s) => addArrayControl(ensureState(s), valueOrState, indexOrValue);\n}\n\nfunction addGroupControl(nameOrState, valueOrName, value) {\n    if (isGroupState(nameOrState)) {\n        return formGroupReducer(nameOrState, new AddGroupControlAction(nameOrState.id, valueOrName, value));\n    }\n    return (s) => addGroupControl(ensureState(s), nameOrState, valueOrName);\n}\n\nfunction moveArrayControl(indexOrState, fromIndex, toIndex) {\n    if (isArrayState(indexOrState)) {\n        return formArrayReducer(indexOrState, new MoveArrayControlAction(indexOrState.id, fromIndex, toIndex));\n    }\n    return (s) => moveArrayControl(ensureState(s), indexOrState, fromIndex);\n}\n\nfunction swapArrayControl(indexOrState, fromIndex, toIndex) {\n    if (isArrayState(indexOrState)) {\n        return formArrayReducer(indexOrState, new SwapArrayControlAction(indexOrState.id, fromIndex, toIndex));\n    }\n    return (s) => swapArrayControl(ensureState(s), indexOrState, fromIndex);\n}\n\nfunction removeArrayControl(indexOrState, index) {\n    if (isArrayState(indexOrState)) {\n        return formArrayReducer(indexOrState, new RemoveArrayControlAction(indexOrState.id, index));\n    }\n    return (s) => removeArrayControl(ensureState(s), indexOrState);\n}\n\nfunction removeGroupControl(nameOrState, name) {\n    if (isGroupState(nameOrState)) {\n        return formGroupReducer(nameOrState, new RemoveGroupControlAction(nameOrState.id, name));\n    }\n    return (s) => removeGroupControl(ensureState(s), nameOrState);\n}\n\nfunction setUserDefinedProperty(nameOrState, valueOrName, value) {\n    if (isFormState(nameOrState)) {\n        return formStateReducer(nameOrState, new SetUserDefinedPropertyAction(nameOrState.id, valueOrName, value));\n    }\n    return (s) => setUserDefinedProperty(ensureState(s), nameOrState, valueOrName);\n}\n\nfunction reset(state) {\n    return abstractControlReducer(state, new ResetAction(state.id));\n}\n\nfunction startAsyncValidation(nameOrState, name) {\n    if (isFormState(nameOrState)) {\n        return abstractControlReducer(nameOrState, new StartAsyncValidationAction(nameOrState.id, name));\n    }\n    return (s) => startAsyncValidation(ensureState(s), nameOrState);\n}\n\nfunction setAsyncError(nameOrState, nameOrValue, value) {\n    if (isFormState(nameOrState)) {\n        return abstractControlReducer(nameOrState, new SetAsyncErrorAction(nameOrState.id, nameOrValue, value));\n    }\n    return (s) => setAsyncError(ensureState(s), nameOrState, nameOrValue);\n}\n\nfunction clearAsyncError(nameOrState, name) {\n    if (isFormState(nameOrState)) {\n        return abstractControlReducer(nameOrState, new ClearAsyncErrorAction(nameOrState.id, name));\n    }\n    return (s) => clearAsyncError(ensureState(s), nameOrState);\n}\n\n/**\n * Used to provide a {@link FormViewAdapter} for form elements.\n */\nconst NGRX_FORM_VIEW_ADAPTER = new InjectionToken('NgrxFormViewAdapter');\n\n// tslint:disable:directive-class-suffix\nclass NgrxCheckboxViewAdapter {\n    constructor(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.nativeIdWasSet = false;\n        this.onChange = () => void 0;\n        this.onTouched = () => void 0;\n    }\n    set ngrxFormControlState(value) {\n        if (!value) {\n            throw new Error('The control state must not be undefined!');\n        }\n        this.state = value;\n        const nativeId = this.elementRef.nativeElement.id;\n        const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\n        if (shouldSetNativeId) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\n        }\n    }\n    ngAfterViewInit() {\n        const nativeId = this.elementRef.nativeElement.id;\n        const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\n        if (shouldSetNativeId) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\n            this.nativeIdWasSet = true;\n        }\n    }\n    setViewValue(value) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'checked', value);\n    }\n    setOnChangeCallback(fn) {\n        this.onChange = fn;\n    }\n    setOnTouchedCallback(fn) {\n        this.onTouched = fn;\n    }\n    setIsDisabled(isDisabled) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    handleInput({ target }) {\n        this.onChange(target.checked);\n    }\n}\nNgrxCheckboxViewAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxCheckboxViewAdapter, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgrxCheckboxViewAdapter.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: NgrxCheckboxViewAdapter, selector: \"input[type=checkbox][ngrxFormControlState]\", inputs: { ngrxFormControlState: \"ngrxFormControlState\" }, host: { listeners: { \"blur\": \"onTouched()\", \"change\": \"handleInput($event)\" } }, providers: [{\n            provide: NGRX_FORM_VIEW_ADAPTER,\n            useExisting: forwardRef(() => NgrxCheckboxViewAdapter),\n            multi: true,\n        }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxCheckboxViewAdapter, decorators: [{\n            type: Directive,\n            args: [{\n                    // tslint:disable-next-line:directive-selector\n                    selector: 'input[type=checkbox][ngrxFormControlState]',\n                    providers: [{\n                            provide: NGRX_FORM_VIEW_ADAPTER,\n                            useExisting: forwardRef(() => NgrxCheckboxViewAdapter),\n                            multi: true,\n                        }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { onTouched: [{\n                type: HostListener,\n                args: ['blur']\n            }], ngrxFormControlState: [{\n                type: Input\n            }], handleInput: [{\n                type: HostListener,\n                args: ['change', ['$event']]\n            }] } });\n\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction isAndroid(navigator) {\n    return /android (\\d+)/.test(navigator.userAgent.toLowerCase());\n}\n// tslint:disable:directive-class-suffix\n// tslint:disable:directive-selector\n// TODO: since this directive has a side-effect (setting the element's id attribute)\n// it should not blacklist other types of inputs but instead it should somehow figure\n// out whether it is the \"active\" view adapter and only perform its side effects if it\n// is active\nclass NgrxDefaultViewAdapter {\n    constructor(renderer, elementRef, platformId = null, \n    // we use a special injection string that should never exist at runtime to allow mocking this dependency for testing\n    navigator = null) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.platformId = platformId;\n        this.nativeIdWasSet = false;\n        this.onChange = () => void 0;\n        this.onTouched = () => void 0;\n        /** Whether the user is creating a composition string (IME events). */\n        this.isComposing = false;\n        this.isCompositionSupported = isPlatformBrowser(this.platformId || '') && !isAndroid(navigator || window.navigator);\n    }\n    set ngrxFormControlState(value) {\n        if (!value) {\n            throw new Error('The control state must not be undefined!');\n        }\n        this.state = value;\n        const nativeId = this.elementRef.nativeElement.id;\n        const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\n        if (shouldSetNativeId) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\n        }\n    }\n    ngAfterViewInit() {\n        const nativeId = this.elementRef.nativeElement.id;\n        const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\n        if (shouldSetNativeId) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\n            this.nativeIdWasSet = true;\n        }\n    }\n    setViewValue(value) {\n        const normalizedValue = value == null ? '' : value;\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\n    }\n    setOnChangeCallback(fn) {\n        this.onChange = fn;\n    }\n    setOnTouchedCallback(fn) {\n        this.onTouched = fn;\n    }\n    setIsDisabled(isDisabled) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    handleInput({ target }) {\n        if (this.isCompositionSupported && this.isComposing) {\n            return;\n        }\n        this.onChange(target.value);\n    }\n    compositionStart() {\n        this.isComposing = true;\n    }\n    compositionEnd({ target }) {\n        this.isComposing = false;\n        if (this.isCompositionSupported) {\n            this.onChange(target.value);\n        }\n    }\n}\nNgrxDefaultViewAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxDefaultViewAdapter, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: PLATFORM_ID, optional: true }, { token: 'ngrx-forms/never', optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgrxDefaultViewAdapter.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: NgrxDefaultViewAdapter, selector: \"input:not([type=checkbox]):not([type=number]):not([type=radio]):not([type=range])[ngrxFormControlState],textarea[ngrxFormControlState]\", inputs: { ngrxFormControlState: \"ngrxFormControlState\" }, host: { listeners: { \"blur\": \"onTouched()\", \"input\": \"handleInput($event)\", \"compositionstart\": \"compositionStart()\", \"compositionend\": \"compositionEnd($event)\" } }, providers: [{\n            provide: NGRX_FORM_VIEW_ADAPTER,\n            useExisting: forwardRef(() => NgrxDefaultViewAdapter),\n            multi: true,\n        }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxDefaultViewAdapter, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input:not([type=checkbox]):not([type=number]):not([type=radio]):not([type=range])[ngrxFormControlState],textarea[ngrxFormControlState]',\n                    providers: [{\n                            provide: NGRX_FORM_VIEW_ADAPTER,\n                            useExisting: forwardRef(() => NgrxDefaultViewAdapter),\n                            multi: true,\n                        }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: ['ngrx-forms/never']\n                }] }]; }, propDecorators: { onTouched: [{\n                type: HostListener,\n                args: ['blur']\n            }], ngrxFormControlState: [{\n                type: Input\n            }], handleInput: [{\n                type: HostListener,\n                args: ['input', ['$event']]\n            }], compositionStart: [{\n                type: HostListener,\n                args: ['compositionstart']\n            }], compositionEnd: [{\n                type: HostListener,\n                args: ['compositionend', ['$event']]\n            }] } });\n\n// tslint:disable:directive-class-suffix\nclass NgrxNumberViewAdapter {\n    constructor(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.nativeIdWasSet = false;\n        this.onChange = () => void 0;\n        this.onTouched = () => void 0;\n    }\n    set ngrxFormControlState(value) {\n        if (!value) {\n            throw new Error('The control state must not be undefined!');\n        }\n        this.state = value;\n        const nativeId = this.elementRef.nativeElement.id;\n        const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\n        if (shouldSetNativeId) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\n        }\n    }\n    ngAfterViewInit() {\n        const nativeId = this.elementRef.nativeElement.id;\n        const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\n        if (shouldSetNativeId) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\n            this.nativeIdWasSet = true;\n        }\n    }\n    setViewValue(value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        const normalizedValue = value === null ? '' : value;\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\n    }\n    setOnChangeCallback(fn) {\n        this.onChange = fn;\n    }\n    setOnTouchedCallback(fn) {\n        this.onTouched = fn;\n    }\n    setIsDisabled(isDisabled) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    handleInput({ target }) {\n        const value = target.value;\n        this.onChange(value === '' ? null : parseFloat(value));\n    }\n}\nNgrxNumberViewAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxNumberViewAdapter, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgrxNumberViewAdapter.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: NgrxNumberViewAdapter, selector: \"input[type=number][ngrxFormControlState]\", inputs: { ngrxFormControlState: \"ngrxFormControlState\" }, host: { listeners: { \"blur\": \"onTouched()\", \"change\": \"handleInput($event)\", \"input\": \"handleInput($event)\" } }, providers: [{\n            provide: NGRX_FORM_VIEW_ADAPTER,\n            useExisting: forwardRef(() => NgrxNumberViewAdapter),\n            multi: true,\n        }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxNumberViewAdapter, decorators: [{\n            type: Directive,\n            args: [{\n                    // tslint:disable-next-line:directive-selector\n                    selector: 'input[type=number][ngrxFormControlState]',\n                    providers: [{\n                            provide: NGRX_FORM_VIEW_ADAPTER,\n                            useExisting: forwardRef(() => NgrxNumberViewAdapter),\n                            multi: true,\n                        }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { onTouched: [{\n                type: HostListener,\n                args: ['blur']\n            }], ngrxFormControlState: [{\n                type: Input\n            }], handleInput: [{\n                type: HostListener,\n                args: ['change', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['input', ['$event']]\n            }] } });\n\n// tslint:disable:directive-class-suffix\nclass NgrxSelectViewAdapter {\n    constructor(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.optionMap = {};\n        this.idCounter = 0;\n        this.selectedId = null;\n        this.value = undefined;\n        this.nativeIdWasSet = false;\n        this.onChangeFn = () => void 0;\n        this.onTouched = () => void 0;\n    }\n    set ngrxFormControlState(value) {\n        if (!value) {\n            throw new Error('The control state must not be undefined!');\n        }\n        this.state = value;\n        const nativeId = this.elementRef.nativeElement.id;\n        const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\n        if (shouldSetNativeId) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\n        }\n    }\n    ngAfterViewInit() {\n        const nativeId = this.elementRef.nativeElement.id;\n        const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\n        if (shouldSetNativeId) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\n            this.nativeIdWasSet = true;\n        }\n    }\n    setViewValue(value) {\n        this.value = value;\n        this.selectedId = this.getOptionId(value);\n        if (this.selectedId === null) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.selectedId);\n    }\n    onChange({ target }) {\n        this.selectedId = target.value;\n        const value = this.optionMap[this.selectedId];\n        this.value = value;\n        this.onChangeFn(value);\n    }\n    setOnChangeCallback(fn) {\n        this.onChangeFn = fn;\n    }\n    setOnTouchedCallback(fn) {\n        this.onTouched = fn;\n    }\n    setIsDisabled(isDisabled) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    createOptionId() {\n        const id = this.idCounter.toString();\n        this.idCounter += 1;\n        return id;\n    }\n    updateOptionValue(id, value) {\n        this.optionMap[id] = value;\n        if (this.selectedId === id) {\n            this.onChangeFn(value);\n        }\n        else if (value === this.value) {\n            this.setViewValue(value);\n        }\n    }\n    deregisterOption(id) {\n        delete this.optionMap[id];\n    }\n    getOptionId(value) {\n        for (const id of Array.from(Object.keys(this.optionMap))) {\n            if (this.optionMap[id] === value) {\n                return id;\n            }\n        }\n        return null;\n    }\n}\nNgrxSelectViewAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxSelectViewAdapter, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgrxSelectViewAdapter.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: NgrxSelectViewAdapter, selector: \"select:not([multiple])[ngrxFormControlState]\", inputs: { ngrxFormControlState: \"ngrxFormControlState\" }, host: { listeners: { \"blur\": \"onTouched()\", \"change\": \"onChange($event)\" } }, providers: [{\n            provide: NGRX_FORM_VIEW_ADAPTER,\n            useExisting: forwardRef(() => NgrxSelectViewAdapter),\n            multi: true,\n        }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxSelectViewAdapter, decorators: [{\n            type: Directive,\n            args: [{\n                    // tslint:disable-next-line:directive-selector\n                    selector: 'select:not([multiple])[ngrxFormControlState]',\n                    providers: [{\n                            provide: NGRX_FORM_VIEW_ADAPTER,\n                            useExisting: forwardRef(() => NgrxSelectViewAdapter),\n                            multi: true,\n                        }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { onTouched: [{\n                type: HostListener,\n                args: ['blur']\n            }], ngrxFormControlState: [{\n                type: Input\n            }], onChange: [{\n                type: HostListener,\n                args: ['change', ['$event']]\n            }] } });\nconst NULL_VIEW_ADAPTER$1 = {\n    createOptionId: () => '',\n    deregisterOption: () => void 0,\n    updateOptionValue: () => void 0,\n};\nconst NULL_RENDERER$2 = {\n    setProperty: () => void 0,\n};\nclass NgrxSelectOption {\n    constructor(element, renderer, viewAdapter) {\n        this.element = element;\n        this.renderer = renderer;\n        this.viewAdapter = viewAdapter;\n        this.isInitialized = false;\n        this.renderer = viewAdapter ? renderer : NULL_RENDERER$2;\n        this.viewAdapter = viewAdapter || NULL_VIEW_ADAPTER$1;\n        this.id = this.viewAdapter.createOptionId();\n    }\n    set value(value) {\n        // this cannot be done inside ngOnInit since the value property\n        // must be already set when the option value is updated in the view\n        // adapter and the initial binding of 'value' happens before\n        // ngOnInit runs\n        if (!this.isInitialized) {\n            this.isInitialized = true;\n            this.renderer.setProperty(this.element.nativeElement, 'value', this.id);\n        }\n        this.viewAdapter.updateOptionValue(this.id, value);\n    }\n    ngOnDestroy() {\n        this.viewAdapter.deregisterOption(this.id);\n    }\n}\nNgrxSelectOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxSelectOption, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: NgrxSelectViewAdapter, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgrxSelectOption.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: NgrxSelectOption, selector: \"option\", inputs: { value: \"value\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxSelectOption, decorators: [{\n            type: Directive,\n            args: [{\n                    // tslint:disable-next-line:directive-selector\n                    selector: 'option',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: NgrxSelectViewAdapter, decorators: [{\n                    type: Host\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { value: [{\n                type: Input,\n                args: ['value']\n            }] } });\n\n// tslint:disable:directive-class-suffix\nclass NgrxSelectMultipleViewAdapter {\n    constructor(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.options = {};\n        this.optionValues = {};\n        this.idCounter = 0;\n        this.selectedIds = [];\n        this.nativeIdWasSet = false;\n        this.onChangeFn = () => void 0;\n        this.onTouched = () => void 0;\n    }\n    set ngrxFormControlState(value) {\n        if (!value) {\n            throw new Error('The control state must not be undefined!');\n        }\n        this.state = value;\n        const nativeId = this.elementRef.nativeElement.id;\n        const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\n        if (shouldSetNativeId) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\n        }\n    }\n    ngAfterViewInit() {\n        const nativeId = this.elementRef.nativeElement.id;\n        const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\n        if (shouldSetNativeId) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\n            this.nativeIdWasSet = true;\n        }\n    }\n    setViewValue(value) {\n        if (value === null) {\n            value = [];\n        }\n        if (!Array.isArray(value)) {\n            throw new Error(`the value provided to a NgrxSelectMultipleViewAdapter must be null or an array; got ${value} of type ${typeof value}`); // `\n        }\n        this.selectedIds = value.map(v => this.getOptionId(v)).filter(id => id !== null).map(id => id);\n        Object.keys(this.options).forEach(id => this.options[id].isSelected = this.selectedIds.indexOf(id) >= 0);\n    }\n    onChange() {\n        this.selectedIds = Object.keys(this.options).filter(id => this.options[id].isSelected);\n        const value = this.selectedIds.map(id => this.optionValues[id]);\n        this.onChangeFn(value);\n    }\n    setOnChangeCallback(fn) {\n        this.onChangeFn = fn;\n    }\n    setOnTouchedCallback(fn) {\n        this.onTouched = fn;\n    }\n    setIsDisabled(isDisabled) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    registerOption(option) {\n        const id = this.idCounter.toString();\n        this.options[id] = option;\n        this.idCounter += 1;\n        return id;\n    }\n    updateOptionValue(id, value) {\n        this.optionValues[id] = value;\n        if (this.selectedIds.indexOf(id) >= 0) {\n            this.onChange();\n        }\n    }\n    deregisterOption(id) {\n        delete this.options[id];\n        delete this.optionValues[id];\n    }\n    getOptionId(value) {\n        for (const id of Array.from(Object.keys(this.optionValues))) {\n            if (this.optionValues[id] === value) {\n                return id;\n            }\n        }\n        return null;\n    }\n}\nNgrxSelectMultipleViewAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxSelectMultipleViewAdapter, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgrxSelectMultipleViewAdapter.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: NgrxSelectMultipleViewAdapter, selector: \"select[multiple][ngrxFormControlState]\", inputs: { ngrxFormControlState: \"ngrxFormControlState\" }, host: { listeners: { \"blur\": \"onTouched()\", \"change\": \"onChange()\" } }, providers: [{\n            provide: NGRX_FORM_VIEW_ADAPTER,\n            useExisting: forwardRef(() => NgrxSelectMultipleViewAdapter),\n            multi: true,\n        }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxSelectMultipleViewAdapter, decorators: [{\n            type: Directive,\n            args: [{\n                    // tslint:disable-next-line:directive-selector\n                    selector: 'select[multiple][ngrxFormControlState]',\n                    providers: [{\n                            provide: NGRX_FORM_VIEW_ADAPTER,\n                            useExisting: forwardRef(() => NgrxSelectMultipleViewAdapter),\n                            multi: true,\n                        }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { onTouched: [{\n                type: HostListener,\n                args: ['blur']\n            }], ngrxFormControlState: [{\n                type: Input\n            }], onChange: [{\n                type: HostListener,\n                args: ['change']\n            }] } });\nconst NULL_VIEW_ADAPTER = {\n    registerOption: () => '',\n    deregisterOption: () => void 0,\n    updateOptionValue: () => void 0,\n};\nconst NULL_RENDERER$1 = {\n    setProperty: () => void 0,\n};\nclass NgrxSelectMultipleOption {\n    constructor(element, renderer, viewAdapter) {\n        this.element = element;\n        this.renderer = renderer;\n        this.viewAdapter = viewAdapter;\n        this.renderer = viewAdapter ? renderer : NULL_RENDERER$1;\n        this.viewAdapter = viewAdapter || NULL_VIEW_ADAPTER;\n        this.id = this.viewAdapter.registerOption(this);\n    }\n    set value(value) {\n        this.viewAdapter.updateOptionValue(this.id, value);\n    }\n    set isSelected(selected) {\n        this.renderer.setProperty(this.element.nativeElement, 'selected', selected);\n    }\n    get isSelected() {\n        return this.element.nativeElement.selected;\n    }\n    ngOnInit() {\n        this.renderer.setProperty(this.element.nativeElement, 'value', this.id);\n    }\n    ngOnDestroy() {\n        this.viewAdapter.deregisterOption(this.id);\n    }\n}\nNgrxSelectMultipleOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxSelectMultipleOption, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: NgrxSelectMultipleViewAdapter, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgrxSelectMultipleOption.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: NgrxSelectMultipleOption, selector: \"option\", inputs: { value: \"value\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxSelectMultipleOption, decorators: [{\n            type: Directive,\n            args: [{\n                    // tslint:disable-next-line:directive-selector\n                    selector: 'option',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: NgrxSelectMultipleViewAdapter, decorators: [{\n                    type: Host\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { value: [{\n                type: Input,\n                args: ['value']\n            }] } });\n\n// tslint:disable:directive-class-suffix\nconst NULL_RENDERER = {\n    setProperty: () => void 0,\n};\n/**\n * This directive is necessary to restore the default behaviour of Angular\n * when an `option` is used without an **ngrx-forms** form state. Since it\n * is not possible to select an element with a selector that considers its\n * parent the `option` directives for `select` and `select[multiple]` will\n * always be applied and therefore overriding the `[value]` binding which\n * disabled Angular's normal behaviour. This directive restores this\n * behaviour if no `select` or `select[multiple]` view adapter is found.\n * This is not a perfect solution since it may interfere with other\n * directives that try to set the `[value]` but that is very unlikely.\n */\nclass NgrxFallbackSelectOption {\n    constructor(element, renderer, viewAdapter, multipleViewAdapter) {\n        this.element = element;\n        this.renderer = renderer;\n        this.renderer = viewAdapter || multipleViewAdapter ? NULL_RENDERER : renderer;\n    }\n    set value(value) {\n        this.renderer.setProperty(this.element.nativeElement, 'value', value);\n    }\n}\nNgrxFallbackSelectOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxFallbackSelectOption, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: NgrxSelectViewAdapter, host: true, optional: true }, { token: NgrxSelectMultipleViewAdapter, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgrxFallbackSelectOption.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: NgrxFallbackSelectOption, selector: \"option\", inputs: { value: \"value\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxFallbackSelectOption, decorators: [{\n            type: Directive,\n            args: [{\n                    // tslint:disable-next-line:directive-selector\n                    selector: 'option',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: NgrxSelectViewAdapter, decorators: [{\n                    type: Host\n                }, {\n                    type: Optional\n                }] }, { type: NgrxSelectMultipleViewAdapter, decorators: [{\n                    type: Host\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { value: [{\n                type: Input,\n                args: ['value']\n            }] } });\n\n// tslint:disable:directive-class-suffix\nclass NgrxRadioViewAdapter {\n    constructor(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.nativeNameWasSet = false;\n        this.onChange = () => void 0;\n        this.onTouched = () => void 0;\n    }\n    set value(val) {\n        if (val !== this.latestValue) {\n            this.latestValue = val;\n            if (this.isChecked) {\n                this.onChange();\n            }\n        }\n    }\n    set ngrxFormControlState(value) {\n        if (!value) {\n            throw new Error('The control state must not be undefined!');\n        }\n        this.state = value;\n        const nativeName = this.elementRef.nativeElement.name;\n        const shouldSetNativeName = value.id !== nativeName && this.nativeNameWasSet;\n        if (shouldSetNativeName) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'name', value.id);\n        }\n    }\n    ngOnInit() {\n        this.isChecked = this.elementRef.nativeElement.checked;\n    }\n    ngAfterViewInit() {\n        const nativeName = this.elementRef.nativeElement.name;\n        const shouldSetNativeName = this.state.id !== nativeName && !nativeName;\n        if (shouldSetNativeName) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'name', this.state.id);\n            this.nativeNameWasSet = true;\n        }\n    }\n    setViewValue(value) {\n        this.isChecked = value === this.latestValue;\n        this.renderer.setProperty(this.elementRef.nativeElement, 'checked', this.isChecked);\n    }\n    setOnChangeCallback(fn) {\n        this.onChange = () => fn(this.latestValue);\n    }\n    setOnTouchedCallback(fn) {\n        this.onTouched = fn;\n    }\n    setIsDisabled(isDisabled) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nNgrxRadioViewAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxRadioViewAdapter, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgrxRadioViewAdapter.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: NgrxRadioViewAdapter, selector: \"input[type=radio][ngrxFormControlState]\", inputs: { value: \"value\", ngrxFormControlState: \"ngrxFormControlState\" }, host: { listeners: { \"change\": \"onChange()\", \"blur\": \"onTouched()\" } }, providers: [{\n            provide: NGRX_FORM_VIEW_ADAPTER,\n            useExisting: forwardRef(() => NgrxRadioViewAdapter),\n            multi: true,\n        }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxRadioViewAdapter, decorators: [{\n            type: Directive,\n            args: [{\n                    // tslint:disable-next-line:directive-selector\n                    selector: 'input[type=radio][ngrxFormControlState]',\n                    providers: [{\n                            provide: NGRX_FORM_VIEW_ADAPTER,\n                            useExisting: forwardRef(() => NgrxRadioViewAdapter),\n                            multi: true,\n                        }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { value: [{\n                type: Input\n            }], ngrxFormControlState: [{\n                type: Input\n            }], onChange: [{\n                type: HostListener,\n                args: ['change']\n            }], onTouched: [{\n                type: HostListener,\n                args: ['blur']\n            }] } });\n\n// tslint:disable:directive-class-suffix\nclass NgrxRangeViewAdapter {\n    constructor(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.nativeIdWasSet = false;\n        this.onChange = () => void 0;\n        this.onTouched = () => void 0;\n    }\n    set ngrxFormControlState(value) {\n        if (!value) {\n            throw new Error('The control state must not be undefined!');\n        }\n        this.state = value;\n        const nativeId = this.elementRef.nativeElement.id;\n        const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\n        if (shouldSetNativeId) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\n        }\n    }\n    ngAfterViewInit() {\n        const nativeId = this.elementRef.nativeElement.id;\n        const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\n        if (shouldSetNativeId) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\n            this.nativeIdWasSet = true;\n        }\n    }\n    setViewValue(value) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', parseFloat(value));\n    }\n    setOnChangeCallback(fn) {\n        this.onChange = fn;\n    }\n    setOnTouchedCallback(fn) {\n        this.onTouched = fn;\n    }\n    setIsDisabled(isDisabled) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    handleInput({ target }) {\n        const value = target.value;\n        this.onChange(value === '' ? null : parseFloat(value));\n    }\n}\nNgrxRangeViewAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxRangeViewAdapter, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgrxRangeViewAdapter.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: NgrxRangeViewAdapter, selector: \"input[type=range][ngrxFormControlState]\", inputs: { ngrxFormControlState: \"ngrxFormControlState\" }, host: { listeners: { \"blur\": \"onTouched()\", \"change\": \"handleInput($event)\", \"input\": \"handleInput($event)\" } }, providers: [{\n            provide: NGRX_FORM_VIEW_ADAPTER,\n            useExisting: forwardRef(() => NgrxRangeViewAdapter),\n            multi: true,\n        }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxRangeViewAdapter, decorators: [{\n            type: Directive,\n            args: [{\n                    // tslint:disable-next-line:directive-selector\n                    selector: 'input[type=range][ngrxFormControlState]',\n                    providers: [{\n                            provide: NGRX_FORM_VIEW_ADAPTER,\n                            useExisting: forwardRef(() => NgrxRangeViewAdapter),\n                            multi: true,\n                        }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { onTouched: [{\n                type: HostListener,\n                args: ['blur']\n            }], ngrxFormControlState: [{\n                type: Input\n            }], handleInput: [{\n                type: HostListener,\n                args: ['change', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['input', ['$event']]\n            }] } });\n\nconst BUILTIN_ADAPTERS = [\n    NgrxCheckboxViewAdapter,\n    NgrxRangeViewAdapter,\n    NgrxNumberViewAdapter,\n    NgrxSelectViewAdapter,\n    NgrxSelectMultipleViewAdapter,\n    NgrxRadioViewAdapter,\n];\nfunction isBuiltInViewAdapter(viewAdapter) {\n    return BUILTIN_ADAPTERS.some(a => viewAdapter.constructor === a);\n}\nfunction selectViewAdapter(viewAdapters) {\n    if (!viewAdapters) {\n        throw new Error('No view adapter matches!');\n    }\n    let defaultAdapter;\n    let builtinAdapter;\n    let customAdapter;\n    viewAdapters.forEach((v) => {\n        if (v.constructor === NgrxDefaultViewAdapter) {\n            defaultAdapter = v;\n        }\n        else if (isBuiltInViewAdapter(v)) {\n            if (builtinAdapter) {\n                throw new Error('More than one built-in view adapter matches!');\n            }\n            builtinAdapter = v;\n        }\n        else {\n            if (customAdapter) {\n                throw new Error('More than one custom view adapter matches!');\n            }\n            customAdapter = v;\n        }\n    });\n    if (customAdapter) {\n        return customAdapter;\n    }\n    if (builtinAdapter) {\n        return builtinAdapter;\n    }\n    if (defaultAdapter) {\n        return defaultAdapter;\n    }\n    throw new Error('No valid view adapter!');\n}\n\n// tslint:disable-next-line:variable-name\nconst NgrxValueConverters = {\n    default() {\n        return {\n            convertViewToStateValue: value => typeof value === 'object' && value !== null ? box(value) : value,\n            convertStateToViewValue: unbox,\n        };\n    },\n    dateToISOString: {\n        convertViewToStateValue: date => date === null ? null : date.toISOString(),\n        convertStateToViewValue: s => s === null ? null : new Date(Date.parse(s)),\n    },\n    objectToJSON: {\n        convertViewToStateValue: value => value === null ? null : JSON.stringify(value),\n        convertStateToViewValue: s => s === null ? null : JSON.parse(s),\n    },\n};\n\nvar NGRX_UPDATE_ON_TYPE;\n(function (NGRX_UPDATE_ON_TYPE) {\n    NGRX_UPDATE_ON_TYPE[\"CHANGE\"] = \"change\";\n    NGRX_UPDATE_ON_TYPE[\"BLUR\"] = \"blur\";\n    NGRX_UPDATE_ON_TYPE[\"NEVER\"] = \"never\";\n})(NGRX_UPDATE_ON_TYPE || (NGRX_UPDATE_ON_TYPE = {}));\nclass ControlValueAccessorAdapter {\n    constructor(valueAccessor) {\n        this.valueAccessor = valueAccessor;\n    }\n    setViewValue(value) {\n        this.valueAccessor.writeValue(value);\n    }\n    setOnChangeCallback(fn) {\n        this.valueAccessor.registerOnChange(fn);\n    }\n    setOnTouchedCallback(fn) {\n        this.valueAccessor.registerOnTouched(fn);\n    }\n    setIsDisabled(isDisabled) {\n        if (this.valueAccessor.setDisabledState) {\n            this.valueAccessor.setDisabledState(isDisabled);\n        }\n    }\n}\nclass NgrxFormControlDirective {\n    constructor(el, \n    // for the dom parameter the `null` type must be last to ensure that in the compiled output\n    // there is no reference to the Document type to support non-browser platforms\n    dom, actionsSubject, viewAdapters, valueAccessors) {\n        this.el = el;\n        this.dom = dom;\n        this.actionsSubject = actionsSubject;\n        this.isInitialized = false;\n        this.focusTrackingIsEnabled = false;\n        this.ngrxUpdateOn = NGRX_UPDATE_ON_TYPE.CHANGE;\n        this.ngrxValueConverter = NgrxValueConverters.default();\n        viewAdapters = viewAdapters || [];\n        valueAccessors = valueAccessors || [];\n        if (valueAccessors.length > 1) {\n            throw new Error('More than one custom control value accessor matches!');\n        }\n        this.viewAdapter = valueAccessors.length > 0\n            ? new ControlValueAccessorAdapter(valueAccessors[0])\n            : selectViewAdapter(viewAdapters);\n    }\n    set ngrxFormControlState(newState) {\n        if (!newState) {\n            throw new Error('The control state must not be undefined!');\n        }\n        const oldState = this.state;\n        this.state = newState;\n        if (this.isInitialized) {\n            this.updateViewIfControlIdChanged(newState, oldState);\n            this.updateViewIfValueChanged(newState, oldState);\n            this.updateViewIfIsDisabledChanged(newState, oldState);\n            this.updateViewIfIsFocusedChanged(newState, oldState);\n        }\n    }\n    set ngrxEnableFocusTracking(value) {\n        if (value && !this.dom) {\n            throw new Error('focus tracking is only supported on the browser platform');\n        }\n        this.focusTrackingIsEnabled = value;\n    }\n    // TODO: move this into a separate directive\n    // automatically apply the attribute that's used by the CDK to set initial focus\n    get focusRegionStartAttr() {\n        return this.state && this.state.isFocused ? '' : null;\n    }\n    updateViewIfControlIdChanged(newState, oldState) {\n        if (oldState && newState.id === oldState.id) {\n            return;\n        }\n        this.stateValue = newState.value;\n        this.viewValue = this.ngrxValueConverter.convertStateToViewValue(this.stateValue);\n        this.viewAdapter.setViewValue(this.viewValue);\n        if (this.viewAdapter.setIsDisabled) {\n            this.viewAdapter.setIsDisabled(newState.isDisabled);\n        }\n    }\n    updateViewIfValueChanged(newState, _) {\n        if (newState.value === this.stateValue) {\n            return;\n        }\n        this.stateValue = newState.value;\n        this.viewValue = this.ngrxValueConverter.convertStateToViewValue(newState.value);\n        this.viewAdapter.setViewValue(this.viewValue);\n    }\n    updateViewIfIsDisabledChanged(newState, oldState) {\n        if (!this.viewAdapter.setIsDisabled) {\n            return;\n        }\n        if (oldState && newState.isDisabled === oldState.isDisabled) {\n            return;\n        }\n        this.viewAdapter.setIsDisabled(newState.isDisabled);\n    }\n    updateViewIfIsFocusedChanged(newState, oldState) {\n        if (!this.focusTrackingIsEnabled) {\n            return;\n        }\n        if (oldState && newState.isFocused === oldState.isFocused) {\n            return;\n        }\n        if (newState.isFocused) {\n            this.el.nativeElement.focus();\n        }\n        else {\n            this.el.nativeElement.blur();\n        }\n    }\n    dispatchAction(action) {\n        if (this.actionsSubject !== null) {\n            this.actionsSubject.next(action);\n        }\n        else {\n            throw new Error('ActionsSubject must be present in order to dispatch actions!');\n        }\n    }\n    ngOnInit() {\n        if (!this.state) {\n            throw new Error('The form state must not be undefined!');\n        }\n        this.isInitialized = true;\n        this.updateViewIfControlIdChanged(this.state, undefined);\n        this.updateViewIfValueChanged(this.state, undefined);\n        this.updateViewIfIsDisabledChanged(this.state, undefined);\n        this.updateViewIfIsFocusedChanged(this.state, undefined);\n        const dispatchMarkAsDirtyAction = () => {\n            if (this.state.isPristine) {\n                this.dispatchAction(new MarkAsDirtyAction(this.state.id));\n            }\n        };\n        const dispatchSetValueAction = () => {\n            this.stateValue = this.ngrxValueConverter.convertViewToStateValue(this.viewValue);\n            if (this.stateValue !== this.state.value) {\n                this.dispatchAction(new SetValueAction(this.state.id, this.stateValue));\n                dispatchMarkAsDirtyAction();\n            }\n        };\n        this.viewAdapter.setOnChangeCallback((viewValue) => {\n            this.viewValue = viewValue;\n            if (this.ngrxUpdateOn === NGRX_UPDATE_ON_TYPE.CHANGE) {\n                dispatchSetValueAction();\n            }\n        });\n        this.viewAdapter.setOnTouchedCallback(() => {\n            if (!this.state.isTouched && this.ngrxUpdateOn !== NGRX_UPDATE_ON_TYPE.NEVER) {\n                this.dispatchAction(new MarkAsTouchedAction(this.state.id));\n            }\n            if (this.ngrxUpdateOn === NGRX_UPDATE_ON_TYPE.BLUR) {\n                dispatchSetValueAction();\n            }\n        });\n    }\n    ngAfterViewInit() {\n        // we need to update the view again after it was initialized since some\n        // controls depend on child elements for setting the value (e.g. selects)\n        this.viewAdapter.setViewValue(this.viewValue);\n        if (this.viewAdapter.setIsDisabled) {\n            this.viewAdapter.setIsDisabled(this.state.isDisabled);\n        }\n    }\n    onFocusChange() {\n        if (!this.focusTrackingIsEnabled) {\n            return;\n        }\n        const isControlFocused = this.el.nativeElement === this.dom.activeElement;\n        if (isControlFocused !== this.state.isFocused) {\n            this.dispatchAction(isControlFocused ? new FocusAction(this.state.id) : new UnfocusAction(this.state.id));\n        }\n    }\n}\nNgrxFormControlDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxFormControlDirective, deps: [{ token: i0.ElementRef }, { token: DOCUMENT, optional: true }, { token: ActionsSubject, optional: true }, { token: NGRX_FORM_VIEW_ADAPTER, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgrxFormControlDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: NgrxFormControlDirective, selector: \":not([ngrxFormsAction])[ngrxFormControlState]\", inputs: { ngrxFormControlState: \"ngrxFormControlState\", ngrxUpdateOn: \"ngrxUpdateOn\", ngrxEnableFocusTracking: \"ngrxEnableFocusTracking\", ngrxValueConverter: \"ngrxValueConverter\" }, host: { listeners: { \"focusin\": \"onFocusChange()\", \"focusout\": \"onFocusChange()\" }, properties: { \"attr.cdk-focus-region-start\": \"this.focusRegionStartAttr\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxFormControlDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // tslint:disable-next-line:directive-selector\n                    selector: ':not([ngrxFormsAction])[ngrxFormControlState]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.ActionsSubject, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ActionsSubject]\n                }] }, { type: undefined, decorators: [{\n                    type: Self\n                }, {\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NGRX_FORM_VIEW_ADAPTER]\n                }] }, { type: undefined, decorators: [{\n                    type: Self\n                }, {\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }]; }, propDecorators: { ngrxFormControlState: [{\n                type: Input\n            }], ngrxUpdateOn: [{\n                type: Input\n            }], ngrxEnableFocusTracking: [{\n                type: Input\n            }], ngrxValueConverter: [{\n                type: Input\n            }], focusRegionStartAttr: [{\n                type: HostBinding,\n                args: ['attr.cdk-focus-region-start']\n            }], onFocusChange: [{\n                type: HostListener,\n                args: ['focusin']\n            }, {\n                type: HostListener,\n                args: ['focusout']\n            }] } });\n\nclass NgrxLocalFormControlDirective extends NgrxFormControlDirective {\n    constructor(el, dom, viewAdapters, valueAccessors) {\n        super(el, dom, null, viewAdapters, valueAccessors);\n        this.ngrxFormsAction = new EventEmitter();\n    }\n    dispatchAction(action) {\n        this.ngrxFormsAction.emit(action);\n    }\n}\nNgrxLocalFormControlDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxLocalFormControlDirective, deps: [{ token: i0.ElementRef }, { token: DOCUMENT, optional: true }, { token: NGRX_FORM_VIEW_ADAPTER, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgrxLocalFormControlDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: NgrxLocalFormControlDirective, selector: \"[ngrxFormControlState][ngrxFormsAction]\", outputs: { ngrxFormsAction: \"ngrxFormsAction\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxLocalFormControlDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // tslint:disable-next-line:directive-selector\n                    selector: '[ngrxFormControlState][ngrxFormsAction]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Self\n                }, {\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NGRX_FORM_VIEW_ADAPTER]\n                }] }, { type: undefined, decorators: [{\n                    type: Self\n                }, {\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }]; }, propDecorators: { ngrxFormsAction: [{\n                type: Output\n            }] } });\n\nclass NgrxFormDirective {\n    constructor(actionsSubject) {\n        this.actionsSubject = actionsSubject;\n        this.actionsSubject = actionsSubject;\n    }\n    dispatchAction(action) {\n        if (this.actionsSubject !== null) {\n            this.actionsSubject.next(action);\n        }\n        else {\n            throw new Error('ActionsSubject must be present in order to dispatch actions!');\n        }\n    }\n    ngOnInit() {\n        if (!this.state) {\n            throw new Error('The form state must not be undefined!');\n        }\n    }\n    onSubmit(event) {\n        event.preventDefault();\n        if (this.state.isUnsubmitted) {\n            this.dispatchAction(new MarkAsSubmittedAction(this.state.id));\n        }\n    }\n}\nNgrxFormDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxFormDirective, deps: [{ token: ActionsSubject, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgrxFormDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: NgrxFormDirective, selector: \"form:not([ngrxFormsAction])[ngrxFormState]\", inputs: { state: [\"ngrxFormState\", \"state\"] }, host: { listeners: { \"submit\": \"onSubmit($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxFormDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // tslint:disable-next-line:directive-selector\n                    selector: 'form:not([ngrxFormsAction])[ngrxFormState]',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.ActionsSubject, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ActionsSubject]\n                }] }]; }, propDecorators: { state: [{\n                type: Input,\n                args: ['ngrxFormState']\n            }], onSubmit: [{\n                type: HostListener,\n                args: ['submit', ['$event']]\n            }] } });\n\nclass NgrxLocalFormDirective extends NgrxFormDirective {\n    constructor() {\n        super(null);\n        this.ngrxFormsAction = new EventEmitter();\n    }\n    dispatchAction(action) {\n        this.ngrxFormsAction.emit(action);\n    }\n}\nNgrxLocalFormDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxLocalFormDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNgrxLocalFormDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: NgrxLocalFormDirective, selector: \"form[ngrxFormState][ngrxFormsAction]\", outputs: { ngrxFormsAction: \"ngrxFormsAction\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxLocalFormDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // tslint:disable-next-line:directive-selector\n                    selector: 'form[ngrxFormState][ngrxFormsAction]',\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { ngrxFormsAction: [{\n                type: Output\n            }] } });\n\n/**\n * Lists the available status class names based on the property\n * they are depending on.\n */\nconst NGRX_STATUS_CLASS_NAMES = {\n    isValid: 'ngrx-forms-valid',\n    isInvalid: 'ngrx-forms-invalid',\n    isDirty: 'ngrx-forms-dirty',\n    isPristine: 'ngrx-forms-pristine',\n    isTouched: 'ngrx-forms-touched',\n    isUntouched: 'ngrx-forms-untouched',\n    isSubmitted: 'ngrx-forms-submitted',\n    isUnsubmitted: 'ngrx-forms-unsubmitted',\n    isValidationPending: 'ngrx-forms-validation-pending',\n};\nclass NgrxStatusCssClassesDirective {\n    set ngrxFormControlState(state) {\n        this.state = state;\n    }\n    set ngrxFormState(state) {\n        this.state = state;\n    }\n    get isValid() {\n        return this.state.isValid;\n    }\n    get isInvalid() {\n        return this.state.isInvalid;\n    }\n    get isDirty() {\n        return this.state.isDirty;\n    }\n    get isPristine() {\n        return this.state.isPristine;\n    }\n    get isTouched() {\n        return this.state.isTouched;\n    }\n    get isUntouched() {\n        return this.state.isUntouched;\n    }\n    get isSubmitted() {\n        return this.state.isSubmitted;\n    }\n    get isUnsubmitted() {\n        return this.state.isUnsubmitted;\n    }\n    get isValidationPending() {\n        return this.state.isValidationPending;\n    }\n}\nNgrxStatusCssClassesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxStatusCssClassesDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNgrxStatusCssClassesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: NgrxStatusCssClassesDirective, selector: \"form[ngrxFormState],[ngrxFormControlState]\", inputs: { ngrxFormControlState: \"ngrxFormControlState\", ngrxFormState: \"ngrxFormState\" }, host: { properties: { \"class.ngrx-forms-valid\": \"this.isValid\", \"class.ngrx-forms-invalid\": \"this.isInvalid\", \"class.ngrx-forms-dirty\": \"this.isDirty\", \"class.ngrx-forms-pristine\": \"this.isPristine\", \"class.ngrx-forms-touched\": \"this.isTouched\", \"class.ngrx-forms-untouched\": \"this.isUntouched\", \"class.ngrx-forms-submitted\": \"this.isSubmitted\", \"class.ngrx-forms-unsubmitted\": \"this.isUnsubmitted\", \"class.ngrx-forms-validation-pending\": \"this.isValidationPending\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxStatusCssClassesDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // tslint:disable-next-line:directive-selector\n                    selector: 'form[ngrxFormState],[ngrxFormControlState]',\n                }]\n        }], propDecorators: { ngrxFormControlState: [{\n                type: Input\n            }], ngrxFormState: [{\n                type: Input\n            }], isValid: [{\n                type: HostBinding,\n                args: [`class.${NGRX_STATUS_CLASS_NAMES.isValid}`]\n            }], isInvalid: [{\n                type: HostBinding,\n                args: [`class.${NGRX_STATUS_CLASS_NAMES.isInvalid}`]\n            }], isDirty: [{\n                type: HostBinding,\n                args: [`class.${NGRX_STATUS_CLASS_NAMES.isDirty}`]\n            }], isPristine: [{\n                type: HostBinding,\n                args: [`class.${NGRX_STATUS_CLASS_NAMES.isPristine}`]\n            }], isTouched: [{\n                type: HostBinding,\n                args: [`class.${NGRX_STATUS_CLASS_NAMES.isTouched}`]\n            }], isUntouched: [{\n                type: HostBinding,\n                args: [`class.${NGRX_STATUS_CLASS_NAMES.isUntouched}`]\n            }], isSubmitted: [{\n                type: HostBinding,\n                args: [`class.${NGRX_STATUS_CLASS_NAMES.isSubmitted}`]\n            }], isUnsubmitted: [{\n                type: HostBinding,\n                args: [`class.${NGRX_STATUS_CLASS_NAMES.isUnsubmitted}`]\n            }], isValidationPending: [{\n                type: HostBinding,\n                args: [`class.${NGRX_STATUS_CLASS_NAMES.isValidationPending}`]\n            }] } });\n\nconst exportsAndDeclarations = [\n    NgrxFormControlDirective,\n    NgrxLocalFormControlDirective,\n    NgrxFormDirective,\n    NgrxLocalFormDirective,\n    NgrxCheckboxViewAdapter,\n    NgrxDefaultViewAdapter,\n    NgrxNumberViewAdapter,\n    NgrxRadioViewAdapter,\n    NgrxRangeViewAdapter,\n    NgrxSelectMultipleOption,\n    NgrxSelectMultipleViewAdapter,\n    NgrxSelectOption,\n    NgrxSelectViewAdapter,\n    NgrxFallbackSelectOption,\n    NgrxStatusCssClassesDirective,\n];\nclass NgrxFormsModule {\n}\nNgrxFormsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxFormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgrxFormsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxFormsModule, declarations: [NgrxFormControlDirective,\n        NgrxLocalFormControlDirective,\n        NgrxFormDirective,\n        NgrxLocalFormDirective,\n        NgrxCheckboxViewAdapter,\n        NgrxDefaultViewAdapter,\n        NgrxNumberViewAdapter,\n        NgrxRadioViewAdapter,\n        NgrxRangeViewAdapter,\n        NgrxSelectMultipleOption,\n        NgrxSelectMultipleViewAdapter,\n        NgrxSelectOption,\n        NgrxSelectViewAdapter,\n        NgrxFallbackSelectOption,\n        NgrxStatusCssClassesDirective], exports: [NgrxFormControlDirective,\n        NgrxLocalFormControlDirective,\n        NgrxFormDirective,\n        NgrxLocalFormDirective,\n        NgrxCheckboxViewAdapter,\n        NgrxDefaultViewAdapter,\n        NgrxNumberViewAdapter,\n        NgrxRadioViewAdapter,\n        NgrxRangeViewAdapter,\n        NgrxSelectMultipleOption,\n        NgrxSelectMultipleViewAdapter,\n        NgrxSelectOption,\n        NgrxSelectViewAdapter,\n        NgrxFallbackSelectOption,\n        NgrxStatusCssClassesDirective] });\nNgrxFormsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxFormsModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: NgrxFormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: exportsAndDeclarations,\n                    exports: exportsAndDeclarations,\n                }]\n        }] });\n\n/**\n * ngrx-forms\n * Proper integration of forms in Angular applications using Ngrx\n * Written by Jonathan Ziller.\n * MIT license.\n * https://github.com/MrWolfZ/ngrx-forms\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ALL_NGRX_FORMS_ACTION_TYPES, AddArrayControlAction, AddGroupControlAction, ClearAsyncErrorAction, DisableAction, EnableAction, FocusAction, MarkAsDirtyAction, MarkAsPristineAction, MarkAsSubmittedAction, MarkAsTouchedAction, MarkAsUnsubmittedAction, MarkAsUntouchedAction, MoveArrayControlAction, NGRX_FORM_VIEW_ADAPTER, NGRX_STATUS_CLASS_NAMES, NGRX_UPDATE_ON_TYPE, NgrxCheckboxViewAdapter, NgrxDefaultViewAdapter, NgrxFallbackSelectOption, NgrxFormControlDirective, NgrxFormDirective, NgrxFormsModule, NgrxLocalFormControlDirective, NgrxLocalFormDirective, NgrxNumberViewAdapter, NgrxRadioViewAdapter, NgrxRangeViewAdapter, NgrxSelectMultipleOption, NgrxSelectMultipleViewAdapter, NgrxSelectOption, NgrxSelectViewAdapter, NgrxStatusCssClassesDirective, NgrxValueConverters, RemoveArrayControlAction, RemoveGroupControlAction, ResetAction, SetAsyncErrorAction, SetErrorsAction, SetUserDefinedPropertyAction, SetValueAction, StartAsyncValidationAction, SwapArrayControlAction, UnfocusAction, addArrayControl, addGroupControl, box, clearAsyncError, compose, createFormArrayState, createFormControlState, createFormGroupState, createFormStateReducerWithUpdate, disable, enable, focus, formArrayReducer, formControlReducer, formGroupReducer, formStateReducer, isArrayState, isBoxed, isGroupState, isNgrxFormsAction, markAsDirty, markAsPristine, markAsSubmitted, markAsTouched, markAsUnsubmitted, markAsUntouched, moveArrayControl, onNgrxForms, onNgrxFormsAction, removeArrayControl, removeGroupControl, reset, setAsyncError, setErrors, setUserDefinedProperty, setValue, startAsyncValidation, swapArrayControl, unbox, unfocus, updateArray, updateArrayWithFilter, updateGroup, updateRecursive, validate, wrapReducerWithFormStateUpdate };\n"]},"metadata":{},"sourceType":"module"}